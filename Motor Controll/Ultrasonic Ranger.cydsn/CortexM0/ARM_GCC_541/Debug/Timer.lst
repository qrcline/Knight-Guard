ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_initVar
  20              		.bss
  21              		.type	Timer_initVar, %object
  22              		.size	Timer_initVar, 1
  23              	Timer_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	Timer_Init, %function
  31              	Timer_Init:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\Timer.c"
   1:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:Generated_Source\PSoC4/Timer.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer.c **** *
   5:Generated_Source\PSoC4/Timer.c **** * Description:
   6:Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:Generated_Source\PSoC4/Timer.c **** *  component
   8:Generated_Source\PSoC4/Timer.c **** *
   9:Generated_Source\PSoC4/Timer.c **** * Note:
  10:Generated_Source\PSoC4/Timer.c **** *  None
  11:Generated_Source\PSoC4/Timer.c **** *
  12:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer.c **** 
  19:Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:Generated_Source\PSoC4/Timer.c **** 
  21:Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  22:Generated_Source\PSoC4/Timer.c **** 
  23:Generated_Source\PSoC4/Timer.c **** 
  24:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 2


  25:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  26:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer.c **** *
  28:Generated_Source\PSoC4/Timer.c **** * Summary:
  29:Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  30:Generated_Source\PSoC4/Timer.c **** *
  31:Generated_Source\PSoC4/Timer.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer.c **** *  None
  33:Generated_Source\PSoC4/Timer.c **** *
  34:Generated_Source\PSoC4/Timer.c **** * Return:
  35:Generated_Source\PSoC4/Timer.c **** *  None
  36:Generated_Source\PSoC4/Timer.c **** *
  37:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  39:Generated_Source\PSoC4/Timer.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/Timer.c **** 
  41:Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  43:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer.c ****         
  45:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer.c **** 
  48:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer.c ****         
  51:Generated_Source\PSoC4/Timer.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer.c ****         Timer_SetCounterMode(Timer_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCounter(Timer_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  56:Generated_Source\PSoC4/Timer.c **** 
  57:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  58:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_TIMER_BASE_CONFIG;
  44              		.loc 1 58 0
  45 0004 094B     		ldr	r3, .L2
  46 0006 8122     		movs	r2, #129
  47 0008 9204     		lsls	r2, r2, #18
  48 000a 1A60     		str	r2, [r3]
  59:Generated_Source\PSoC4/Timer.c ****         
  60:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_TIMER_SIGNALS_MODES;
  49              		.loc 1 61 0
  50 000c 084B     		ldr	r3, .L2+4
  51 000e 4D22     		movs	r2, #77
  52 0010 1A60     		str	r2, [r3]
  62:Generated_Source\PSoC4/Timer.c ****     
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 3


  63:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
  53              		.loc 1 64 0
  54 0012 0220     		movs	r0, #2
  55 0014 FFF7FEFF 		bl	Timer_SetInterruptMode
  65:Generated_Source\PSoC4/Timer.c ****         
  66:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
  56              		.loc 1 67 0
  57 0018 064B     		ldr	r3, .L2+8
  58 001a 1800     		movs	r0, r3
  59 001c FFF7FEFF 		bl	Timer_WritePeriod
  68:Generated_Source\PSoC4/Timer.c **** 
  69:Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer.c **** 
  72:Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer.c **** 
  78:Generated_Source\PSoC4/Timer.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer.c ****         #if (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer.c ****         #elif(Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer.c ****         #else
  84:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(0u);
  60              		.loc 1 84 0
  61 0020 0020     		movs	r0, #0
  62 0022 FFF7FEFF 		bl	Timer_WriteCounter
  85:Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  87:Generated_Source\PSoC4/Timer.c **** 
  88:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  89:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer.c **** 
  91:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  92:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer.c ****         #else
  95:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_ALIGN | Timer_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/Timer.c ****             
  97:Generated_Source\PSoC4/Timer.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer.c ****             #if (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer.c ****             #elif (Timer__RIGHT == Timer_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer.c ****             #else 
 103:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer.c **** 
 107:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
 108:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 4


 110:Generated_Source\PSoC4/Timer.c **** 
 111:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
 112:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer.c **** 
 115:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer.c ****     
 118:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer.c **** 
 121:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 123:Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer.c ****         #else
 128:Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer.c **** 
 132:Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer.c **** 
 136:Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
 137:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer.c **** 
 140:Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer.c **** 
 145:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer.c **** 
 149:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer.c **** 
 154:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 159:Generated_Source\PSoC4/Timer.c ****     
 160:Generated_Source\PSoC4/Timer.c **** }
  63              		.loc 1 160 0
  64 0026 C046     		nop
  65 0028 BD46     		mov	sp, r7
  66              		@ sp needed
  67 002a 80BD     		pop	{r7, pc}
  68              	.L3:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 5


  69              		.align	2
  70              	.L2:
  71 002c 00010540 		.word	1074069760
  72 0030 24010540 		.word	1074069796
  73 0034 FFFF0000 		.word	65535
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	Timer_Init, .-Timer_Init
  77              		.section	.text.Timer_Enable,"ax",%progbits
  78              		.align	2
  79              		.global	Timer_Enable
  80              		.code	16
  81              		.thumb_func
  82              		.type	Timer_Enable, %function
  83              	Timer_Enable:
  84              	.LFB1:
 161:Generated_Source\PSoC4/Timer.c **** 
 162:Generated_Source\PSoC4/Timer.c **** 
 163:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 165:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer.c **** *
 167:Generated_Source\PSoC4/Timer.c **** * Summary:
 168:Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 169:Generated_Source\PSoC4/Timer.c **** *
 170:Generated_Source\PSoC4/Timer.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer.c **** *  None
 172:Generated_Source\PSoC4/Timer.c **** *
 173:Generated_Source\PSoC4/Timer.c **** * Return:
 174:Generated_Source\PSoC4/Timer.c **** *  None
 175:Generated_Source\PSoC4/Timer.c **** *
 176:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 178:Generated_Source\PSoC4/Timer.c **** {
  85              		.loc 1 178 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 8
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 90B5     		push	{r4, r7, lr}
  90              		.cfi_def_cfa_offset 12
  91              		.cfi_offset 4, -12
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 83B0     		sub	sp, sp, #12
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer.c **** 
 181:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
  98              		.loc 1 181 0
  99 0006 FC1D     		adds	r4, r7, #7
 100 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 101 000c 0300     		movs	r3, r0
 102 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
 103              		.loc 1 182 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 6


 104 0010 074B     		ldr	r3, .L5
 105 0012 074A     		ldr	r2, .L5
 106 0014 1268     		ldr	r2, [r2]
 107 0016 0121     		movs	r1, #1
 108 0018 0A43     		orrs	r2, r1
 109 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 110              		.loc 1 183 0
 111 001c FB1D     		adds	r3, r7, #7
 112 001e 1B78     		ldrb	r3, [r3]
 113 0020 1800     		movs	r0, r3
 114 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/Timer.c **** 
 185:Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 187:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 189:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
 191:Generated_Source\PSoC4/Timer.c **** 
 192:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 193:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 195:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 197:Generated_Source\PSoC4/Timer.c ****     
 198:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
 199:Generated_Source\PSoC4/Timer.c ****         #if (0u != Timer_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u != Timer_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
 203:Generated_Source\PSoC4/Timer.c **** }
 115              		.loc 1 203 0
 116 0026 C046     		nop
 117 0028 BD46     		mov	sp, r7
 118 002a 03B0     		add	sp, sp, #12
 119              		@ sp needed
 120 002c 90BD     		pop	{r4, r7, pc}
 121              	.L6:
 122 002e C046     		.align	2
 123              	.L5:
 124 0030 00000540 		.word	1074069504
 125              		.cfi_endproc
 126              	.LFE1:
 127              		.size	Timer_Enable, .-Timer_Enable
 128              		.section	.text.Timer_Start,"ax",%progbits
 129              		.align	2
 130              		.global	Timer_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	Timer_Start, %function
 134              	Timer_Start:
 135              	.LFB2:
 204:Generated_Source\PSoC4/Timer.c **** 
 205:Generated_Source\PSoC4/Timer.c **** 
 206:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 7


 208:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer.c **** *
 210:Generated_Source\PSoC4/Timer.c **** * Summary:
 211:Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 212:Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 213:Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer.c **** *
 216:Generated_Source\PSoC4/Timer.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer.c **** *  None
 218:Generated_Source\PSoC4/Timer.c **** *
 219:Generated_Source\PSoC4/Timer.c **** * Return:
 220:Generated_Source\PSoC4/Timer.c **** *  None
 221:Generated_Source\PSoC4/Timer.c **** *
 222:Generated_Source\PSoC4/Timer.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 228:Generated_Source\PSoC4/Timer.c **** *
 229:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 231:Generated_Source\PSoC4/Timer.c **** {
 136              		.loc 1 231 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 146              		.loc 1 232 0
 147 0004 064B     		ldr	r3, .L9
 148 0006 1B78     		ldrb	r3, [r3]
 149 0008 002B     		cmp	r3, #0
 150 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/Timer.c ****     {
 234:Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 151              		.loc 1 234 0
 152 000c FFF7FEFF 		bl	Timer_Init
 235:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 153              		.loc 1 235 0
 154 0010 034B     		ldr	r3, .L9
 155 0012 0122     		movs	r2, #1
 156 0014 1A70     		strb	r2, [r3]
 157              	.L8:
 236:Generated_Source\PSoC4/Timer.c ****     }
 237:Generated_Source\PSoC4/Timer.c **** 
 238:Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 158              		.loc 1 238 0
 159 0016 FFF7FEFF 		bl	Timer_Enable
 239:Generated_Source\PSoC4/Timer.c **** }
 160              		.loc 1 239 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 8


 161 001a C046     		nop
 162 001c BD46     		mov	sp, r7
 163              		@ sp needed
 164 001e 80BD     		pop	{r7, pc}
 165              	.L10:
 166              		.align	2
 167              	.L9:
 168 0020 00000000 		.word	Timer_initVar
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	Timer_Start, .-Timer_Start
 172              		.section	.text.Timer_Stop,"ax",%progbits
 173              		.align	2
 174              		.global	Timer_Stop
 175              		.code	16
 176              		.thumb_func
 177              		.type	Timer_Stop, %function
 178              	Timer_Stop:
 179              	.LFB3:
 240:Generated_Source\PSoC4/Timer.c **** 
 241:Generated_Source\PSoC4/Timer.c **** 
 242:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 244:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer.c **** *
 246:Generated_Source\PSoC4/Timer.c **** * Summary:
 247:Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 248:Generated_Source\PSoC4/Timer.c **** *
 249:Generated_Source\PSoC4/Timer.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer.c **** *  None
 251:Generated_Source\PSoC4/Timer.c **** *
 252:Generated_Source\PSoC4/Timer.c **** * Return:
 253:Generated_Source\PSoC4/Timer.c **** *  None
 254:Generated_Source\PSoC4/Timer.c **** *
 255:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 257:Generated_Source\PSoC4/Timer.c **** {
 180              		.loc 1 257 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 90B5     		push	{r4, r7, lr}
 185              		.cfi_def_cfa_offset 12
 186              		.cfi_offset 4, -12
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 83B0     		sub	sp, sp, #12
 190              		.cfi_def_cfa_offset 24
 191 0004 00AF     		add	r7, sp, #0
 192              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer.c **** 
 260:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 193              		.loc 1 260 0
 194 0006 FC1D     		adds	r4, r7, #7
 195 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 196 000c 0300     		movs	r3, r0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 9


 197 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/Timer.c **** 
 262:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
 198              		.loc 1 262 0
 199 0010 074B     		ldr	r3, .L12
 200 0012 074A     		ldr	r2, .L12
 201 0014 1268     		ldr	r2, [r2]
 202 0016 0121     		movs	r1, #1
 203 0018 8A43     		bics	r2, r1
 204 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/Timer.c **** 
 264:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 205              		.loc 1 264 0
 206 001c FB1D     		adds	r3, r7, #7
 207 001e 1B78     		ldrb	r3, [r3]
 208 0020 1800     		movs	r0, r3
 209 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/Timer.c **** }
 210              		.loc 1 265 0
 211 0026 C046     		nop
 212 0028 BD46     		mov	sp, r7
 213 002a 03B0     		add	sp, sp, #12
 214              		@ sp needed
 215 002c 90BD     		pop	{r4, r7, pc}
 216              	.L13:
 217 002e C046     		.align	2
 218              	.L12:
 219 0030 00000540 		.word	1074069504
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	Timer_Stop, .-Timer_Stop
 223              		.section	.text.Timer_SetMode,"ax",%progbits
 224              		.align	2
 225              		.global	Timer_SetMode
 226              		.code	16
 227              		.thumb_func
 228              		.type	Timer_SetMode, %function
 229              	Timer_SetMode:
 230              	.LFB4:
 266:Generated_Source\PSoC4/Timer.c **** 
 267:Generated_Source\PSoC4/Timer.c **** 
 268:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 270:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer.c **** *
 272:Generated_Source\PSoC4/Timer.c **** * Summary:
 273:Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 274:Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer.c **** *
 277:Generated_Source\PSoC4/Timer.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 279:Generated_Source\PSoC4/Timer.c **** *   Values:
 280:Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 10


 284:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer.c **** *
 289:Generated_Source\PSoC4/Timer.c **** * Return:
 290:Generated_Source\PSoC4/Timer.c **** *  None
 291:Generated_Source\PSoC4/Timer.c **** *
 292:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer.c **** {
 231              		.loc 1 294 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 16
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 90B5     		push	{r4, r7, lr}
 236              		.cfi_def_cfa_offset 12
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 85B0     		sub	sp, sp, #20
 241              		.cfi_def_cfa_offset 32
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 244 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer.c **** 
 297:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 245              		.loc 1 297 0
 246 0008 0F23     		movs	r3, #15
 247 000a FC18     		adds	r4, r7, r3
 248 000c FFF7FEFF 		bl	CyEnterCriticalSection
 249 0010 0300     		movs	r3, r0
 250 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/Timer.c **** 
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 251              		.loc 1 299 0
 252 0014 0A4B     		ldr	r3, .L15
 253 0016 0A4A     		ldr	r2, .L15
 254 0018 1268     		ldr	r2, [r2]
 255 001a 0A49     		ldr	r1, .L15+4
 256 001c 0A40     		ands	r2, r1
 257 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 258              		.loc 1 300 0
 259 0020 074B     		ldr	r3, .L15
 260 0022 074A     		ldr	r2, .L15
 261 0024 1168     		ldr	r1, [r2]
 262 0026 7A68     		ldr	r2, [r7, #4]
 263 0028 0A43     		orrs	r2, r1
 264 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/Timer.c **** 
 302:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 265              		.loc 1 302 0
 266 002c 0F23     		movs	r3, #15
 267 002e FB18     		adds	r3, r7, r3
 268 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 11


 269 0032 1800     		movs	r0, r3
 270 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/Timer.c **** }
 271              		.loc 1 303 0
 272 0038 C046     		nop
 273 003a BD46     		mov	sp, r7
 274 003c 05B0     		add	sp, sp, #20
 275              		@ sp needed
 276 003e 90BD     		pop	{r4, r7, pc}
 277              	.L16:
 278              		.align	2
 279              	.L15:
 280 0040 00010540 		.word	1074069760
 281 0044 FFFFFFF8 		.word	-117440513
 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	Timer_SetMode, .-Timer_SetMode
 285              		.section	.text.Timer_SetQDMode,"ax",%progbits
 286              		.align	2
 287              		.global	Timer_SetQDMode
 288              		.code	16
 289              		.thumb_func
 290              		.type	Timer_SetQDMode, %function
 291              	Timer_SetQDMode:
 292              	.LFB5:
 304:Generated_Source\PSoC4/Timer.c **** 
 305:Generated_Source\PSoC4/Timer.c **** 
 306:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
 308:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer.c **** *
 310:Generated_Source\PSoC4/Timer.c **** * Summary:
 311:Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer.c **** *
 314:Generated_Source\PSoC4/Timer.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer.c **** *   Values:
 317:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer.c **** *
 322:Generated_Source\PSoC4/Timer.c **** * Return:
 323:Generated_Source\PSoC4/Timer.c **** *  None
 324:Generated_Source\PSoC4/Timer.c **** *
 325:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer.c **** {
 293              		.loc 1 327 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 16
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297 0000 90B5     		push	{r4, r7, lr}
 298              		.cfi_def_cfa_offset 12
 299              		.cfi_offset 4, -12
 300              		.cfi_offset 7, -8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 12


 301              		.cfi_offset 14, -4
 302 0002 85B0     		sub	sp, sp, #20
 303              		.cfi_def_cfa_offset 32
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer.c **** 
 330:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 307              		.loc 1 330 0
 308 0008 0F23     		movs	r3, #15
 309 000a FC18     		adds	r4, r7, r3
 310 000c FFF7FEFF 		bl	CyEnterCriticalSection
 311 0010 0300     		movs	r3, r0
 312 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/Timer.c **** 
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 313              		.loc 1 332 0
 314 0014 0A4B     		ldr	r3, .L18
 315 0016 0A4A     		ldr	r2, .L18
 316 0018 1268     		ldr	r2, [r2]
 317 001a 0A49     		ldr	r1, .L18+4
 318 001c 0A40     		ands	r2, r1
 319 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 320              		.loc 1 333 0
 321 0020 074B     		ldr	r3, .L18
 322 0022 074A     		ldr	r2, .L18
 323 0024 1168     		ldr	r1, [r2]
 324 0026 7A68     		ldr	r2, [r7, #4]
 325 0028 0A43     		orrs	r2, r1
 326 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/Timer.c **** 
 335:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 327              		.loc 1 335 0
 328 002c 0F23     		movs	r3, #15
 329 002e FB18     		adds	r3, r7, r3
 330 0030 1B78     		ldrb	r3, [r3]
 331 0032 1800     		movs	r0, r3
 332 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/Timer.c **** }
 333              		.loc 1 336 0
 334 0038 C046     		nop
 335 003a BD46     		mov	sp, r7
 336 003c 05B0     		add	sp, sp, #20
 337              		@ sp needed
 338 003e 90BD     		pop	{r4, r7, pc}
 339              	.L19:
 340              		.align	2
 341              	.L18:
 342 0040 00010540 		.word	1074069760
 343 0044 FFFF8FFF 		.word	-7340033
 344              		.cfi_endproc
 345              	.LFE5:
 346              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 347              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 348              		.align	2
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 13


 349              		.global	Timer_SetPrescaler
 350              		.code	16
 351              		.thumb_func
 352              		.type	Timer_SetPrescaler, %function
 353              	Timer_SetPrescaler:
 354              	.LFB6:
 337:Generated_Source\PSoC4/Timer.c **** 
 338:Generated_Source\PSoC4/Timer.c **** 
 339:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 341:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer.c **** *
 343:Generated_Source\PSoC4/Timer.c **** * Summary:
 344:Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer.c **** *
 347:Generated_Source\PSoC4/Timer.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer.c **** *   Values:
 350:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer.c **** *
 359:Generated_Source\PSoC4/Timer.c **** * Return:
 360:Generated_Source\PSoC4/Timer.c **** *  None
 361:Generated_Source\PSoC4/Timer.c **** *
 362:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer.c **** {
 355              		.loc 1 364 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 16
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359 0000 90B5     		push	{r4, r7, lr}
 360              		.cfi_def_cfa_offset 12
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 85B0     		sub	sp, sp, #20
 365              		.cfi_def_cfa_offset 32
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/Timer.c **** 
 367:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 369              		.loc 1 367 0
 370 0008 0F23     		movs	r3, #15
 371 000a FC18     		adds	r4, r7, r3
 372 000c FFF7FEFF 		bl	CyEnterCriticalSection
 373 0010 0300     		movs	r3, r0
 374 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 14


 368:Generated_Source\PSoC4/Timer.c **** 
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 375              		.loc 1 369 0
 376 0014 0A4B     		ldr	r3, .L21
 377 0016 0A4A     		ldr	r2, .L21
 378 0018 1268     		ldr	r2, [r2]
 379 001a 0A49     		ldr	r1, .L21+4
 380 001c 0A40     		ands	r2, r1
 381 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 382              		.loc 1 370 0
 383 0020 074B     		ldr	r3, .L21
 384 0022 074A     		ldr	r2, .L21
 385 0024 1168     		ldr	r1, [r2]
 386 0026 7A68     		ldr	r2, [r7, #4]
 387 0028 0A43     		orrs	r2, r1
 388 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/Timer.c **** 
 372:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 389              		.loc 1 372 0
 390 002c 0F23     		movs	r3, #15
 391 002e FB18     		adds	r3, r7, r3
 392 0030 1B78     		ldrb	r3, [r3]
 393 0032 1800     		movs	r0, r3
 394 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/Timer.c **** }
 395              		.loc 1 373 0
 396 0038 C046     		nop
 397 003a BD46     		mov	sp, r7
 398 003c 05B0     		add	sp, sp, #20
 399              		@ sp needed
 400 003e 90BD     		pop	{r4, r7, pc}
 401              	.L22:
 402              		.align	2
 403              	.L21:
 404 0040 00010540 		.word	1074069760
 405 0044 FF00FFFF 		.word	-65281
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
 409              		.section	.text.Timer_SetOneShot,"ax",%progbits
 410              		.align	2
 411              		.global	Timer_SetOneShot
 412              		.code	16
 413              		.thumb_func
 414              		.type	Timer_SetOneShot, %function
 415              	Timer_SetOneShot:
 416              	.LFB7:
 374:Generated_Source\PSoC4/Timer.c **** 
 375:Generated_Source\PSoC4/Timer.c **** 
 376:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 378:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer.c **** *
 380:Generated_Source\PSoC4/Timer.c **** * Summary:
 381:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 382:Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 15


 383:Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer.c **** *
 385:Generated_Source\PSoC4/Timer.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer.c **** *   Values:
 388:Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer.c **** *
 391:Generated_Source\PSoC4/Timer.c **** * Return:
 392:Generated_Source\PSoC4/Timer.c **** *  None
 393:Generated_Source\PSoC4/Timer.c **** *
 394:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer.c **** {
 417              		.loc 1 396 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 16
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421 0000 90B5     		push	{r4, r7, lr}
 422              		.cfi_def_cfa_offset 12
 423              		.cfi_offset 4, -12
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 85B0     		sub	sp, sp, #20
 427              		.cfi_def_cfa_offset 32
 428 0004 00AF     		add	r7, sp, #0
 429              		.cfi_def_cfa_register 7
 430 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer.c **** 
 399:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 431              		.loc 1 399 0
 432 0008 0F23     		movs	r3, #15
 433 000a FC18     		adds	r4, r7, r3
 434 000c FFF7FEFF 		bl	CyEnterCriticalSection
 435 0010 0300     		movs	r3, r0
 436 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/Timer.c **** 
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 437              		.loc 1 401 0
 438 0014 0C4B     		ldr	r3, .L24
 439 0016 0C4A     		ldr	r2, .L24
 440 0018 1268     		ldr	r2, [r2]
 441 001a 0C49     		ldr	r1, .L24+4
 442 001c 0A40     		ands	r2, r1
 443 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 444              		.loc 1 402 0
 445 0020 094B     		ldr	r3, .L24
 446 0022 094A     		ldr	r2, .L24
 447 0024 1168     		ldr	r1, [r2]
 448 0026 7A68     		ldr	r2, [r7, #4]
 449 0028 9004     		lsls	r0, r2, #18
 450 002a 8022     		movs	r2, #128
 451 002c D202     		lsls	r2, r2, #11
 452 002e 0240     		ands	r2, r0
 453 0030 0A43     		orrs	r2, r1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 16


 454 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer.c **** 
 405:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 455              		.loc 1 405 0
 456 0034 0F23     		movs	r3, #15
 457 0036 FB18     		adds	r3, r7, r3
 458 0038 1B78     		ldrb	r3, [r3]
 459 003a 1800     		movs	r0, r3
 460 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/Timer.c **** }
 461              		.loc 1 406 0
 462 0040 C046     		nop
 463 0042 BD46     		mov	sp, r7
 464 0044 05B0     		add	sp, sp, #20
 465              		@ sp needed
 466 0046 90BD     		pop	{r4, r7, pc}
 467              	.L25:
 468              		.align	2
 469              	.L24:
 470 0048 00010540 		.word	1074069760
 471 004c FFFFFBFF 		.word	-262145
 472              		.cfi_endproc
 473              	.LFE7:
 474              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 475              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 476              		.align	2
 477              		.global	Timer_SetPWMMode
 478              		.code	16
 479              		.thumb_func
 480              		.type	Timer_SetPWMMode, %function
 481              	Timer_SetPWMMode:
 482              	.LFB8:
 407:Generated_Source\PSoC4/Timer.c **** 
 408:Generated_Source\PSoC4/Timer.c **** 
 409:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 411:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer.c **** *
 413:Generated_Source\PSoC4/Timer.c **** * Summary:
 414:Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer.c **** *
 420:Generated_Source\PSoC4/Timer.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer.c **** *   Values:
 424:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 17


 431:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer.c **** *
 445:Generated_Source\PSoC4/Timer.c **** * Return:
 446:Generated_Source\PSoC4/Timer.c **** *  None
 447:Generated_Source\PSoC4/Timer.c **** *
 448:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer.c **** {
 483              		.loc 1 450 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 8
 486              		@ frame_needed = 1, uses_anonymous_args = 0
 487 0000 80B5     		push	{r7, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 82B0     		sub	sp, sp, #8
 492              		.cfi_def_cfa_offset 16
 493 0004 00AF     		add	r7, sp, #0
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 496              		.loc 1 451 0
 497 0008 044B     		ldr	r3, .L27
 498 000a 7A68     		ldr	r2, [r7, #4]
 499 000c 3F21     		movs	r1, #63
 500 000e 0A40     		ands	r2, r1
 501 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/Timer.c **** }
 502              		.loc 1 452 0
 503 0012 C046     		nop
 504 0014 BD46     		mov	sp, r7
 505 0016 02B0     		add	sp, sp, #8
 506              		@ sp needed
 507 0018 80BD     		pop	{r7, pc}
 508              	.L28:
 509 001a C046     		.align	2
 510              	.L27:
 511 001c 28010540 		.word	1074069800
 512              		.cfi_endproc
 513              	.LFE8:
 514              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 515              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 516              		.align	2
 517              		.global	Timer_SetPWMSyncKill
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 18


 518              		.code	16
 519              		.thumb_func
 520              		.type	Timer_SetPWMSyncKill, %function
 521              	Timer_SetPWMSyncKill:
 522              	.LFB9:
 453:Generated_Source\PSoC4/Timer.c **** 
 454:Generated_Source\PSoC4/Timer.c **** 
 455:Generated_Source\PSoC4/Timer.c **** 
 456:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer.c **** *
 460:Generated_Source\PSoC4/Timer.c **** * Summary:
 461:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer.c **** *
 466:Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer.c **** *
 469:Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer.c **** 
 474:Generated_Source\PSoC4/Timer.c **** *
 475:Generated_Source\PSoC4/Timer.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer.c **** *   Values:
 478:Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer.c **** *
 481:Generated_Source\PSoC4/Timer.c **** * Return:
 482:Generated_Source\PSoC4/Timer.c **** *  None
 483:Generated_Source\PSoC4/Timer.c **** *
 484:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer.c **** {
 523              		.loc 1 486 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527 0000 90B5     		push	{r4, r7, lr}
 528              		.cfi_def_cfa_offset 12
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 85B0     		sub	sp, sp, #20
 533              		.cfi_def_cfa_offset 32
 534 0004 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 536 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer.c **** 
 489:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 537              		.loc 1 489 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 19


 538 0008 0F23     		movs	r3, #15
 539 000a FC18     		adds	r4, r7, r3
 540 000c FFF7FEFF 		bl	CyEnterCriticalSection
 541 0010 0300     		movs	r3, r0
 542 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/Timer.c **** 
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 543              		.loc 1 491 0
 544 0014 0C4B     		ldr	r3, .L30
 545 0016 0C4A     		ldr	r2, .L30
 546 0018 1268     		ldr	r2, [r2]
 547 001a 0421     		movs	r1, #4
 548 001c 8A43     		bics	r2, r1
 549 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 550              		.loc 1 492 0
 551 0020 094B     		ldr	r3, .L30
 552 0022 094A     		ldr	r2, .L30
 553 0024 1168     		ldr	r1, [r2]
 554 0026 7A68     		ldr	r2, [r7, #4]
 555 0028 9200     		lsls	r2, r2, #2
 556 002a 0420     		movs	r0, #4
 557 002c 0240     		ands	r2, r0
 558 002e 0A43     		orrs	r2, r1
 559 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer.c **** 
 495:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 560              		.loc 1 495 0
 561 0032 0F23     		movs	r3, #15
 562 0034 FB18     		adds	r3, r7, r3
 563 0036 1B78     		ldrb	r3, [r3]
 564 0038 1800     		movs	r0, r3
 565 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/Timer.c **** }
 566              		.loc 1 496 0
 567 003e C046     		nop
 568 0040 BD46     		mov	sp, r7
 569 0042 05B0     		add	sp, sp, #20
 570              		@ sp needed
 571 0044 90BD     		pop	{r4, r7, pc}
 572              	.L31:
 573 0046 C046     		.align	2
 574              	.L30:
 575 0048 00010540 		.word	1074069760
 576              		.cfi_endproc
 577              	.LFE9:
 578              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 579              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 580              		.align	2
 581              		.global	Timer_SetPWMStopOnKill
 582              		.code	16
 583              		.thumb_func
 584              		.type	Timer_SetPWMStopOnKill, %function
 585              	Timer_SetPWMStopOnKill:
 586              	.LFB10:
 497:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 20


 498:Generated_Source\PSoC4/Timer.c **** 
 499:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer.c **** *
 503:Generated_Source\PSoC4/Timer.c **** * Summary:
 504:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer.c **** *
 508:Generated_Source\PSoC4/Timer.c **** *
 509:Generated_Source\PSoC4/Timer.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer.c **** *   Values:
 512:Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer.c **** *
 515:Generated_Source\PSoC4/Timer.c **** * Return:
 516:Generated_Source\PSoC4/Timer.c **** *  None
 517:Generated_Source\PSoC4/Timer.c **** *
 518:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer.c **** {
 587              		.loc 1 520 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 16
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591 0000 90B5     		push	{r4, r7, lr}
 592              		.cfi_def_cfa_offset 12
 593              		.cfi_offset 4, -12
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 85B0     		sub	sp, sp, #20
 597              		.cfi_def_cfa_offset 32
 598 0004 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer.c **** 
 523:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 601              		.loc 1 523 0
 602 0008 0F23     		movs	r3, #15
 603 000a FC18     		adds	r4, r7, r3
 604 000c FFF7FEFF 		bl	CyEnterCriticalSection
 605 0010 0300     		movs	r3, r0
 606 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/Timer.c **** 
 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 607              		.loc 1 525 0
 608 0014 0C4B     		ldr	r3, .L33
 609 0016 0C4A     		ldr	r2, .L33
 610 0018 1268     		ldr	r2, [r2]
 611 001a 0821     		movs	r1, #8
 612 001c 8A43     		bics	r2, r1
 613 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 614              		.loc 1 526 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 21


 615 0020 094B     		ldr	r3, .L33
 616 0022 094A     		ldr	r2, .L33
 617 0024 1168     		ldr	r1, [r2]
 618 0026 7A68     		ldr	r2, [r7, #4]
 619 0028 D200     		lsls	r2, r2, #3
 620 002a 0820     		movs	r0, #8
 621 002c 0240     		ands	r2, r0
 622 002e 0A43     		orrs	r2, r1
 623 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer.c **** 
 529:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 624              		.loc 1 529 0
 625 0032 0F23     		movs	r3, #15
 626 0034 FB18     		adds	r3, r7, r3
 627 0036 1B78     		ldrb	r3, [r3]
 628 0038 1800     		movs	r0, r3
 629 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/Timer.c **** }
 630              		.loc 1 530 0
 631 003e C046     		nop
 632 0040 BD46     		mov	sp, r7
 633 0042 05B0     		add	sp, sp, #20
 634              		@ sp needed
 635 0044 90BD     		pop	{r4, r7, pc}
 636              	.L34:
 637 0046 C046     		.align	2
 638              	.L33:
 639 0048 00010540 		.word	1074069760
 640              		.cfi_endproc
 641              	.LFE10:
 642              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 643              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 644              		.align	2
 645              		.global	Timer_SetPWMDeadTime
 646              		.code	16
 647              		.thumb_func
 648              		.type	Timer_SetPWMDeadTime, %function
 649              	Timer_SetPWMDeadTime:
 650              	.LFB11:
 531:Generated_Source\PSoC4/Timer.c **** 
 532:Generated_Source\PSoC4/Timer.c **** 
 533:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer.c **** *
 537:Generated_Source\PSoC4/Timer.c **** * Summary:
 538:Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer.c **** 
 543:Generated_Source\PSoC4/Timer.c **** *
 544:Generated_Source\PSoC4/Timer.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 22


 548:Generated_Source\PSoC4/Timer.c **** * Return:
 549:Generated_Source\PSoC4/Timer.c **** *  None
 550:Generated_Source\PSoC4/Timer.c **** *
 551:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer.c **** {
 651              		.loc 1 553 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 16
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 90B5     		push	{r4, r7, lr}
 656              		.cfi_def_cfa_offset 12
 657              		.cfi_offset 4, -12
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 85B0     		sub	sp, sp, #20
 661              		.cfi_def_cfa_offset 32
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer.c **** 
 556:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 665              		.loc 1 556 0
 666 0008 0F23     		movs	r3, #15
 667 000a FC18     		adds	r4, r7, r3
 668 000c FFF7FEFF 		bl	CyEnterCriticalSection
 669 0010 0300     		movs	r3, r0
 670 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/Timer.c **** 
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 671              		.loc 1 558 0
 672 0014 0C4B     		ldr	r3, .L36
 673 0016 0C4A     		ldr	r2, .L36
 674 0018 1268     		ldr	r2, [r2]
 675 001a 0C49     		ldr	r1, .L36+4
 676 001c 0A40     		ands	r2, r1
 677 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 678              		.loc 1 559 0
 679 0020 094B     		ldr	r3, .L36
 680 0022 094A     		ldr	r2, .L36
 681 0024 1168     		ldr	r1, [r2]
 682 0026 7A68     		ldr	r2, [r7, #4]
 683 0028 1202     		lsls	r2, r2, #8
 684 002a 1204     		lsls	r2, r2, #16
 685 002c 120C     		lsrs	r2, r2, #16
 686 002e 0A43     		orrs	r2, r1
 687 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer.c **** 
 562:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 688              		.loc 1 562 0
 689 0032 0F23     		movs	r3, #15
 690 0034 FB18     		adds	r3, r7, r3
 691 0036 1B78     		ldrb	r3, [r3]
 692 0038 1800     		movs	r0, r3
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 23


 693 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/Timer.c **** }
 694              		.loc 1 563 0
 695 003e C046     		nop
 696 0040 BD46     		mov	sp, r7
 697 0042 05B0     		add	sp, sp, #20
 698              		@ sp needed
 699 0044 90BD     		pop	{r4, r7, pc}
 700              	.L37:
 701 0046 C046     		.align	2
 702              	.L36:
 703 0048 00010540 		.word	1074069760
 704 004c FF00FFFF 		.word	-65281
 705              		.cfi_endproc
 706              	.LFE11:
 707              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
 708              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 709              		.align	2
 710              		.global	Timer_SetPWMInvert
 711              		.code	16
 712              		.thumb_func
 713              		.type	Timer_SetPWMInvert, %function
 714              	Timer_SetPWMInvert:
 715              	.LFB12:
 564:Generated_Source\PSoC4/Timer.c **** 
 565:Generated_Source\PSoC4/Timer.c **** 
 566:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 568:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer.c **** *
 570:Generated_Source\PSoC4/Timer.c **** * Summary:
 571:Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer.c **** *
 575:Generated_Source\PSoC4/Timer.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer.c **** *   Values:
 578:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer.c **** *
 581:Generated_Source\PSoC4/Timer.c **** * Return:
 582:Generated_Source\PSoC4/Timer.c **** *  None
 583:Generated_Source\PSoC4/Timer.c **** *
 584:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer.c **** {
 716              		.loc 1 586 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 90B5     		push	{r4, r7, lr}
 721              		.cfi_def_cfa_offset 12
 722              		.cfi_offset 4, -12
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 24


 726              		.cfi_def_cfa_offset 32
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer.c **** 
 589:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 730              		.loc 1 589 0
 731 0008 0F23     		movs	r3, #15
 732 000a FC18     		adds	r4, r7, r3
 733 000c FFF7FEFF 		bl	CyEnterCriticalSection
 734 0010 0300     		movs	r3, r0
 735 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/Timer.c **** 
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 736              		.loc 1 591 0
 737 0014 0A4B     		ldr	r3, .L39
 738 0016 0A4A     		ldr	r2, .L39
 739 0018 1268     		ldr	r2, [r2]
 740 001a 0A49     		ldr	r1, .L39+4
 741 001c 0A40     		ands	r2, r1
 742 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 743              		.loc 1 592 0
 744 0020 074B     		ldr	r3, .L39
 745 0022 074A     		ldr	r2, .L39
 746 0024 1168     		ldr	r1, [r2]
 747 0026 7A68     		ldr	r2, [r7, #4]
 748 0028 0A43     		orrs	r2, r1
 749 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/Timer.c **** 
 594:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 750              		.loc 1 594 0
 751 002c 0F23     		movs	r3, #15
 752 002e FB18     		adds	r3, r7, r3
 753 0030 1B78     		ldrb	r3, [r3]
 754 0032 1800     		movs	r0, r3
 755 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/Timer.c **** }
 756              		.loc 1 595 0
 757 0038 C046     		nop
 758 003a BD46     		mov	sp, r7
 759 003c 05B0     		add	sp, sp, #20
 760              		@ sp needed
 761 003e 90BD     		pop	{r4, r7, pc}
 762              	.L40:
 763              		.align	2
 764              	.L39:
 765 0040 00010540 		.word	1074069760
 766 0044 FFFFCFFF 		.word	-3145729
 767              		.cfi_endproc
 768              	.LFE12:
 769              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 770              		.section	.text.Timer_WriteCounter,"ax",%progbits
 771              		.align	2
 772              		.global	Timer_WriteCounter
 773              		.code	16
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 25


 774              		.thumb_func
 775              		.type	Timer_WriteCounter, %function
 776              	Timer_WriteCounter:
 777              	.LFB13:
 596:Generated_Source\PSoC4/Timer.c **** 
 597:Generated_Source\PSoC4/Timer.c **** 
 598:Generated_Source\PSoC4/Timer.c **** 
 599:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 601:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer.c **** *
 603:Generated_Source\PSoC4/Timer.c **** * Summary:
 604:Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer.c **** *
 608:Generated_Source\PSoC4/Timer.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer.c **** *
 611:Generated_Source\PSoC4/Timer.c **** * Return:
 612:Generated_Source\PSoC4/Timer.c **** *  None
 613:Generated_Source\PSoC4/Timer.c **** *
 614:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer.c **** {
 778              		.loc 1 616 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 8
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 80B5     		push	{r7, lr}
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 82B0     		sub	sp, sp, #8
 787              		.cfi_def_cfa_offset 16
 788 0004 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 790 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
 791              		.loc 1 617 0
 792 0008 044B     		ldr	r3, .L42
 793 000a 7A68     		ldr	r2, [r7, #4]
 794 000c 1204     		lsls	r2, r2, #16
 795 000e 120C     		lsrs	r2, r2, #16
 796 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/Timer.c **** }
 797              		.loc 1 618 0
 798 0012 C046     		nop
 799 0014 BD46     		mov	sp, r7
 800 0016 02B0     		add	sp, sp, #8
 801              		@ sp needed
 802 0018 80BD     		pop	{r7, pc}
 803              	.L43:
 804 001a C046     		.align	2
 805              	.L42:
 806 001c 08010540 		.word	1074069768
 807              		.cfi_endproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 26


 808              	.LFE13:
 809              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 810              		.section	.text.Timer_ReadCounter,"ax",%progbits
 811              		.align	2
 812              		.global	Timer_ReadCounter
 813              		.code	16
 814              		.thumb_func
 815              		.type	Timer_ReadCounter, %function
 816              	Timer_ReadCounter:
 817              	.LFB14:
 619:Generated_Source\PSoC4/Timer.c **** 
 620:Generated_Source\PSoC4/Timer.c **** 
 621:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 623:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer.c **** *
 625:Generated_Source\PSoC4/Timer.c **** * Summary:
 626:Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer.c **** *
 628:Generated_Source\PSoC4/Timer.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer.c **** *  None
 630:Generated_Source\PSoC4/Timer.c **** *
 631:Generated_Source\PSoC4/Timer.c **** * Return:
 632:Generated_Source\PSoC4/Timer.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer.c **** *
 634:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer.c **** {
 818              		.loc 1 636 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 828              		.loc 1 637 0
 829 0004 034B     		ldr	r3, .L46
 830 0006 1B68     		ldr	r3, [r3]
 831 0008 1B04     		lsls	r3, r3, #16
 832 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/Timer.c **** }
 833              		.loc 1 638 0
 834 000c 1800     		movs	r0, r3
 835 000e BD46     		mov	sp, r7
 836              		@ sp needed
 837 0010 80BD     		pop	{r7, pc}
 838              	.L47:
 839 0012 C046     		.align	2
 840              	.L46:
 841 0014 08010540 		.word	1074069768
 842              		.cfi_endproc
 843              	.LFE14:
 844              		.size	Timer_ReadCounter, .-Timer_ReadCounter
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 27


 845              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 846              		.align	2
 847              		.global	Timer_SetCounterMode
 848              		.code	16
 849              		.thumb_func
 850              		.type	Timer_SetCounterMode, %function
 851              	Timer_SetCounterMode:
 852              	.LFB15:
 639:Generated_Source\PSoC4/Timer.c **** 
 640:Generated_Source\PSoC4/Timer.c **** 
 641:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 643:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer.c **** *
 645:Generated_Source\PSoC4/Timer.c **** * Summary:
 646:Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer.c **** *
 649:Generated_Source\PSoC4/Timer.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer.c **** *   Values:
 652:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer.c **** *
 660:Generated_Source\PSoC4/Timer.c **** * Return:
 661:Generated_Source\PSoC4/Timer.c **** *  None
 662:Generated_Source\PSoC4/Timer.c **** *
 663:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer.c **** {
 853              		.loc 1 665 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 16
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 90B5     		push	{r4, r7, lr}
 858              		.cfi_def_cfa_offset 12
 859              		.cfi_offset 4, -12
 860              		.cfi_offset 7, -8
 861              		.cfi_offset 14, -4
 862 0002 85B0     		sub	sp, sp, #20
 863              		.cfi_def_cfa_offset 32
 864 0004 00AF     		add	r7, sp, #0
 865              		.cfi_def_cfa_register 7
 866 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer.c **** 
 668:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 867              		.loc 1 668 0
 868 0008 0F23     		movs	r3, #15
 869 000a FC18     		adds	r4, r7, r3
 870 000c FFF7FEFF 		bl	CyEnterCriticalSection
 871 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 28


 872 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/Timer.c **** 
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 873              		.loc 1 670 0
 874 0014 0A4B     		ldr	r3, .L49
 875 0016 0A4A     		ldr	r2, .L49
 876 0018 1268     		ldr	r2, [r2]
 877 001a 0A49     		ldr	r1, .L49+4
 878 001c 0A40     		ands	r2, r1
 879 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 880              		.loc 1 671 0
 881 0020 074B     		ldr	r3, .L49
 882 0022 074A     		ldr	r2, .L49
 883 0024 1168     		ldr	r1, [r2]
 884 0026 7A68     		ldr	r2, [r7, #4]
 885 0028 0A43     		orrs	r2, r1
 886 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/Timer.c **** 
 673:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 887              		.loc 1 673 0
 888 002c 0F23     		movs	r3, #15
 889 002e FB18     		adds	r3, r7, r3
 890 0030 1B78     		ldrb	r3, [r3]
 891 0032 1800     		movs	r0, r3
 892 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/Timer.c **** }
 893              		.loc 1 674 0
 894 0038 C046     		nop
 895 003a BD46     		mov	sp, r7
 896 003c 05B0     		add	sp, sp, #20
 897              		@ sp needed
 898 003e 90BD     		pop	{r4, r7, pc}
 899              	.L50:
 900              		.align	2
 901              	.L49:
 902 0040 00010540 		.word	1074069760
 903 0044 FFFFFCFF 		.word	-196609
 904              		.cfi_endproc
 905              	.LFE15:
 906              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 907              		.section	.text.Timer_WritePeriod,"ax",%progbits
 908              		.align	2
 909              		.global	Timer_WritePeriod
 910              		.code	16
 911              		.thumb_func
 912              		.type	Timer_WritePeriod, %function
 913              	Timer_WritePeriod:
 914              	.LFB16:
 675:Generated_Source\PSoC4/Timer.c **** 
 676:Generated_Source\PSoC4/Timer.c **** 
 677:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 679:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer.c **** *
 681:Generated_Source\PSoC4/Timer.c **** * Summary:
 682:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 29


 683:Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer.c **** *
 686:Generated_Source\PSoC4/Timer.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer.c **** *
 689:Generated_Source\PSoC4/Timer.c **** * Return:
 690:Generated_Source\PSoC4/Timer.c **** *  None
 691:Generated_Source\PSoC4/Timer.c **** *
 692:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer.c **** {
 915              		.loc 1 694 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919 0000 80B5     		push	{r7, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 7, -8
 922              		.cfi_offset 14, -4
 923 0002 82B0     		sub	sp, sp, #8
 924              		.cfi_def_cfa_offset 16
 925 0004 00AF     		add	r7, sp, #0
 926              		.cfi_def_cfa_register 7
 927 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 928              		.loc 1 695 0
 929 0008 044B     		ldr	r3, .L52
 930 000a 7A68     		ldr	r2, [r7, #4]
 931 000c 1204     		lsls	r2, r2, #16
 932 000e 120C     		lsrs	r2, r2, #16
 933 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/Timer.c **** }
 934              		.loc 1 696 0
 935 0012 C046     		nop
 936 0014 BD46     		mov	sp, r7
 937 0016 02B0     		add	sp, sp, #8
 938              		@ sp needed
 939 0018 80BD     		pop	{r7, pc}
 940              	.L53:
 941 001a C046     		.align	2
 942              	.L52:
 943 001c 14010540 		.word	1074069780
 944              		.cfi_endproc
 945              	.LFE16:
 946              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 947              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 948              		.align	2
 949              		.global	Timer_ReadPeriod
 950              		.code	16
 951              		.thumb_func
 952              		.type	Timer_ReadPeriod, %function
 953              	Timer_ReadPeriod:
 954              	.LFB17:
 697:Generated_Source\PSoC4/Timer.c **** 
 698:Generated_Source\PSoC4/Timer.c **** 
 699:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 30


 700:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 701:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer.c **** *
 703:Generated_Source\PSoC4/Timer.c **** * Summary:
 704:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer.c **** *
 706:Generated_Source\PSoC4/Timer.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer.c **** *  None
 708:Generated_Source\PSoC4/Timer.c **** *
 709:Generated_Source\PSoC4/Timer.c **** * Return:
 710:Generated_Source\PSoC4/Timer.c **** *  Period value
 711:Generated_Source\PSoC4/Timer.c **** *
 712:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer.c **** {
 955              		.loc 1 714 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 0
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 965              		.loc 1 715 0
 966 0004 034B     		ldr	r3, .L56
 967 0006 1B68     		ldr	r3, [r3]
 968 0008 1B04     		lsls	r3, r3, #16
 969 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/Timer.c **** }
 970              		.loc 1 716 0
 971 000c 1800     		movs	r0, r3
 972 000e BD46     		mov	sp, r7
 973              		@ sp needed
 974 0010 80BD     		pop	{r7, pc}
 975              	.L57:
 976 0012 C046     		.align	2
 977              	.L56:
 978 0014 14010540 		.word	1074069780
 979              		.cfi_endproc
 980              	.LFE17:
 981              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 982              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 983              		.align	2
 984              		.global	Timer_SetCompareSwap
 985              		.code	16
 986              		.thumb_func
 987              		.type	Timer_SetCompareSwap, %function
 988              	Timer_SetCompareSwap:
 989              	.LFB18:
 717:Generated_Source\PSoC4/Timer.c **** 
 718:Generated_Source\PSoC4/Timer.c **** 
 719:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 721:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 31


 722:Generated_Source\PSoC4/Timer.c **** *
 723:Generated_Source\PSoC4/Timer.c **** * Summary:
 724:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer.c **** *
 729:Generated_Source\PSoC4/Timer.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer.c **** *   Values:
 732:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer.c **** *
 735:Generated_Source\PSoC4/Timer.c **** * Return:
 736:Generated_Source\PSoC4/Timer.c **** *  None
 737:Generated_Source\PSoC4/Timer.c **** *
 738:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer.c **** {
 990              		.loc 1 740 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 16
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 90B5     		push	{r4, r7, lr}
 995              		.cfi_def_cfa_offset 12
 996              		.cfi_offset 4, -12
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 85B0     		sub	sp, sp, #20
 1000              		.cfi_def_cfa_offset 32
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer.c **** 
 743:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1004              		.loc 1 743 0
 1005 0008 0F23     		movs	r3, #15
 1006 000a FC18     		adds	r4, r7, r3
 1007 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1008 0010 0300     		movs	r3, r0
 1009 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/Timer.c **** 
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 1010              		.loc 1 745 0
 1011 0014 0B4B     		ldr	r3, .L59
 1012 0016 0B4A     		ldr	r2, .L59
 1013 0018 1268     		ldr	r2, [r2]
 1014 001a 0121     		movs	r1, #1
 1015 001c 8A43     		bics	r2, r1
 1016 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 1017              		.loc 1 746 0
 1018 0020 084B     		ldr	r3, .L59
 1019 0022 084A     		ldr	r2, .L59
 1020 0024 1168     		ldr	r1, [r2]
 1021 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 32


 1022 0028 0120     		movs	r0, #1
 1023 002a 0240     		ands	r2, r0
 1024 002c 0A43     		orrs	r2, r1
 1025 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/Timer.c **** 
 748:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1026              		.loc 1 748 0
 1027 0030 0F23     		movs	r3, #15
 1028 0032 FB18     		adds	r3, r7, r3
 1029 0034 1B78     		ldrb	r3, [r3]
 1030 0036 1800     		movs	r0, r3
 1031 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/Timer.c **** }
 1032              		.loc 1 749 0
 1033 003c C046     		nop
 1034 003e BD46     		mov	sp, r7
 1035 0040 05B0     		add	sp, sp, #20
 1036              		@ sp needed
 1037 0042 90BD     		pop	{r4, r7, pc}
 1038              	.L60:
 1039              		.align	2
 1040              	.L59:
 1041 0044 00010540 		.word	1074069760
 1042              		.cfi_endproc
 1043              	.LFE18:
 1044              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 1045              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 1046              		.align	2
 1047              		.global	Timer_WritePeriodBuf
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	Timer_WritePeriodBuf, %function
 1051              	Timer_WritePeriodBuf:
 1052              	.LFB19:
 750:Generated_Source\PSoC4/Timer.c **** 
 751:Generated_Source\PSoC4/Timer.c **** 
 752:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer.c **** *
 756:Generated_Source\PSoC4/Timer.c **** * Summary:
 757:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer.c **** *
 759:Generated_Source\PSoC4/Timer.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer.c **** *
 762:Generated_Source\PSoC4/Timer.c **** * Return:
 763:Generated_Source\PSoC4/Timer.c **** *  None
 764:Generated_Source\PSoC4/Timer.c **** *
 765:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer.c **** {
 1053              		.loc 1 767 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 8
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 33


 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 82B0     		sub	sp, sp, #8
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              		.cfi_def_cfa_register 7
 1065 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 1066              		.loc 1 768 0
 1067 0008 044B     		ldr	r3, .L62
 1068 000a 7A68     		ldr	r2, [r7, #4]
 1069 000c 1204     		lsls	r2, r2, #16
 1070 000e 120C     		lsrs	r2, r2, #16
 1071 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/Timer.c **** }
 1072              		.loc 1 769 0
 1073 0012 C046     		nop
 1074 0014 BD46     		mov	sp, r7
 1075 0016 02B0     		add	sp, sp, #8
 1076              		@ sp needed
 1077 0018 80BD     		pop	{r7, pc}
 1078              	.L63:
 1079 001a C046     		.align	2
 1080              	.L62:
 1081 001c 18010540 		.word	1074069784
 1082              		.cfi_endproc
 1083              	.LFE19:
 1084              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 1085              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 1086              		.align	2
 1087              		.global	Timer_ReadPeriodBuf
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	Timer_ReadPeriodBuf, %function
 1091              	Timer_ReadPeriodBuf:
 1092              	.LFB20:
 770:Generated_Source\PSoC4/Timer.c **** 
 771:Generated_Source\PSoC4/Timer.c **** 
 772:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer.c **** *
 776:Generated_Source\PSoC4/Timer.c **** * Summary:
 777:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer.c **** *
 779:Generated_Source\PSoC4/Timer.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer.c **** *  None
 781:Generated_Source\PSoC4/Timer.c **** *
 782:Generated_Source\PSoC4/Timer.c **** * Return:
 783:Generated_Source\PSoC4/Timer.c **** *  Period value
 784:Generated_Source\PSoC4/Timer.c **** *
 785:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer.c **** {
 1093              		.loc 1 787 0
 1094              		.cfi_startproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 34


 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 0000 80B5     		push	{r7, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 1103              		.loc 1 788 0
 1104 0004 034B     		ldr	r3, .L66
 1105 0006 1B68     		ldr	r3, [r3]
 1106 0008 1B04     		lsls	r3, r3, #16
 1107 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/Timer.c **** }
 1108              		.loc 1 789 0
 1109 000c 1800     		movs	r0, r3
 1110 000e BD46     		mov	sp, r7
 1111              		@ sp needed
 1112 0010 80BD     		pop	{r7, pc}
 1113              	.L67:
 1114 0012 C046     		.align	2
 1115              	.L66:
 1116 0014 18010540 		.word	1074069784
 1117              		.cfi_endproc
 1118              	.LFE20:
 1119              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 1120              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 1121              		.align	2
 1122              		.global	Timer_SetPeriodSwap
 1123              		.code	16
 1124              		.thumb_func
 1125              		.type	Timer_SetPeriodSwap, %function
 1126              	Timer_SetPeriodSwap:
 1127              	.LFB21:
 790:Generated_Source\PSoC4/Timer.c **** 
 791:Generated_Source\PSoC4/Timer.c **** 
 792:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer.c **** *
 796:Generated_Source\PSoC4/Timer.c **** * Summary:
 797:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer.c **** *
 802:Generated_Source\PSoC4/Timer.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer.c **** *   Values:
 805:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer.c **** *
 808:Generated_Source\PSoC4/Timer.c **** * Return:
 809:Generated_Source\PSoC4/Timer.c **** *  None
 810:Generated_Source\PSoC4/Timer.c **** *
 811:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 35


 812:Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer.c **** {
 1128              		.loc 1 813 0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 16
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 90B5     		push	{r4, r7, lr}
 1133              		.cfi_def_cfa_offset 12
 1134              		.cfi_offset 4, -12
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 85B0     		sub	sp, sp, #20
 1138              		.cfi_def_cfa_offset 32
 1139 0004 00AF     		add	r7, sp, #0
 1140              		.cfi_def_cfa_register 7
 1141 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer.c **** 
 816:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1142              		.loc 1 816 0
 1143 0008 0F23     		movs	r3, #15
 1144 000a FC18     		adds	r4, r7, r3
 1145 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1146 0010 0300     		movs	r3, r0
 1147 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/Timer.c **** 
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 1148              		.loc 1 818 0
 1149 0014 0C4B     		ldr	r3, .L69
 1150 0016 0C4A     		ldr	r2, .L69
 1151 0018 1268     		ldr	r2, [r2]
 1152 001a 0221     		movs	r1, #2
 1153 001c 8A43     		bics	r2, r1
 1154 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 1155              		.loc 1 819 0
 1156 0020 094B     		ldr	r3, .L69
 1157 0022 094A     		ldr	r2, .L69
 1158 0024 1168     		ldr	r1, [r2]
 1159 0026 7A68     		ldr	r2, [r7, #4]
 1160 0028 5200     		lsls	r2, r2, #1
 1161 002a 0220     		movs	r0, #2
 1162 002c 0240     		ands	r2, r0
 1163 002e 0A43     		orrs	r2, r1
 1164 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer.c **** 
 822:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1165              		.loc 1 822 0
 1166 0032 0F23     		movs	r3, #15
 1167 0034 FB18     		adds	r3, r7, r3
 1168 0036 1B78     		ldrb	r3, [r3]
 1169 0038 1800     		movs	r0, r3
 1170 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/Timer.c **** }
 1171              		.loc 1 823 0
 1172 003e C046     		nop
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 36


 1173 0040 BD46     		mov	sp, r7
 1174 0042 05B0     		add	sp, sp, #20
 1175              		@ sp needed
 1176 0044 90BD     		pop	{r4, r7, pc}
 1177              	.L70:
 1178 0046 C046     		.align	2
 1179              	.L69:
 1180 0048 00010540 		.word	1074069760
 1181              		.cfi_endproc
 1182              	.LFE21:
 1183              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 1184              		.section	.text.Timer_WriteCompare,"ax",%progbits
 1185              		.align	2
 1186              		.global	Timer_WriteCompare
 1187              		.code	16
 1188              		.thumb_func
 1189              		.type	Timer_WriteCompare, %function
 1190              	Timer_WriteCompare:
 1191              	.LFB22:
 824:Generated_Source\PSoC4/Timer.c **** 
 825:Generated_Source\PSoC4/Timer.c **** 
 826:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 828:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer.c **** *
 830:Generated_Source\PSoC4/Timer.c **** * Summary:
 831:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer.c **** *
 834:Generated_Source\PSoC4/Timer.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer.c **** *
 837:Generated_Source\PSoC4/Timer.c **** * Return:
 838:Generated_Source\PSoC4/Timer.c **** *  None
 839:Generated_Source\PSoC4/Timer.c **** *
 840:Generated_Source\PSoC4/Timer.c **** * Note:
 841:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer.c **** *
 848:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer.c **** {
 1192              		.loc 1 850 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 8
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196 0000 80B5     		push	{r7, lr}
 1197              		.cfi_def_cfa_offset 8
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 82B0     		sub	sp, sp, #8
 1201              		.cfi_def_cfa_offset 16
 1202 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 37


 1203              		.cfi_def_cfa_register 7
 1204 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer.c **** 
 855:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/Timer.c **** 
 858:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer.c ****         {
 860:Generated_Source\PSoC4/Timer.c ****             compare++;
 861:Generated_Source\PSoC4/Timer.c ****         }
 862:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer.c ****         {
 864:Generated_Source\PSoC4/Timer.c ****             compare--;
 865:Generated_Source\PSoC4/Timer.c ****         }
 866:Generated_Source\PSoC4/Timer.c ****         else
 867:Generated_Source\PSoC4/Timer.c ****         {
 868:Generated_Source\PSoC4/Timer.c ****         }
 869:Generated_Source\PSoC4/Timer.c ****         
 870:Generated_Source\PSoC4/Timer.c ****     
 871:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer.c ****     
 873:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 1205              		.loc 1 873 0
 1206 0008 044B     		ldr	r3, .L72
 1207 000a 7A68     		ldr	r2, [r7, #4]
 1208 000c 1204     		lsls	r2, r2, #16
 1209 000e 120C     		lsrs	r2, r2, #16
 1210 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/Timer.c **** }
 1211              		.loc 1 874 0
 1212 0012 C046     		nop
 1213 0014 BD46     		mov	sp, r7
 1214 0016 02B0     		add	sp, sp, #8
 1215              		@ sp needed
 1216 0018 80BD     		pop	{r7, pc}
 1217              	.L73:
 1218 001a C046     		.align	2
 1219              	.L72:
 1220 001c 0C010540 		.word	1074069772
 1221              		.cfi_endproc
 1222              	.LFE22:
 1223              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 1224              		.section	.text.Timer_ReadCompare,"ax",%progbits
 1225              		.align	2
 1226              		.global	Timer_ReadCompare
 1227              		.code	16
 1228              		.thumb_func
 1229              		.type	Timer_ReadCompare, %function
 1230              	Timer_ReadCompare:
 1231              	.LFB23:
 875:Generated_Source\PSoC4/Timer.c **** 
 876:Generated_Source\PSoC4/Timer.c **** 
 877:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 38


 879:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer.c **** *
 881:Generated_Source\PSoC4/Timer.c **** * Summary:
 882:Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer.c **** *
 888:Generated_Source\PSoC4/Timer.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer.c **** *  None
 890:Generated_Source\PSoC4/Timer.c **** *
 891:Generated_Source\PSoC4/Timer.c **** * Return:
 892:Generated_Source\PSoC4/Timer.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer.c **** *
 894:Generated_Source\PSoC4/Timer.c **** * Note:
 895:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer.c **** *
 899:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer.c **** {
 1232              		.loc 1 901 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236 0000 80B5     		push	{r7, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 00AF     		add	r7, sp, #0
 1241              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer.c **** 
 907:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/Timer.c ****         
 910:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer.c ****         
 912:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer.c ****         {
 914:Generated_Source\PSoC4/Timer.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer.c ****         }
 916:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer.c ****         {
 918:Generated_Source\PSoC4/Timer.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer.c ****         }
 920:Generated_Source\PSoC4/Timer.c ****         else
 921:Generated_Source\PSoC4/Timer.c ****         {
 922:Generated_Source\PSoC4/Timer.c ****         }
 923:Generated_Source\PSoC4/Timer.c **** 
 924:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer.c ****     #else
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 39


 926:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 1242              		.loc 1 926 0
 1243 0004 034B     		ldr	r3, .L76
 1244 0006 1B68     		ldr	r3, [r3]
 1245 0008 1B04     		lsls	r3, r3, #16
 1246 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer.c **** }
 1247              		.loc 1 928 0
 1248 000c 1800     		movs	r0, r3
 1249 000e BD46     		mov	sp, r7
 1250              		@ sp needed
 1251 0010 80BD     		pop	{r7, pc}
 1252              	.L77:
 1253 0012 C046     		.align	2
 1254              	.L76:
 1255 0014 0C010540 		.word	1074069772
 1256              		.cfi_endproc
 1257              	.LFE23:
 1258              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 1259              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 1260              		.align	2
 1261              		.global	Timer_WriteCompareBuf
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	Timer_WriteCompareBuf, %function
 1265              	Timer_WriteCompareBuf:
 1266              	.LFB24:
 929:Generated_Source\PSoC4/Timer.c **** 
 930:Generated_Source\PSoC4/Timer.c **** 
 931:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer.c **** *
 935:Generated_Source\PSoC4/Timer.c **** * Summary:
 936:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer.c **** *
 939:Generated_Source\PSoC4/Timer.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer.c **** *
 942:Generated_Source\PSoC4/Timer.c **** * Return:
 943:Generated_Source\PSoC4/Timer.c **** *  None
 944:Generated_Source\PSoC4/Timer.c **** *
 945:Generated_Source\PSoC4/Timer.c **** * Note:
 946:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer.c **** *
 953:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer.c **** {
 1267              		.loc 1 955 0
 1268              		.cfi_startproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 40


 1269              		@ args = 0, pretend = 0, frame = 8
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 80B5     		push	{r7, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 82B0     		sub	sp, sp, #8
 1276              		.cfi_def_cfa_offset 16
 1277 0004 00AF     		add	r7, sp, #0
 1278              		.cfi_def_cfa_register 7
 1279 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer.c **** 
 960:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/Timer.c **** 
 963:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer.c ****         {
 965:Generated_Source\PSoC4/Timer.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer.c ****         }
 967:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer.c ****         {
 969:Generated_Source\PSoC4/Timer.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer.c ****         }
 971:Generated_Source\PSoC4/Timer.c ****         else
 972:Generated_Source\PSoC4/Timer.c ****         {
 973:Generated_Source\PSoC4/Timer.c ****         }
 974:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer.c ****     
 976:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 1280              		.loc 1 976 0
 1281 0008 044B     		ldr	r3, .L79
 1282 000a 7A68     		ldr	r2, [r7, #4]
 1283 000c 1204     		lsls	r2, r2, #16
 1284 000e 120C     		lsrs	r2, r2, #16
 1285 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/Timer.c **** }
 1286              		.loc 1 977 0
 1287 0012 C046     		nop
 1288 0014 BD46     		mov	sp, r7
 1289 0016 02B0     		add	sp, sp, #8
 1290              		@ sp needed
 1291 0018 80BD     		pop	{r7, pc}
 1292              	.L80:
 1293 001a C046     		.align	2
 1294              	.L79:
 1295 001c 10010540 		.word	1074069776
 1296              		.cfi_endproc
 1297              	.LFE24:
 1298              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 1299              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 1300              		.align	2
 1301              		.global	Timer_ReadCompareBuf
 1302              		.code	16
 1303              		.thumb_func
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 41


 1304              		.type	Timer_ReadCompareBuf, %function
 1305              	Timer_ReadCompareBuf:
 1306              	.LFB25:
 978:Generated_Source\PSoC4/Timer.c **** 
 979:Generated_Source\PSoC4/Timer.c **** 
 980:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer.c **** *
 984:Generated_Source\PSoC4/Timer.c **** * Summary:
 985:Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer.c **** *
 988:Generated_Source\PSoC4/Timer.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer.c **** *  None
 990:Generated_Source\PSoC4/Timer.c **** *
 991:Generated_Source\PSoC4/Timer.c **** * Return:
 992:Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer.c **** *
 994:Generated_Source\PSoC4/Timer.c **** * Note:
 995:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer.c **** *
 999:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer.c **** {
 1307              		.loc 1 1001 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311 0000 80B5     		push	{r7, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer.c **** 
1007:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/Timer.c **** 
1010:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer.c ****         
1012:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer.c ****         {
1014:Generated_Source\PSoC4/Timer.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer.c ****         }
1016:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer.c ****         {
1018:Generated_Source\PSoC4/Timer.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer.c ****         }
1020:Generated_Source\PSoC4/Timer.c ****         else
1021:Generated_Source\PSoC4/Timer.c ****         {
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 42


1022:Generated_Source\PSoC4/Timer.c ****         }
1023:Generated_Source\PSoC4/Timer.c **** 
1024:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer.c ****     #else
1026:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1317              		.loc 1 1026 0
 1318 0004 034B     		ldr	r3, .L83
 1319 0006 1B68     		ldr	r3, [r3]
 1320 0008 1B04     		lsls	r3, r3, #16
 1321 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer.c **** }
 1322              		.loc 1 1028 0
 1323 000c 1800     		movs	r0, r3
 1324 000e BD46     		mov	sp, r7
 1325              		@ sp needed
 1326 0010 80BD     		pop	{r7, pc}
 1327              	.L84:
 1328 0012 C046     		.align	2
 1329              	.L83:
 1330 0014 10010540 		.word	1074069776
 1331              		.cfi_endproc
 1332              	.LFE25:
 1333              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 1334              		.section	.text.Timer_ReadCapture,"ax",%progbits
 1335              		.align	2
 1336              		.global	Timer_ReadCapture
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	Timer_ReadCapture, %function
 1340              	Timer_ReadCapture:
 1341              	.LFB26:
1029:Generated_Source\PSoC4/Timer.c **** 
1030:Generated_Source\PSoC4/Timer.c **** 
1031:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
1033:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer.c **** *
1035:Generated_Source\PSoC4/Timer.c **** * Summary:
1036:Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer.c **** *
1039:Generated_Source\PSoC4/Timer.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer.c **** *  None
1041:Generated_Source\PSoC4/Timer.c **** *
1042:Generated_Source\PSoC4/Timer.c **** * Return:
1043:Generated_Source\PSoC4/Timer.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer.c **** *
1045:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer.c **** {
 1342              		.loc 1 1047 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 0
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 43


 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 00AF     		add	r7, sp, #0
 1351              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 1352              		.loc 1 1048 0
 1353 0004 034B     		ldr	r3, .L87
 1354 0006 1B68     		ldr	r3, [r3]
 1355 0008 1B04     		lsls	r3, r3, #16
 1356 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/Timer.c **** }
 1357              		.loc 1 1049 0
 1358 000c 1800     		movs	r0, r3
 1359 000e BD46     		mov	sp, r7
 1360              		@ sp needed
 1361 0010 80BD     		pop	{r7, pc}
 1362              	.L88:
 1363 0012 C046     		.align	2
 1364              	.L87:
 1365 0014 0C010540 		.word	1074069772
 1366              		.cfi_endproc
 1367              	.LFE26:
 1368              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 1369              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 1370              		.align	2
 1371              		.global	Timer_ReadCaptureBuf
 1372              		.code	16
 1373              		.thumb_func
 1374              		.type	Timer_ReadCaptureBuf, %function
 1375              	Timer_ReadCaptureBuf:
 1376              	.LFB27:
1050:Generated_Source\PSoC4/Timer.c **** 
1051:Generated_Source\PSoC4/Timer.c **** 
1052:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer.c **** *
1056:Generated_Source\PSoC4/Timer.c **** * Summary:
1057:Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer.c **** *
1060:Generated_Source\PSoC4/Timer.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer.c **** *  None
1062:Generated_Source\PSoC4/Timer.c **** *
1063:Generated_Source\PSoC4/Timer.c **** * Return:
1064:Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer.c **** *
1066:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer.c **** {
 1377              		.loc 1 1068 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 1, uses_anonymous_args = 0
 1381 0000 80B5     		push	{r7, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 7, -8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 44


 1384              		.cfi_offset 14, -4
 1385 0002 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 1387              		.loc 1 1069 0
 1388 0004 034B     		ldr	r3, .L91
 1389 0006 1B68     		ldr	r3, [r3]
 1390 0008 1B04     		lsls	r3, r3, #16
 1391 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/Timer.c **** }
 1392              		.loc 1 1070 0
 1393 000c 1800     		movs	r0, r3
 1394 000e BD46     		mov	sp, r7
 1395              		@ sp needed
 1396 0010 80BD     		pop	{r7, pc}
 1397              	.L92:
 1398 0012 C046     		.align	2
 1399              	.L91:
 1400 0014 10010540 		.word	1074069776
 1401              		.cfi_endproc
 1402              	.LFE27:
 1403              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
 1404              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 1405              		.align	2
 1406              		.global	Timer_SetCaptureMode
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	Timer_SetCaptureMode, %function
 1410              	Timer_SetCaptureMode:
 1411              	.LFB28:
1071:Generated_Source\PSoC4/Timer.c **** 
1072:Generated_Source\PSoC4/Timer.c **** 
1073:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1075:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer.c **** *
1077:Generated_Source\PSoC4/Timer.c **** * Summary:
1078:Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer.c **** *
1082:Generated_Source\PSoC4/Timer.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer.c **** *   Values:
1085:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer.c **** *
1090:Generated_Source\PSoC4/Timer.c **** * Return:
1091:Generated_Source\PSoC4/Timer.c **** *  None
1092:Generated_Source\PSoC4/Timer.c **** *
1093:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer.c **** {
 1412              		.loc 1 1095 0
 1413              		.cfi_startproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 45


 1414              		@ args = 0, pretend = 0, frame = 16
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416 0000 90B5     		push	{r4, r7, lr}
 1417              		.cfi_def_cfa_offset 12
 1418              		.cfi_offset 4, -12
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 85B0     		sub	sp, sp, #20
 1422              		.cfi_def_cfa_offset 32
 1423 0004 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 1425 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer.c **** 
1098:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1426              		.loc 1 1098 0
 1427 0008 0F23     		movs	r3, #15
 1428 000a FC18     		adds	r4, r7, r3
 1429 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1430 0010 0300     		movs	r3, r0
 1431 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/Timer.c **** 
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1432              		.loc 1 1100 0
 1433 0014 0A4B     		ldr	r3, .L94
 1434 0016 0A4A     		ldr	r2, .L94
 1435 0018 1268     		ldr	r2, [r2]
 1436 001a 0321     		movs	r1, #3
 1437 001c 8A43     		bics	r2, r1
 1438 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1439              		.loc 1 1101 0
 1440 0020 074B     		ldr	r3, .L94
 1441 0022 074A     		ldr	r2, .L94
 1442 0024 1168     		ldr	r1, [r2]
 1443 0026 7A68     		ldr	r2, [r7, #4]
 1444 0028 0A43     		orrs	r2, r1
 1445 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/Timer.c **** 
1103:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1446              		.loc 1 1103 0
 1447 002c 0F23     		movs	r3, #15
 1448 002e FB18     		adds	r3, r7, r3
 1449 0030 1B78     		ldrb	r3, [r3]
 1450 0032 1800     		movs	r0, r3
 1451 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/Timer.c **** }
 1452              		.loc 1 1104 0
 1453 0038 C046     		nop
 1454 003a BD46     		mov	sp, r7
 1455 003c 05B0     		add	sp, sp, #20
 1456              		@ sp needed
 1457 003e 90BD     		pop	{r4, r7, pc}
 1458              	.L95:
 1459              		.align	2
 1460              	.L94:
 1461 0040 24010540 		.word	1074069796
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 46


 1462              		.cfi_endproc
 1463              	.LFE28:
 1464              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1465              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1466              		.align	2
 1467              		.global	Timer_SetReloadMode
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	Timer_SetReloadMode, %function
 1471              	Timer_SetReloadMode:
 1472              	.LFB29:
1105:Generated_Source\PSoC4/Timer.c **** 
1106:Generated_Source\PSoC4/Timer.c **** 
1107:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1109:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer.c **** *
1111:Generated_Source\PSoC4/Timer.c **** * Summary:
1112:Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer.c **** *  input.
1114:Generated_Source\PSoC4/Timer.c **** *
1115:Generated_Source\PSoC4/Timer.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer.c **** *   Values:
1118:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer.c **** *
1123:Generated_Source\PSoC4/Timer.c **** * Return:
1124:Generated_Source\PSoC4/Timer.c **** *  None
1125:Generated_Source\PSoC4/Timer.c **** *
1126:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer.c **** {
 1473              		.loc 1 1128 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 16
 1476              		@ frame_needed = 1, uses_anonymous_args = 0
 1477 0000 90B5     		push	{r4, r7, lr}
 1478              		.cfi_def_cfa_offset 12
 1479              		.cfi_offset 4, -12
 1480              		.cfi_offset 7, -8
 1481              		.cfi_offset 14, -4
 1482 0002 85B0     		sub	sp, sp, #20
 1483              		.cfi_def_cfa_offset 32
 1484 0004 00AF     		add	r7, sp, #0
 1485              		.cfi_def_cfa_register 7
 1486 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer.c **** 
1131:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1487              		.loc 1 1131 0
 1488 0008 0F23     		movs	r3, #15
 1489 000a FC18     		adds	r4, r7, r3
 1490 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1491 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 47


 1492 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/Timer.c **** 
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1493              		.loc 1 1133 0
 1494 0014 0B4B     		ldr	r3, .L97
 1495 0016 0B4A     		ldr	r2, .L97
 1496 0018 1268     		ldr	r2, [r2]
 1497 001a 3021     		movs	r1, #48
 1498 001c 8A43     		bics	r2, r1
 1499 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1500              		.loc 1 1134 0
 1501 0020 084B     		ldr	r3, .L97
 1502 0022 084A     		ldr	r2, .L97
 1503 0024 1168     		ldr	r1, [r2]
 1504 0026 7A68     		ldr	r2, [r7, #4]
 1505 0028 1201     		lsls	r2, r2, #4
 1506 002a 0A43     		orrs	r2, r1
 1507 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/Timer.c **** 
1136:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1508              		.loc 1 1136 0
 1509 002e 0F23     		movs	r3, #15
 1510 0030 FB18     		adds	r3, r7, r3
 1511 0032 1B78     		ldrb	r3, [r3]
 1512 0034 1800     		movs	r0, r3
 1513 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/Timer.c **** }
 1514              		.loc 1 1137 0
 1515 003a C046     		nop
 1516 003c BD46     		mov	sp, r7
 1517 003e 05B0     		add	sp, sp, #20
 1518              		@ sp needed
 1519 0040 90BD     		pop	{r4, r7, pc}
 1520              	.L98:
 1521 0042 C046     		.align	2
 1522              	.L97:
 1523 0044 24010540 		.word	1074069796
 1524              		.cfi_endproc
 1525              	.LFE29:
 1526              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1527              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1528              		.align	2
 1529              		.global	Timer_SetStartMode
 1530              		.code	16
 1531              		.thumb_func
 1532              		.type	Timer_SetStartMode, %function
 1533              	Timer_SetStartMode:
 1534              	.LFB30:
1138:Generated_Source\PSoC4/Timer.c **** 
1139:Generated_Source\PSoC4/Timer.c **** 
1140:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1142:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer.c **** *
1144:Generated_Source\PSoC4/Timer.c **** * Summary:
1145:Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 48


1146:Generated_Source\PSoC4/Timer.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer.c **** *
1148:Generated_Source\PSoC4/Timer.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer.c **** *   Values:
1151:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer.c **** *
1156:Generated_Source\PSoC4/Timer.c **** * Return:
1157:Generated_Source\PSoC4/Timer.c **** *  None
1158:Generated_Source\PSoC4/Timer.c **** *
1159:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer.c **** {
 1535              		.loc 1 1161 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 16
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539 0000 90B5     		push	{r4, r7, lr}
 1540              		.cfi_def_cfa_offset 12
 1541              		.cfi_offset 4, -12
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
 1544 0002 85B0     		sub	sp, sp, #20
 1545              		.cfi_def_cfa_offset 32
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer.c **** 
1164:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1549              		.loc 1 1164 0
 1550 0008 0F23     		movs	r3, #15
 1551 000a FC18     		adds	r4, r7, r3
 1552 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1553 0010 0300     		movs	r3, r0
 1554 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/Timer.c **** 
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1555              		.loc 1 1166 0
 1556 0014 0B4B     		ldr	r3, .L100
 1557 0016 0B4A     		ldr	r2, .L100
 1558 0018 1268     		ldr	r2, [r2]
 1559 001a 0B49     		ldr	r1, .L100+4
 1560 001c 0A40     		ands	r2, r1
 1561 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1562              		.loc 1 1167 0
 1563 0020 084B     		ldr	r3, .L100
 1564 0022 084A     		ldr	r2, .L100
 1565 0024 1168     		ldr	r1, [r2]
 1566 0026 7A68     		ldr	r2, [r7, #4]
 1567 0028 1202     		lsls	r2, r2, #8
 1568 002a 0A43     		orrs	r2, r1
 1569 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 49


1168:Generated_Source\PSoC4/Timer.c **** 
1169:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1570              		.loc 1 1169 0
 1571 002e 0F23     		movs	r3, #15
 1572 0030 FB18     		adds	r3, r7, r3
 1573 0032 1B78     		ldrb	r3, [r3]
 1574 0034 1800     		movs	r0, r3
 1575 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/Timer.c **** }
 1576              		.loc 1 1170 0
 1577 003a C046     		nop
 1578 003c BD46     		mov	sp, r7
 1579 003e 05B0     		add	sp, sp, #20
 1580              		@ sp needed
 1581 0040 90BD     		pop	{r4, r7, pc}
 1582              	.L101:
 1583 0042 C046     		.align	2
 1584              	.L100:
 1585 0044 24010540 		.word	1074069796
 1586 0048 FFFCFFFF 		.word	-769
 1587              		.cfi_endproc
 1588              	.LFE30:
 1589              		.size	Timer_SetStartMode, .-Timer_SetStartMode
 1590              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1591              		.align	2
 1592              		.global	Timer_SetStopMode
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	Timer_SetStopMode, %function
 1596              	Timer_SetStopMode:
 1597              	.LFB31:
1171:Generated_Source\PSoC4/Timer.c **** 
1172:Generated_Source\PSoC4/Timer.c **** 
1173:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1175:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer.c **** *
1177:Generated_Source\PSoC4/Timer.c **** * Summary:
1178:Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer.c **** *
1180:Generated_Source\PSoC4/Timer.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer.c **** *   Values:
1183:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer.c **** *
1188:Generated_Source\PSoC4/Timer.c **** * Return:
1189:Generated_Source\PSoC4/Timer.c **** *  None
1190:Generated_Source\PSoC4/Timer.c **** *
1191:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer.c **** {
 1598              		.loc 1 1193 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 50


 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602 0000 90B5     		push	{r4, r7, lr}
 1603              		.cfi_def_cfa_offset 12
 1604              		.cfi_offset 4, -12
 1605              		.cfi_offset 7, -8
 1606              		.cfi_offset 14, -4
 1607 0002 85B0     		sub	sp, sp, #20
 1608              		.cfi_def_cfa_offset 32
 1609 0004 00AF     		add	r7, sp, #0
 1610              		.cfi_def_cfa_register 7
 1611 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer.c **** 
1196:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1612              		.loc 1 1196 0
 1613 0008 0F23     		movs	r3, #15
 1614 000a FC18     		adds	r4, r7, r3
 1615 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1616 0010 0300     		movs	r3, r0
 1617 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/Timer.c **** 
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1618              		.loc 1 1198 0
 1619 0014 0B4B     		ldr	r3, .L103
 1620 0016 0B4A     		ldr	r2, .L103
 1621 0018 1268     		ldr	r2, [r2]
 1622 001a C021     		movs	r1, #192
 1623 001c 8A43     		bics	r2, r1
 1624 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1625              		.loc 1 1199 0
 1626 0020 084B     		ldr	r3, .L103
 1627 0022 084A     		ldr	r2, .L103
 1628 0024 1168     		ldr	r1, [r2]
 1629 0026 7A68     		ldr	r2, [r7, #4]
 1630 0028 9201     		lsls	r2, r2, #6
 1631 002a 0A43     		orrs	r2, r1
 1632 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/Timer.c **** 
1201:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1633              		.loc 1 1201 0
 1634 002e 0F23     		movs	r3, #15
 1635 0030 FB18     		adds	r3, r7, r3
 1636 0032 1B78     		ldrb	r3, [r3]
 1637 0034 1800     		movs	r0, r3
 1638 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/Timer.c **** }
 1639              		.loc 1 1202 0
 1640 003a C046     		nop
 1641 003c BD46     		mov	sp, r7
 1642 003e 05B0     		add	sp, sp, #20
 1643              		@ sp needed
 1644 0040 90BD     		pop	{r4, r7, pc}
 1645              	.L104:
 1646 0042 C046     		.align	2
 1647              	.L103:
 1648 0044 24010540 		.word	1074069796
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 51


 1649              		.cfi_endproc
 1650              	.LFE31:
 1651              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1652              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1653              		.align	2
 1654              		.global	Timer_SetCountMode
 1655              		.code	16
 1656              		.thumb_func
 1657              		.type	Timer_SetCountMode, %function
 1658              	Timer_SetCountMode:
 1659              	.LFB32:
1203:Generated_Source\PSoC4/Timer.c **** 
1204:Generated_Source\PSoC4/Timer.c **** 
1205:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1207:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer.c **** *
1209:Generated_Source\PSoC4/Timer.c **** * Summary:
1210:Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer.c **** *  input.
1212:Generated_Source\PSoC4/Timer.c **** *
1213:Generated_Source\PSoC4/Timer.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer.c **** *   Values:
1216:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer.c **** *
1221:Generated_Source\PSoC4/Timer.c **** * Return:
1222:Generated_Source\PSoC4/Timer.c **** *  None
1223:Generated_Source\PSoC4/Timer.c **** *
1224:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer.c **** {
 1660              		.loc 1 1226 0
 1661              		.cfi_startproc
 1662              		@ args = 0, pretend = 0, frame = 16
 1663              		@ frame_needed = 1, uses_anonymous_args = 0
 1664 0000 90B5     		push	{r4, r7, lr}
 1665              		.cfi_def_cfa_offset 12
 1666              		.cfi_offset 4, -12
 1667              		.cfi_offset 7, -8
 1668              		.cfi_offset 14, -4
 1669 0002 85B0     		sub	sp, sp, #20
 1670              		.cfi_def_cfa_offset 32
 1671 0004 00AF     		add	r7, sp, #0
 1672              		.cfi_def_cfa_register 7
 1673 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer.c **** 
1229:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1674              		.loc 1 1229 0
 1675 0008 0F23     		movs	r3, #15
 1676 000a FC18     		adds	r4, r7, r3
 1677 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1678 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 52


 1679 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/Timer.c **** 
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1680              		.loc 1 1231 0
 1681 0014 0B4B     		ldr	r3, .L106
 1682 0016 0B4A     		ldr	r2, .L106
 1683 0018 1268     		ldr	r2, [r2]
 1684 001a 0C21     		movs	r1, #12
 1685 001c 8A43     		bics	r2, r1
 1686 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1687              		.loc 1 1232 0
 1688 0020 084B     		ldr	r3, .L106
 1689 0022 084A     		ldr	r2, .L106
 1690 0024 1168     		ldr	r1, [r2]
 1691 0026 7A68     		ldr	r2, [r7, #4]
 1692 0028 9200     		lsls	r2, r2, #2
 1693 002a 0A43     		orrs	r2, r1
 1694 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/Timer.c **** 
1234:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1695              		.loc 1 1234 0
 1696 002e 0F23     		movs	r3, #15
 1697 0030 FB18     		adds	r3, r7, r3
 1698 0032 1B78     		ldrb	r3, [r3]
 1699 0034 1800     		movs	r0, r3
 1700 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/Timer.c **** }
 1701              		.loc 1 1235 0
 1702 003a C046     		nop
 1703 003c BD46     		mov	sp, r7
 1704 003e 05B0     		add	sp, sp, #20
 1705              		@ sp needed
 1706 0040 90BD     		pop	{r4, r7, pc}
 1707              	.L107:
 1708 0042 C046     		.align	2
 1709              	.L106:
 1710 0044 24010540 		.word	1074069796
 1711              		.cfi_endproc
 1712              	.LFE32:
 1713              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1714              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1715              		.align	2
 1716              		.global	Timer_TriggerCommand
 1717              		.code	16
 1718              		.thumb_func
 1719              		.type	Timer_TriggerCommand, %function
 1720              	Timer_TriggerCommand:
 1721              	.LFB33:
1236:Generated_Source\PSoC4/Timer.c **** 
1237:Generated_Source\PSoC4/Timer.c **** 
1238:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1240:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer.c **** *
1242:Generated_Source\PSoC4/Timer.c **** * Summary:
1243:Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 53


1244:Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer.c **** *
1247:Generated_Source\PSoC4/Timer.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer.c **** *        define.
1253:Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer.c **** *   Values:
1256:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer.c **** *
1261:Generated_Source\PSoC4/Timer.c **** * Return:
1262:Generated_Source\PSoC4/Timer.c **** *  None
1263:Generated_Source\PSoC4/Timer.c **** *
1264:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer.c **** {
 1722              		.loc 1 1266 0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 16
 1725              		@ frame_needed = 1, uses_anonymous_args = 0
 1726 0000 90B5     		push	{r4, r7, lr}
 1727              		.cfi_def_cfa_offset 12
 1728              		.cfi_offset 4, -12
 1729              		.cfi_offset 7, -8
 1730              		.cfi_offset 14, -4
 1731 0002 85B0     		sub	sp, sp, #20
 1732              		.cfi_def_cfa_offset 32
 1733 0004 00AF     		add	r7, sp, #0
 1734              		.cfi_def_cfa_register 7
 1735 0006 7860     		str	r0, [r7, #4]
 1736 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer.c **** 
1269:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1737              		.loc 1 1269 0
 1738 000a 0F23     		movs	r3, #15
 1739 000c FC18     		adds	r4, r7, r3
 1740 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1741 0012 0300     		movs	r3, r0
 1742 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/Timer.c **** 
1271:Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
 1743              		.loc 1 1271 0
 1744 0016 084B     		ldr	r3, .L109
 1745 0018 7968     		ldr	r1, [r7, #4]
 1746 001a 3A68     		ldr	r2, [r7]
 1747 001c 9140     		lsls	r1, r1, r2
 1748 001e 0A00     		movs	r2, r1
 1749 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 54


1273:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1750              		.loc 1 1273 0
 1751 0022 0F23     		movs	r3, #15
 1752 0024 FB18     		adds	r3, r7, r3
 1753 0026 1B78     		ldrb	r3, [r3]
 1754 0028 1800     		movs	r0, r3
 1755 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/Timer.c **** }
 1756              		.loc 1 1274 0
 1757 002e C046     		nop
 1758 0030 BD46     		mov	sp, r7
 1759 0032 05B0     		add	sp, sp, #20
 1760              		@ sp needed
 1761 0034 90BD     		pop	{r4, r7, pc}
 1762              	.L110:
 1763 0036 C046     		.align	2
 1764              	.L109:
 1765 0038 08000540 		.word	1074069512
 1766              		.cfi_endproc
 1767              	.LFE33:
 1768              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
 1769              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1770              		.align	2
 1771              		.global	Timer_ReadStatus
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	Timer_ReadStatus, %function
 1775              	Timer_ReadStatus:
 1776              	.LFB34:
1275:Generated_Source\PSoC4/Timer.c **** 
1276:Generated_Source\PSoC4/Timer.c **** 
1277:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1279:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer.c **** *
1281:Generated_Source\PSoC4/Timer.c **** * Summary:
1282:Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1283:Generated_Source\PSoC4/Timer.c **** *
1284:Generated_Source\PSoC4/Timer.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer.c **** *  None
1286:Generated_Source\PSoC4/Timer.c **** *
1287:Generated_Source\PSoC4/Timer.c **** * Return:
1288:Generated_Source\PSoC4/Timer.c **** *  Status
1289:Generated_Source\PSoC4/Timer.c **** *   Values:
1290:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer.c **** *
1293:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer.c **** {
 1777              		.loc 1 1295 0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 0
 1780              		@ frame_needed = 1, uses_anonymous_args = 0
 1781 0000 80B5     		push	{r7, lr}
 1782              		.cfi_def_cfa_offset 8
 1783              		.cfi_offset 7, -8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 55


 1784              		.cfi_offset 14, -4
 1785 0002 00AF     		add	r7, sp, #0
 1786              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1787              		.loc 1 1296 0
 1788 0004 054B     		ldr	r3, .L113
 1789 0006 1B68     		ldr	r3, [r3]
 1790 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1791              		.loc 1 1297 0
 1792 000a 044B     		ldr	r3, .L113
 1793 000c 1B68     		ldr	r3, [r3]
 1794 000e 0121     		movs	r1, #1
 1795 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1796              		.loc 1 1296 0
 1797 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/Timer.c **** }
 1798              		.loc 1 1298 0
 1799 0014 1800     		movs	r0, r3
 1800 0016 BD46     		mov	sp, r7
 1801              		@ sp needed
 1802 0018 80BD     		pop	{r7, pc}
 1803              	.L114:
 1804 001a C046     		.align	2
 1805              	.L113:
 1806 001c 04010540 		.word	1074069764
 1807              		.cfi_endproc
 1808              	.LFE34:
 1809              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1810              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1811              		.align	2
 1812              		.global	Timer_SetInterruptMode
 1813              		.code	16
 1814              		.thumb_func
 1815              		.type	Timer_SetInterruptMode, %function
 1816              	Timer_SetInterruptMode:
 1817              	.LFB35:
1299:Generated_Source\PSoC4/Timer.c **** 
1300:Generated_Source\PSoC4/Timer.c **** 
1301:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1303:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer.c **** *
1305:Generated_Source\PSoC4/Timer.c **** * Summary:
1306:Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer.c **** *
1309:Generated_Source\PSoC4/Timer.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer.c **** *   Values:
1312:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer.c **** *
1315:Generated_Source\PSoC4/Timer.c **** * Return:
1316:Generated_Source\PSoC4/Timer.c **** *  None
1317:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 56


1318:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer.c **** {
 1818              		.loc 1 1320 0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 8
 1821              		@ frame_needed = 1, uses_anonymous_args = 0
 1822 0000 80B5     		push	{r7, lr}
 1823              		.cfi_def_cfa_offset 8
 1824              		.cfi_offset 7, -8
 1825              		.cfi_offset 14, -4
 1826 0002 82B0     		sub	sp, sp, #8
 1827              		.cfi_def_cfa_offset 16
 1828 0004 00AF     		add	r7, sp, #0
 1829              		.cfi_def_cfa_register 7
 1830 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1831              		.loc 1 1321 0
 1832 0008 034B     		ldr	r3, .L116
 1833 000a 7A68     		ldr	r2, [r7, #4]
 1834 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/Timer.c **** }
 1835              		.loc 1 1322 0
 1836 000e C046     		nop
 1837 0010 BD46     		mov	sp, r7
 1838 0012 02B0     		add	sp, sp, #8
 1839              		@ sp needed
 1840 0014 80BD     		pop	{r7, pc}
 1841              	.L117:
 1842 0016 C046     		.align	2
 1843              	.L116:
 1844 0018 38010540 		.word	1074069816
 1845              		.cfi_endproc
 1846              	.LFE35:
 1847              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1848              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
 1849              		.align	2
 1850              		.global	Timer_GetInterruptSourceMasked
 1851              		.code	16
 1852              		.thumb_func
 1853              		.type	Timer_GetInterruptSourceMasked, %function
 1854              	Timer_GetInterruptSourceMasked:
 1855              	.LFB36:
1323:Generated_Source\PSoC4/Timer.c **** 
1324:Generated_Source\PSoC4/Timer.c **** 
1325:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer.c **** *
1329:Generated_Source\PSoC4/Timer.c **** * Summary:
1330:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer.c **** *
1332:Generated_Source\PSoC4/Timer.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer.c **** *   None
1334:Generated_Source\PSoC4/Timer.c **** *
1335:Generated_Source\PSoC4/Timer.c **** * Return:
1336:Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 57


1337:Generated_Source\PSoC4/Timer.c **** *   Values:
1338:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer.c **** *
1341:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer.c **** {
 1856              		.loc 1 1343 0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 0
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860 0000 80B5     		push	{r7, lr}
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 7, -8
 1863              		.cfi_offset 14, -4
 1864 0002 00AF     		add	r7, sp, #0
 1865              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1866              		.loc 1 1344 0
 1867 0004 024B     		ldr	r3, .L120
 1868 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/Timer.c **** }
 1869              		.loc 1 1345 0
 1870 0008 1800     		movs	r0, r3
 1871 000a BD46     		mov	sp, r7
 1872              		@ sp needed
 1873 000c 80BD     		pop	{r7, pc}
 1874              	.L121:
 1875 000e C046     		.align	2
 1876              	.L120:
 1877 0010 3C010540 		.word	1074069820
 1878              		.cfi_endproc
 1879              	.LFE36:
 1880              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1881              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1882              		.align	2
 1883              		.global	Timer_GetInterruptSource
 1884              		.code	16
 1885              		.thumb_func
 1886              		.type	Timer_GetInterruptSource, %function
 1887              	Timer_GetInterruptSource:
 1888              	.LFB37:
1346:Generated_Source\PSoC4/Timer.c **** 
1347:Generated_Source\PSoC4/Timer.c **** 
1348:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1350:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer.c **** *
1352:Generated_Source\PSoC4/Timer.c **** * Summary:
1353:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer.c **** *
1355:Generated_Source\PSoC4/Timer.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer.c **** *  None
1357:Generated_Source\PSoC4/Timer.c **** *
1358:Generated_Source\PSoC4/Timer.c **** * Return:
1359:Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer.c **** *   Values:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 58


1361:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer.c **** *
1364:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer.c **** {
 1889              		.loc 1 1366 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893 0000 80B5     		push	{r7, lr}
 1894              		.cfi_def_cfa_offset 8
 1895              		.cfi_offset 7, -8
 1896              		.cfi_offset 14, -4
 1897 0002 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1899              		.loc 1 1367 0
 1900 0004 024B     		ldr	r3, .L124
 1901 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/Timer.c **** }
 1902              		.loc 1 1368 0
 1903 0008 1800     		movs	r0, r3
 1904 000a BD46     		mov	sp, r7
 1905              		@ sp needed
 1906 000c 80BD     		pop	{r7, pc}
 1907              	.L125:
 1908 000e C046     		.align	2
 1909              	.L124:
 1910 0010 30010540 		.word	1074069808
 1911              		.cfi_endproc
 1912              	.LFE37:
 1913              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1914              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1915              		.align	2
 1916              		.global	Timer_ClearInterrupt
 1917              		.code	16
 1918              		.thumb_func
 1919              		.type	Timer_ClearInterrupt, %function
 1920              	Timer_ClearInterrupt:
 1921              	.LFB38:
1369:Generated_Source\PSoC4/Timer.c **** 
1370:Generated_Source\PSoC4/Timer.c **** 
1371:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1373:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer.c **** *
1375:Generated_Source\PSoC4/Timer.c **** * Summary:
1376:Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer.c **** *
1378:Generated_Source\PSoC4/Timer.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer.c **** *   Values:
1381:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer.c **** *
1384:Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 59


1385:Generated_Source\PSoC4/Timer.c **** *  None
1386:Generated_Source\PSoC4/Timer.c **** *
1387:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer.c **** {
 1922              		.loc 1 1389 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 8
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926 0000 80B5     		push	{r7, lr}
 1927              		.cfi_def_cfa_offset 8
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 82B0     		sub	sp, sp, #8
 1931              		.cfi_def_cfa_offset 16
 1932 0004 00AF     		add	r7, sp, #0
 1933              		.cfi_def_cfa_register 7
 1934 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1935              		.loc 1 1390 0
 1936 0008 034B     		ldr	r3, .L127
 1937 000a 7A68     		ldr	r2, [r7, #4]
 1938 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/Timer.c **** }
 1939              		.loc 1 1391 0
 1940 000e C046     		nop
 1941 0010 BD46     		mov	sp, r7
 1942 0012 02B0     		add	sp, sp, #8
 1943              		@ sp needed
 1944 0014 80BD     		pop	{r7, pc}
 1945              	.L128:
 1946 0016 C046     		.align	2
 1947              	.L127:
 1948 0018 30010540 		.word	1074069808
 1949              		.cfi_endproc
 1950              	.LFE38:
 1951              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1952              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1953              		.align	2
 1954              		.global	Timer_SetInterrupt
 1955              		.code	16
 1956              		.thumb_func
 1957              		.type	Timer_SetInterrupt, %function
 1958              	Timer_SetInterrupt:
 1959              	.LFB39:
1392:Generated_Source\PSoC4/Timer.c **** 
1393:Generated_Source\PSoC4/Timer.c **** 
1394:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1396:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer.c **** *
1398:Generated_Source\PSoC4/Timer.c **** * Summary:
1399:Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer.c **** *
1401:Generated_Source\PSoC4/Timer.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer.c **** *   Values:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 60


1404:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer.c **** *
1407:Generated_Source\PSoC4/Timer.c **** * Return:
1408:Generated_Source\PSoC4/Timer.c **** *  None
1409:Generated_Source\PSoC4/Timer.c **** *
1410:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer.c **** {
 1960              		.loc 1 1412 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 8
 1963              		@ frame_needed = 1, uses_anonymous_args = 0
 1964 0000 80B5     		push	{r7, lr}
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 7, -8
 1967              		.cfi_offset 14, -4
 1968 0002 82B0     		sub	sp, sp, #8
 1969              		.cfi_def_cfa_offset 16
 1970 0004 00AF     		add	r7, sp, #0
 1971              		.cfi_def_cfa_register 7
 1972 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1973              		.loc 1 1413 0
 1974 0008 034B     		ldr	r3, .L130
 1975 000a 7A68     		ldr	r2, [r7, #4]
 1976 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/Timer.c **** }
 1977              		.loc 1 1414 0
 1978 000e C046     		nop
 1979 0010 BD46     		mov	sp, r7
 1980 0012 02B0     		add	sp, sp, #8
 1981              		@ sp needed
 1982 0014 80BD     		pop	{r7, pc}
 1983              	.L131:
 1984 0016 C046     		.align	2
 1985              	.L130:
 1986 0018 34010540 		.word	1074069812
 1987              		.cfi_endproc
 1988              	.LFE39:
 1989              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1990              		.text
 1991              	.Letext0:
 1992              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1993              		.section	.debug_info,"",%progbits
 1994              	.Ldebug_info0:
 1995 0000 F7060000 		.4byte	0x6f7
 1996 0004 0400     		.2byte	0x4
 1997 0006 00000000 		.4byte	.Ldebug_abbrev0
 1998 000a 04       		.byte	0x4
 1999 000b 01       		.uleb128 0x1
 2000 000c 74020000 		.4byte	.LASF77
 2001 0010 0C       		.byte	0xc
 2002 0011 D6040000 		.4byte	.LASF78
 2003 0015 8D040000 		.4byte	.LASF79
 2004 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2005 001d 00000000 		.4byte	0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 61


 2006 0021 00000000 		.4byte	.Ldebug_line0
 2007 0025 02       		.uleb128 0x2
 2008 0026 01       		.byte	0x1
 2009 0027 06       		.byte	0x6
 2010 0028 D4000000 		.4byte	.LASF0
 2011 002c 02       		.uleb128 0x2
 2012 002d 01       		.byte	0x1
 2013 002e 08       		.byte	0x8
 2014 002f DD030000 		.4byte	.LASF1
 2015 0033 02       		.uleb128 0x2
 2016 0034 02       		.byte	0x2
 2017 0035 05       		.byte	0x5
 2018 0036 FC030000 		.4byte	.LASF2
 2019 003a 02       		.uleb128 0x2
 2020 003b 02       		.byte	0x2
 2021 003c 07       		.byte	0x7
 2022 003d 04020000 		.4byte	.LASF3
 2023 0041 02       		.uleb128 0x2
 2024 0042 04       		.byte	0x4
 2025 0043 05       		.byte	0x5
 2026 0044 0B010000 		.4byte	.LASF4
 2027 0048 02       		.uleb128 0x2
 2028 0049 04       		.byte	0x4
 2029 004a 07       		.byte	0x7
 2030 004b DC010000 		.4byte	.LASF5
 2031 004f 02       		.uleb128 0x2
 2032 0050 08       		.byte	0x8
 2033 0051 05       		.byte	0x5
 2034 0052 C6000000 		.4byte	.LASF6
 2035 0056 02       		.uleb128 0x2
 2036 0057 08       		.byte	0x8
 2037 0058 07       		.byte	0x7
 2038 0059 7E000000 		.4byte	.LASF7
 2039 005d 03       		.uleb128 0x3
 2040 005e 04       		.byte	0x4
 2041 005f 05       		.byte	0x5
 2042 0060 696E7400 		.ascii	"int\000"
 2043 0064 02       		.uleb128 0x2
 2044 0065 04       		.byte	0x4
 2045 0066 07       		.byte	0x7
 2046 0067 BB010000 		.4byte	.LASF8
 2047 006b 04       		.uleb128 0x4
 2048 006c 3B010000 		.4byte	.LASF9
 2049 0070 02       		.byte	0x2
 2050 0071 E401     		.2byte	0x1e4
 2051 0073 2C000000 		.4byte	0x2c
 2052 0077 04       		.uleb128 0x4
 2053 0078 5F010000 		.4byte	.LASF10
 2054 007c 02       		.byte	0x2
 2055 007d E601     		.2byte	0x1e6
 2056 007f 48000000 		.4byte	0x48
 2057 0083 02       		.uleb128 0x2
 2058 0084 04       		.byte	0x4
 2059 0085 04       		.byte	0x4
 2060 0086 81030000 		.4byte	.LASF11
 2061 008a 02       		.uleb128 0x2
 2062 008b 08       		.byte	0x8
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 62


 2063 008c 04       		.byte	0x4
 2064 008d 41010000 		.4byte	.LASF12
 2065 0091 02       		.uleb128 0x2
 2066 0092 01       		.byte	0x1
 2067 0093 08       		.byte	0x8
 2068 0094 47040000 		.4byte	.LASF13
 2069 0098 04       		.uleb128 0x4
 2070 0099 02030000 		.4byte	.LASF14
 2071 009d 02       		.byte	0x2
 2072 009e 9002     		.2byte	0x290
 2073 00a0 A4000000 		.4byte	0xa4
 2074 00a4 05       		.uleb128 0x5
 2075 00a5 77000000 		.4byte	0x77
 2076 00a9 02       		.uleb128 0x2
 2077 00aa 08       		.byte	0x8
 2078 00ab 04       		.byte	0x4
 2079 00ac 3B030000 		.4byte	.LASF15
 2080 00b0 02       		.uleb128 0x2
 2081 00b1 04       		.byte	0x4
 2082 00b2 07       		.byte	0x7
 2083 00b3 1D030000 		.4byte	.LASF16
 2084 00b7 06       		.uleb128 0x6
 2085 00b8 27040000 		.4byte	.LASF17
 2086 00bc 01       		.byte	0x1
 2087 00bd 26       		.byte	0x26
 2088 00be 00000000 		.4byte	.LFB0
 2089 00c2 38000000 		.4byte	.LFE0-.LFB0
 2090 00c6 01       		.uleb128 0x1
 2091 00c7 9C       		.byte	0x9c
 2092 00c8 07       		.uleb128 0x7
 2093 00c9 F7010000 		.4byte	.LASF19
 2094 00cd 01       		.byte	0x1
 2095 00ce B1       		.byte	0xb1
 2096 00cf 00000000 		.4byte	.LFB1
 2097 00d3 34000000 		.4byte	.LFE1-.LFB1
 2098 00d7 01       		.uleb128 0x1
 2099 00d8 9C       		.byte	0x9c
 2100 00d9 EC000000 		.4byte	0xec
 2101 00dd 08       		.uleb128 0x8
 2102 00de F5040000 		.4byte	.LASF21
 2103 00e2 01       		.byte	0x1
 2104 00e3 B3       		.byte	0xb3
 2105 00e4 6B000000 		.4byte	0x6b
 2106 00e8 02       		.uleb128 0x2
 2107 00e9 91       		.byte	0x91
 2108 00ea 6F       		.sleb128 -17
 2109 00eb 00       		.byte	0
 2110 00ec 06       		.uleb128 0x6
 2111 00ed C8010000 		.4byte	.LASF18
 2112 00f1 01       		.byte	0x1
 2113 00f2 E6       		.byte	0xe6
 2114 00f3 00000000 		.4byte	.LFB2
 2115 00f7 24000000 		.4byte	.LFE2-.LFB2
 2116 00fb 01       		.uleb128 0x1
 2117 00fc 9C       		.byte	0x9c
 2118 00fd 09       		.uleb128 0x9
 2119 00fe 3C020000 		.4byte	.LASF20
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 63


 2120 0102 01       		.byte	0x1
 2121 0103 0001     		.2byte	0x100
 2122 0105 00000000 		.4byte	.LFB3
 2123 0109 34000000 		.4byte	.LFE3-.LFB3
 2124 010d 01       		.uleb128 0x1
 2125 010e 9C       		.byte	0x9c
 2126 010f 23010000 		.4byte	0x123
 2127 0113 0A       		.uleb128 0xa
 2128 0114 F5040000 		.4byte	.LASF21
 2129 0118 01       		.byte	0x1
 2130 0119 0201     		.2byte	0x102
 2131 011b 6B000000 		.4byte	0x6b
 2132 011f 02       		.uleb128 0x2
 2133 0120 91       		.byte	0x91
 2134 0121 6F       		.sleb128 -17
 2135 0122 00       		.byte	0
 2136 0123 09       		.uleb128 0x9
 2137 0124 62000000 		.4byte	.LASF22
 2138 0128 01       		.byte	0x1
 2139 0129 2501     		.2byte	0x125
 2140 012b 00000000 		.4byte	.LFB4
 2141 012f 48000000 		.4byte	.LFE4-.LFB4
 2142 0133 01       		.uleb128 0x1
 2143 0134 9C       		.byte	0x9c
 2144 0135 58010000 		.4byte	0x158
 2145 0139 0B       		.uleb128 0xb
 2146 013a 4C040000 		.4byte	.LASF24
 2147 013e 01       		.byte	0x1
 2148 013f 2501     		.2byte	0x125
 2149 0141 77000000 		.4byte	0x77
 2150 0145 02       		.uleb128 0x2
 2151 0146 91       		.byte	0x91
 2152 0147 64       		.sleb128 -28
 2153 0148 0A       		.uleb128 0xa
 2154 0149 F5040000 		.4byte	.LASF21
 2155 014d 01       		.byte	0x1
 2156 014e 2701     		.2byte	0x127
 2157 0150 6B000000 		.4byte	0x6b
 2158 0154 02       		.uleb128 0x2
 2159 0155 91       		.byte	0x91
 2160 0156 6F       		.sleb128 -17
 2161 0157 00       		.byte	0
 2162 0158 09       		.uleb128 0x9
 2163 0159 E0000000 		.4byte	.LASF23
 2164 015d 01       		.byte	0x1
 2165 015e 4601     		.2byte	0x146
 2166 0160 00000000 		.4byte	.LFB5
 2167 0164 48000000 		.4byte	.LFE5-.LFB5
 2168 0168 01       		.uleb128 0x1
 2169 0169 9C       		.byte	0x9c
 2170 016a 8D010000 		.4byte	0x18d
 2171 016e 0B       		.uleb128 0xb
 2172 016f BF000000 		.4byte	.LASF25
 2173 0173 01       		.byte	0x1
 2174 0174 4601     		.2byte	0x146
 2175 0176 77000000 		.4byte	0x77
 2176 017a 02       		.uleb128 0x2
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 64


 2177 017b 91       		.byte	0x91
 2178 017c 64       		.sleb128 -28
 2179 017d 0A       		.uleb128 0xa
 2180 017e F5040000 		.4byte	.LASF21
 2181 0182 01       		.byte	0x1
 2182 0183 4801     		.2byte	0x148
 2183 0185 6B000000 		.4byte	0x6b
 2184 0189 02       		.uleb128 0x2
 2185 018a 91       		.byte	0x91
 2186 018b 6F       		.sleb128 -17
 2187 018c 00       		.byte	0
 2188 018d 09       		.uleb128 0x9
 2189 018e 14040000 		.4byte	.LASF26
 2190 0192 01       		.byte	0x1
 2191 0193 6B01     		.2byte	0x16b
 2192 0195 00000000 		.4byte	.LFB6
 2193 0199 48000000 		.4byte	.LFE6-.LFB6
 2194 019d 01       		.uleb128 0x1
 2195 019e 9C       		.byte	0x9c
 2196 019f C2010000 		.4byte	0x1c2
 2197 01a3 0B       		.uleb128 0xb
 2198 01a4 87030000 		.4byte	.LASF27
 2199 01a8 01       		.byte	0x1
 2200 01a9 6B01     		.2byte	0x16b
 2201 01ab 77000000 		.4byte	0x77
 2202 01af 02       		.uleb128 0x2
 2203 01b0 91       		.byte	0x91
 2204 01b1 64       		.sleb128 -28
 2205 01b2 0A       		.uleb128 0xa
 2206 01b3 F5040000 		.4byte	.LASF21
 2207 01b7 01       		.byte	0x1
 2208 01b8 6D01     		.2byte	0x16d
 2209 01ba 6B000000 		.4byte	0x6b
 2210 01be 02       		.uleb128 0x2
 2211 01bf 91       		.byte	0x91
 2212 01c0 6F       		.sleb128 -17
 2213 01c1 00       		.byte	0
 2214 01c2 09       		.uleb128 0x9
 2215 01c3 1B050000 		.4byte	.LASF28
 2216 01c7 01       		.byte	0x1
 2217 01c8 8B01     		.2byte	0x18b
 2218 01ca 00000000 		.4byte	.LFB7
 2219 01ce 50000000 		.4byte	.LFE7-.LFB7
 2220 01d2 01       		.uleb128 0x1
 2221 01d3 9C       		.byte	0x9c
 2222 01d4 F7010000 		.4byte	0x1f7
 2223 01d8 0B       		.uleb128 0xb
 2224 01d9 47020000 		.4byte	.LASF29
 2225 01dd 01       		.byte	0x1
 2226 01de 8B01     		.2byte	0x18b
 2227 01e0 77000000 		.4byte	0x77
 2228 01e4 02       		.uleb128 0x2
 2229 01e5 91       		.byte	0x91
 2230 01e6 64       		.sleb128 -28
 2231 01e7 0A       		.uleb128 0xa
 2232 01e8 F5040000 		.4byte	.LASF21
 2233 01ec 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 65


 2234 01ed 8D01     		.2byte	0x18d
 2235 01ef 6B000000 		.4byte	0x6b
 2236 01f3 02       		.uleb128 0x2
 2237 01f4 91       		.byte	0x91
 2238 01f5 6F       		.sleb128 -17
 2239 01f6 00       		.byte	0
 2240 01f7 0C       		.uleb128 0xc
 2241 01f8 65050000 		.4byte	.LASF30
 2242 01fc 01       		.byte	0x1
 2243 01fd C101     		.2byte	0x1c1
 2244 01ff 00000000 		.4byte	.LFB8
 2245 0203 20000000 		.4byte	.LFE8-.LFB8
 2246 0207 01       		.uleb128 0x1
 2247 0208 9C       		.byte	0x9c
 2248 0209 1D020000 		.4byte	0x21d
 2249 020d 0B       		.uleb128 0xb
 2250 020e EE010000 		.4byte	.LASF31
 2251 0212 01       		.byte	0x1
 2252 0213 C101     		.2byte	0x1c1
 2253 0215 77000000 		.4byte	0x77
 2254 0219 02       		.uleb128 0x2
 2255 021a 91       		.byte	0x91
 2256 021b 74       		.sleb128 -12
 2257 021c 00       		.byte	0
 2258 021d 09       		.uleb128 0x9
 2259 021e AA000000 		.4byte	.LASF32
 2260 0222 01       		.byte	0x1
 2261 0223 E501     		.2byte	0x1e5
 2262 0225 00000000 		.4byte	.LFB9
 2263 0229 4C000000 		.4byte	.LFE9-.LFB9
 2264 022d 01       		.uleb128 0x1
 2265 022e 9C       		.byte	0x9c
 2266 022f 52020000 		.4byte	0x252
 2267 0233 0B       		.uleb128 0xb
 2268 0234 2C050000 		.4byte	.LASF33
 2269 0238 01       		.byte	0x1
 2270 0239 E501     		.2byte	0x1e5
 2271 023b 77000000 		.4byte	0x77
 2272 023f 02       		.uleb128 0x2
 2273 0240 91       		.byte	0x91
 2274 0241 64       		.sleb128 -28
 2275 0242 0A       		.uleb128 0xa
 2276 0243 F5040000 		.4byte	.LASF21
 2277 0247 01       		.byte	0x1
 2278 0248 E701     		.2byte	0x1e7
 2279 024a 6B000000 		.4byte	0x6b
 2280 024e 02       		.uleb128 0x2
 2281 024f 91       		.byte	0x91
 2282 0250 6F       		.sleb128 -17
 2283 0251 00       		.byte	0
 2284 0252 09       		.uleb128 0x9
 2285 0253 00000000 		.4byte	.LASF34
 2286 0257 01       		.byte	0x1
 2287 0258 0702     		.2byte	0x207
 2288 025a 00000000 		.4byte	.LFB10
 2289 025e 4C000000 		.4byte	.LFE10-.LFB10
 2290 0262 01       		.uleb128 0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 66


 2291 0263 9C       		.byte	0x9c
 2292 0264 87020000 		.4byte	0x287
 2293 0268 0B       		.uleb128 0xb
 2294 0269 EB030000 		.4byte	.LASF35
 2295 026d 01       		.byte	0x1
 2296 026e 0702     		.2byte	0x207
 2297 0270 77000000 		.4byte	0x77
 2298 0274 02       		.uleb128 0x2
 2299 0275 91       		.byte	0x91
 2300 0276 64       		.sleb128 -28
 2301 0277 0A       		.uleb128 0xa
 2302 0278 F5040000 		.4byte	.LASF21
 2303 027c 01       		.byte	0x1
 2304 027d 0902     		.2byte	0x209
 2305 027f 6B000000 		.4byte	0x6b
 2306 0283 02       		.uleb128 0x2
 2307 0284 91       		.byte	0x91
 2308 0285 6F       		.sleb128 -17
 2309 0286 00       		.byte	0
 2310 0287 09       		.uleb128 0x9
 2311 0288 95000000 		.4byte	.LASF36
 2312 028c 01       		.byte	0x1
 2313 028d 2802     		.2byte	0x228
 2314 028f 00000000 		.4byte	.LFB11
 2315 0293 50000000 		.4byte	.LFE11-.LFB11
 2316 0297 01       		.uleb128 0x1
 2317 0298 9C       		.byte	0x9c
 2318 0299 BC020000 		.4byte	0x2bc
 2319 029d 0B       		.uleb128 0xb
 2320 029e 9C010000 		.4byte	.LASF37
 2321 02a2 01       		.byte	0x1
 2322 02a3 2802     		.2byte	0x228
 2323 02a5 77000000 		.4byte	0x77
 2324 02a9 02       		.uleb128 0x2
 2325 02aa 91       		.byte	0x91
 2326 02ab 64       		.sleb128 -28
 2327 02ac 0A       		.uleb128 0xa
 2328 02ad F5040000 		.4byte	.LASF21
 2329 02b1 01       		.byte	0x1
 2330 02b2 2A02     		.2byte	0x22a
 2331 02b4 6B000000 		.4byte	0x6b
 2332 02b8 02       		.uleb128 0x2
 2333 02b9 91       		.byte	0x91
 2334 02ba 6F       		.sleb128 -17
 2335 02bb 00       		.byte	0
 2336 02bc 09       		.uleb128 0x9
 2337 02bd 47030000 		.4byte	.LASF38
 2338 02c1 01       		.byte	0x1
 2339 02c2 4902     		.2byte	0x249
 2340 02c4 00000000 		.4byte	.LFB12
 2341 02c8 48000000 		.4byte	.LFE12-.LFB12
 2342 02cc 01       		.uleb128 0x1
 2343 02cd 9C       		.byte	0x9c
 2344 02ce F1020000 		.4byte	0x2f1
 2345 02d2 0B       		.uleb128 0xb
 2346 02d3 85010000 		.4byte	.LASF39
 2347 02d7 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 67


 2348 02d8 4902     		.2byte	0x249
 2349 02da 77000000 		.4byte	0x77
 2350 02de 02       		.uleb128 0x2
 2351 02df 91       		.byte	0x91
 2352 02e0 64       		.sleb128 -28
 2353 02e1 0A       		.uleb128 0xa
 2354 02e2 F5040000 		.4byte	.LASF21
 2355 02e6 01       		.byte	0x1
 2356 02e7 4B02     		.2byte	0x24b
 2357 02e9 6B000000 		.4byte	0x6b
 2358 02ed 02       		.uleb128 0x2
 2359 02ee 91       		.byte	0x91
 2360 02ef 6F       		.sleb128 -17
 2361 02f0 00       		.byte	0
 2362 02f1 0C       		.uleb128 0xc
 2363 02f2 17020000 		.4byte	.LASF40
 2364 02f6 01       		.byte	0x1
 2365 02f7 6702     		.2byte	0x267
 2366 02f9 00000000 		.4byte	.LFB13
 2367 02fd 20000000 		.4byte	.LFE13-.LFB13
 2368 0301 01       		.uleb128 0x1
 2369 0302 9C       		.byte	0x9c
 2370 0303 17030000 		.4byte	0x317
 2371 0307 0B       		.uleb128 0xb
 2372 0308 17000000 		.4byte	.LASF41
 2373 030c 01       		.byte	0x1
 2374 030d 6702     		.2byte	0x267
 2375 030f 77000000 		.4byte	0x77
 2376 0313 02       		.uleb128 0x2
 2377 0314 91       		.byte	0x91
 2378 0315 74       		.sleb128 -12
 2379 0316 00       		.byte	0
 2380 0317 0D       		.uleb128 0xd
 2381 0318 2A020000 		.4byte	.LASF46
 2382 031c 01       		.byte	0x1
 2383 031d 7B02     		.2byte	0x27b
 2384 031f 77000000 		.4byte	0x77
 2385 0323 00000000 		.4byte	.LFB14
 2386 0327 18000000 		.4byte	.LFE14-.LFB14
 2387 032b 01       		.uleb128 0x1
 2388 032c 9C       		.byte	0x9c
 2389 032d 09       		.uleb128 0x9
 2390 032e 32040000 		.4byte	.LASF42
 2391 0332 01       		.byte	0x1
 2392 0333 9802     		.2byte	0x298
 2393 0335 00000000 		.4byte	.LFB15
 2394 0339 48000000 		.4byte	.LFE15-.LFB15
 2395 033d 01       		.uleb128 0x1
 2396 033e 9C       		.byte	0x9c
 2397 033f 62030000 		.4byte	0x362
 2398 0343 0B       		.uleb128 0xb
 2399 0344 65040000 		.4byte	.LASF43
 2400 0348 01       		.byte	0x1
 2401 0349 9802     		.2byte	0x298
 2402 034b 77000000 		.4byte	0x77
 2403 034f 02       		.uleb128 0x2
 2404 0350 91       		.byte	0x91
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 68


 2405 0351 64       		.sleb128 -28
 2406 0352 0A       		.uleb128 0xa
 2407 0353 F5040000 		.4byte	.LASF21
 2408 0357 01       		.byte	0x1
 2409 0358 9A02     		.2byte	0x29a
 2410 035a 6B000000 		.4byte	0x6b
 2411 035e 02       		.uleb128 0x2
 2412 035f 91       		.byte	0x91
 2413 0360 6F       		.sleb128 -17
 2414 0361 00       		.byte	0
 2415 0362 0C       		.uleb128 0xc
 2416 0363 36000000 		.4byte	.LASF44
 2417 0367 01       		.byte	0x1
 2418 0368 B502     		.2byte	0x2b5
 2419 036a 00000000 		.4byte	.LFB16
 2420 036e 20000000 		.4byte	.LFE16-.LFB16
 2421 0372 01       		.uleb128 0x1
 2422 0373 9C       		.byte	0x9c
 2423 0374 88030000 		.4byte	0x388
 2424 0378 0B       		.uleb128 0xb
 2425 0379 5B000000 		.4byte	.LASF45
 2426 037d 01       		.byte	0x1
 2427 037e B502     		.2byte	0x2b5
 2428 0380 77000000 		.4byte	0x77
 2429 0384 02       		.uleb128 0x2
 2430 0385 91       		.byte	0x91
 2431 0386 74       		.sleb128 -12
 2432 0387 00       		.byte	0
 2433 0388 0D       		.uleb128 0xd
 2434 0389 71040000 		.4byte	.LASF47
 2435 038d 01       		.byte	0x1
 2436 038e C902     		.2byte	0x2c9
 2437 0390 77000000 		.4byte	0x77
 2438 0394 00000000 		.4byte	.LFB17
 2439 0398 18000000 		.4byte	.LFE17-.LFB17
 2440 039c 01       		.uleb128 0x1
 2441 039d 9C       		.byte	0x9c
 2442 039e 09       		.uleb128 0x9
 2443 039f 08030000 		.4byte	.LASF48
 2444 03a3 01       		.byte	0x1
 2445 03a4 E302     		.2byte	0x2e3
 2446 03a6 00000000 		.4byte	.LFB18
 2447 03aa 48000000 		.4byte	.LFE18-.LFB18
 2448 03ae 01       		.uleb128 0x1
 2449 03af 9C       		.byte	0x9c
 2450 03b0 D3030000 		.4byte	0x3d3
 2451 03b4 0B       		.uleb128 0xb
 2452 03b5 50050000 		.4byte	.LASF49
 2453 03b9 01       		.byte	0x1
 2454 03ba E302     		.2byte	0x2e3
 2455 03bc 77000000 		.4byte	0x77
 2456 03c0 02       		.uleb128 0x2
 2457 03c1 91       		.byte	0x91
 2458 03c2 64       		.sleb128 -28
 2459 03c3 0A       		.uleb128 0xa
 2460 03c4 F5040000 		.4byte	.LASF21
 2461 03c8 01       		.byte	0x1
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 69


 2462 03c9 E502     		.2byte	0x2e5
 2463 03cb 6B000000 		.4byte	0x6b
 2464 03cf 02       		.uleb128 0x2
 2465 03d0 91       		.byte	0x91
 2466 03d1 6F       		.sleb128 -17
 2467 03d2 00       		.byte	0
 2468 03d3 0C       		.uleb128 0xc
 2469 03d4 26030000 		.4byte	.LASF50
 2470 03d8 01       		.byte	0x1
 2471 03d9 FE02     		.2byte	0x2fe
 2472 03db 00000000 		.4byte	.LFB19
 2473 03df 20000000 		.4byte	.LFE19-.LFB19
 2474 03e3 01       		.uleb128 0x1
 2475 03e4 9C       		.byte	0x9c
 2476 03e5 F9030000 		.4byte	0x3f9
 2477 03e9 0B       		.uleb128 0xb
 2478 03ea 5B050000 		.4byte	.LASF51
 2479 03ee 01       		.byte	0x1
 2480 03ef FE02     		.2byte	0x2fe
 2481 03f1 77000000 		.4byte	0x77
 2482 03f5 02       		.uleb128 0x2
 2483 03f6 91       		.byte	0x91
 2484 03f7 74       		.sleb128 -12
 2485 03f8 00       		.byte	0
 2486 03f9 0D       		.uleb128 0xd
 2487 03fa 5A030000 		.4byte	.LASF52
 2488 03fe 01       		.byte	0x1
 2489 03ff 1203     		.2byte	0x312
 2490 0401 77000000 		.4byte	0x77
 2491 0405 00000000 		.4byte	.LFB20
 2492 0409 18000000 		.4byte	.LFE20-.LFB20
 2493 040d 01       		.uleb128 0x1
 2494 040e 9C       		.byte	0x9c
 2495 040f 09       		.uleb128 0x9
 2496 0410 A3030000 		.4byte	.LASF53
 2497 0414 01       		.byte	0x1
 2498 0415 2C03     		.2byte	0x32c
 2499 0417 00000000 		.4byte	.LFB21
 2500 041b 4C000000 		.4byte	.LFE21-.LFB21
 2501 041f 01       		.uleb128 0x1
 2502 0420 9C       		.byte	0x9c
 2503 0421 44040000 		.4byte	0x444
 2504 0425 0B       		.uleb128 0xb
 2505 0426 50050000 		.4byte	.LASF49
 2506 042a 01       		.byte	0x1
 2507 042b 2C03     		.2byte	0x32c
 2508 042d 77000000 		.4byte	0x77
 2509 0431 02       		.uleb128 0x2
 2510 0432 91       		.byte	0x91
 2511 0433 64       		.sleb128 -28
 2512 0434 0A       		.uleb128 0xa
 2513 0435 F5040000 		.4byte	.LASF21
 2514 0439 01       		.byte	0x1
 2515 043a 2E03     		.2byte	0x32e
 2516 043c 6B000000 		.4byte	0x6b
 2517 0440 02       		.uleb128 0x2
 2518 0441 91       		.byte	0x91
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 70


 2519 0442 6F       		.sleb128 -17
 2520 0443 00       		.byte	0
 2521 0444 0C       		.uleb128 0xc
 2522 0445 66010000 		.4byte	.LASF54
 2523 0449 01       		.byte	0x1
 2524 044a 5103     		.2byte	0x351
 2525 044c 00000000 		.4byte	.LFB22
 2526 0450 20000000 		.4byte	.LFE22-.LFB22
 2527 0454 01       		.uleb128 0x1
 2528 0455 9C       		.byte	0x9c
 2529 0456 6A040000 		.4byte	0x46a
 2530 045a 0B       		.uleb128 0xb
 2531 045b 03010000 		.4byte	.LASF55
 2532 045f 01       		.byte	0x1
 2533 0460 5103     		.2byte	0x351
 2534 0462 77000000 		.4byte	0x77
 2535 0466 02       		.uleb128 0x2
 2536 0467 91       		.byte	0x91
 2537 0468 74       		.sleb128 -12
 2538 0469 00       		.byte	0
 2539 046a 0D       		.uleb128 0xd
 2540 046b 8A010000 		.4byte	.LASF56
 2541 046f 01       		.byte	0x1
 2542 0470 8403     		.2byte	0x384
 2543 0472 77000000 		.4byte	0x77
 2544 0476 00000000 		.4byte	.LFB23
 2545 047a 18000000 		.4byte	.LFE23-.LFB23
 2546 047e 01       		.uleb128 0x1
 2547 047f 9C       		.byte	0x9c
 2548 0480 0C       		.uleb128 0xc
 2549 0481 A5010000 		.4byte	.LASF57
 2550 0485 01       		.byte	0x1
 2551 0486 BA03     		.2byte	0x3ba
 2552 0488 00000000 		.4byte	.LFB24
 2553 048c 20000000 		.4byte	.LFE24-.LFB24
 2554 0490 01       		.uleb128 0x1
 2555 0491 9C       		.byte	0x9c
 2556 0492 A6040000 		.4byte	0x4a6
 2557 0496 0B       		.uleb128 0xb
 2558 0497 82040000 		.4byte	.LASF58
 2559 049b 01       		.byte	0x1
 2560 049c BA03     		.2byte	0x3ba
 2561 049e 77000000 		.4byte	0x77
 2562 04a2 02       		.uleb128 0x2
 2563 04a3 91       		.byte	0x91
 2564 04a4 74       		.sleb128 -12
 2565 04a5 00       		.byte	0
 2566 04a6 0D       		.uleb128 0xd
 2567 04a7 76050000 		.4byte	.LASF59
 2568 04ab 01       		.byte	0x1
 2569 04ac E803     		.2byte	0x3e8
 2570 04ae 77000000 		.4byte	0x77
 2571 04b2 00000000 		.4byte	.LFB25
 2572 04b6 18000000 		.4byte	.LFE25-.LFB25
 2573 04ba 01       		.uleb128 0x1
 2574 04bb 9C       		.byte	0x9c
 2575 04bc 0D       		.uleb128 0xd
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 71


 2576 04bd 14010000 		.4byte	.LASF60
 2577 04c1 01       		.byte	0x1
 2578 04c2 1604     		.2byte	0x416
 2579 04c4 77000000 		.4byte	0x77
 2580 04c8 00000000 		.4byte	.LFB26
 2581 04cc 18000000 		.4byte	.LFE26-.LFB26
 2582 04d0 01       		.uleb128 0x1
 2583 04d1 9C       		.byte	0x9c
 2584 04d2 0D       		.uleb128 0xd
 2585 04d3 B7030000 		.4byte	.LASF61
 2586 04d7 01       		.byte	0x1
 2587 04d8 2B04     		.2byte	0x42b
 2588 04da 77000000 		.4byte	0x77
 2589 04de 00000000 		.4byte	.LFB27
 2590 04e2 18000000 		.4byte	.LFE27-.LFB27
 2591 04e6 01       		.uleb128 0x1
 2592 04e7 9C       		.byte	0x9c
 2593 04e8 09       		.uleb128 0x9
 2594 04e9 06050000 		.4byte	.LASF62
 2595 04ed 01       		.byte	0x1
 2596 04ee 4604     		.2byte	0x446
 2597 04f0 00000000 		.4byte	.LFB28
 2598 04f4 44000000 		.4byte	.LFE28-.LFB28
 2599 04f8 01       		.uleb128 0x1
 2600 04f9 9C       		.byte	0x9c
 2601 04fa 1D050000 		.4byte	0x51d
 2602 04fe 0B       		.uleb128 0xb
 2603 04ff 79010000 		.4byte	.LASF63
 2604 0503 01       		.byte	0x1
 2605 0504 4604     		.2byte	0x446
 2606 0506 77000000 		.4byte	0x77
 2607 050a 02       		.uleb128 0x2
 2608 050b 91       		.byte	0x91
 2609 050c 64       		.sleb128 -28
 2610 050d 0A       		.uleb128 0xa
 2611 050e F5040000 		.4byte	.LASF21
 2612 0512 01       		.byte	0x1
 2613 0513 4804     		.2byte	0x448
 2614 0515 6B000000 		.4byte	0x6b
 2615 0519 02       		.uleb128 0x2
 2616 051a 91       		.byte	0x91
 2617 051b 6F       		.sleb128 -17
 2618 051c 00       		.byte	0
 2619 051d 09       		.uleb128 0x9
 2620 051e 51040000 		.4byte	.LASF64
 2621 0522 01       		.byte	0x1
 2622 0523 6704     		.2byte	0x467
 2623 0525 00000000 		.4byte	.LFB29
 2624 0529 48000000 		.4byte	.LFE29-.LFB29
 2625 052d 01       		.uleb128 0x1
 2626 052e 9C       		.byte	0x9c
 2627 052f 52050000 		.4byte	0x552
 2628 0533 0B       		.uleb128 0xb
 2629 0534 79010000 		.4byte	.LASF63
 2630 0538 01       		.byte	0x1
 2631 0539 6704     		.2byte	0x467
 2632 053b 77000000 		.4byte	0x77
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 72


 2633 053f 02       		.uleb128 0x2
 2634 0540 91       		.byte	0x91
 2635 0541 64       		.sleb128 -28
 2636 0542 0A       		.uleb128 0xa
 2637 0543 F5040000 		.4byte	.LASF21
 2638 0547 01       		.byte	0x1
 2639 0548 6904     		.2byte	0x469
 2640 054a 6B000000 		.4byte	0x6b
 2641 054e 02       		.uleb128 0x2
 2642 054f 91       		.byte	0x91
 2643 0550 6F       		.sleb128 -17
 2644 0551 00       		.byte	0
 2645 0552 09       		.uleb128 0x9
 2646 0553 6E030000 		.4byte	.LASF65
 2647 0557 01       		.byte	0x1
 2648 0558 8804     		.2byte	0x488
 2649 055a 00000000 		.4byte	.LFB30
 2650 055e 4C000000 		.4byte	.LFE30-.LFB30
 2651 0562 01       		.uleb128 0x1
 2652 0563 9C       		.byte	0x9c
 2653 0564 87050000 		.4byte	0x587
 2654 0568 0B       		.uleb128 0xb
 2655 0569 79010000 		.4byte	.LASF63
 2656 056d 01       		.byte	0x1
 2657 056e 8804     		.2byte	0x488
 2658 0570 77000000 		.4byte	0x77
 2659 0574 02       		.uleb128 0x2
 2660 0575 91       		.byte	0x91
 2661 0576 64       		.sleb128 -28
 2662 0577 0A       		.uleb128 0xa
 2663 0578 F5040000 		.4byte	.LASF21
 2664 057c 01       		.byte	0x1
 2665 057d 8A04     		.2byte	0x48a
 2666 057f 6B000000 		.4byte	0x6b
 2667 0583 02       		.uleb128 0x2
 2668 0584 91       		.byte	0x91
 2669 0585 6F       		.sleb128 -17
 2670 0586 00       		.byte	0
 2671 0587 09       		.uleb128 0x9
 2672 0588 91030000 		.4byte	.LASF66
 2673 058c 01       		.byte	0x1
 2674 058d A804     		.2byte	0x4a8
 2675 058f 00000000 		.4byte	.LFB31
 2676 0593 48000000 		.4byte	.LFE31-.LFB31
 2677 0597 01       		.uleb128 0x1
 2678 0598 9C       		.byte	0x9c
 2679 0599 BC050000 		.4byte	0x5bc
 2680 059d 0B       		.uleb128 0xb
 2681 059e 79010000 		.4byte	.LASF63
 2682 05a2 01       		.byte	0x1
 2683 05a3 A804     		.2byte	0x4a8
 2684 05a5 77000000 		.4byte	0x77
 2685 05a9 02       		.uleb128 0x2
 2686 05aa 91       		.byte	0x91
 2687 05ab 64       		.sleb128 -28
 2688 05ac 0A       		.uleb128 0xa
 2689 05ad F5040000 		.4byte	.LASF21
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 73


 2690 05b1 01       		.byte	0x1
 2691 05b2 AA04     		.2byte	0x4aa
 2692 05b4 6B000000 		.4byte	0x6b
 2693 05b8 02       		.uleb128 0x2
 2694 05b9 91       		.byte	0x91
 2695 05ba 6F       		.sleb128 -17
 2696 05bb 00       		.byte	0
 2697 05bc 09       		.uleb128 0x9
 2698 05bd F0000000 		.4byte	.LASF67
 2699 05c1 01       		.byte	0x1
 2700 05c2 C904     		.2byte	0x4c9
 2701 05c4 00000000 		.4byte	.LFB32
 2702 05c8 48000000 		.4byte	.LFE32-.LFB32
 2703 05cc 01       		.uleb128 0x1
 2704 05cd 9C       		.byte	0x9c
 2705 05ce F1050000 		.4byte	0x5f1
 2706 05d2 0B       		.uleb128 0xb
 2707 05d3 79010000 		.4byte	.LASF63
 2708 05d7 01       		.byte	0x1
 2709 05d8 C904     		.2byte	0x4c9
 2710 05da 77000000 		.4byte	0x77
 2711 05de 02       		.uleb128 0x2
 2712 05df 91       		.byte	0x91
 2713 05e0 64       		.sleb128 -28
 2714 05e1 0A       		.uleb128 0xa
 2715 05e2 F5040000 		.4byte	.LASF21
 2716 05e6 01       		.byte	0x1
 2717 05e7 CB04     		.2byte	0x4cb
 2718 05e9 6B000000 		.4byte	0x6b
 2719 05ed 02       		.uleb128 0x2
 2720 05ee 91       		.byte	0x91
 2721 05ef 6F       		.sleb128 -17
 2722 05f0 00       		.byte	0
 2723 05f1 09       		.uleb128 0x9
 2724 05f2 26010000 		.4byte	.LASF68
 2725 05f6 01       		.byte	0x1
 2726 05f7 F104     		.2byte	0x4f1
 2727 05f9 00000000 		.4byte	.LFB33
 2728 05fd 3C000000 		.4byte	.LFE33-.LFB33
 2729 0601 01       		.uleb128 0x1
 2730 0602 9C       		.byte	0x9c
 2731 0603 35060000 		.4byte	0x635
 2732 0607 0B       		.uleb128 0xb
 2733 0608 85010000 		.4byte	.LASF39
 2734 060c 01       		.byte	0x1
 2735 060d F104     		.2byte	0x4f1
 2736 060f 77000000 		.4byte	0x77
 2737 0613 02       		.uleb128 0x2
 2738 0614 91       		.byte	0x91
 2739 0615 64       		.sleb128 -28
 2740 0616 0B       		.uleb128 0xb
 2741 0617 D4010000 		.4byte	.LASF69
 2742 061b 01       		.byte	0x1
 2743 061c F104     		.2byte	0x4f1
 2744 061e 77000000 		.4byte	0x77
 2745 0622 02       		.uleb128 0x2
 2746 0623 91       		.byte	0x91
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 74


 2747 0624 60       		.sleb128 -32
 2748 0625 0A       		.uleb128 0xa
 2749 0626 F5040000 		.4byte	.LASF21
 2750 062a 01       		.byte	0x1
 2751 062b F304     		.2byte	0x4f3
 2752 062d 6B000000 		.4byte	0x6b
 2753 0631 02       		.uleb128 0x2
 2754 0632 91       		.byte	0x91
 2755 0633 6F       		.sleb128 -17
 2756 0634 00       		.byte	0
 2757 0635 0D       		.uleb128 0xd
 2758 0636 CC030000 		.4byte	.LASF70
 2759 063a 01       		.byte	0x1
 2760 063b 0E05     		.2byte	0x50e
 2761 063d 77000000 		.4byte	0x77
 2762 0641 00000000 		.4byte	.LFB34
 2763 0645 20000000 		.4byte	.LFE34-.LFB34
 2764 0649 01       		.uleb128 0x1
 2765 064a 9C       		.byte	0x9c
 2766 064b 0C       		.uleb128 0xc
 2767 064c 48010000 		.4byte	.LASF71
 2768 0650 01       		.byte	0x1
 2769 0651 2705     		.2byte	0x527
 2770 0653 00000000 		.4byte	.LFB35
 2771 0657 1C000000 		.4byte	.LFE35-.LFB35
 2772 065b 01       		.uleb128 0x1
 2773 065c 9C       		.byte	0x9c
 2774 065d 71060000 		.4byte	0x671
 2775 0661 0B       		.uleb128 0xb
 2776 0662 06040000 		.4byte	.LASF72
 2777 0666 01       		.byte	0x1
 2778 0667 2705     		.2byte	0x527
 2779 0669 77000000 		.4byte	0x77
 2780 066d 02       		.uleb128 0x2
 2781 066e 91       		.byte	0x91
 2782 066f 74       		.sleb128 -12
 2783 0670 00       		.byte	0
 2784 0671 0D       		.uleb128 0xd
 2785 0672 55020000 		.4byte	.LASF73
 2786 0676 01       		.byte	0x1
 2787 0677 3E05     		.2byte	0x53e
 2788 0679 77000000 		.4byte	0x77
 2789 067d 00000000 		.4byte	.LFB36
 2790 0681 14000000 		.4byte	.LFE36-.LFB36
 2791 0685 01       		.uleb128 0x1
 2792 0686 9C       		.byte	0x9c
 2793 0687 0D       		.uleb128 0xd
 2794 0688 1D000000 		.4byte	.LASF74
 2795 068c 01       		.byte	0x1
 2796 068d 5505     		.2byte	0x555
 2797 068f 77000000 		.4byte	0x77
 2798 0693 00000000 		.4byte	.LFB37
 2799 0697 14000000 		.4byte	.LFE37-.LFB37
 2800 069b 01       		.uleb128 0x1
 2801 069c 9C       		.byte	0x9c
 2802 069d 0C       		.uleb128 0xc
 2803 069e 3B050000 		.4byte	.LASF75
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 75


 2804 06a2 01       		.byte	0x1
 2805 06a3 6C05     		.2byte	0x56c
 2806 06a5 00000000 		.4byte	.LFB38
 2807 06a9 1C000000 		.4byte	.LFE38-.LFB38
 2808 06ad 01       		.uleb128 0x1
 2809 06ae 9C       		.byte	0x9c
 2810 06af C3060000 		.4byte	0x6c3
 2811 06b3 0B       		.uleb128 0xb
 2812 06b4 06040000 		.4byte	.LASF72
 2813 06b8 01       		.byte	0x1
 2814 06b9 6C05     		.2byte	0x56c
 2815 06bb 77000000 		.4byte	0x77
 2816 06bf 02       		.uleb128 0x2
 2817 06c0 91       		.byte	0x91
 2818 06c1 74       		.sleb128 -12
 2819 06c2 00       		.byte	0
 2820 06c3 0C       		.uleb128 0xc
 2821 06c4 48000000 		.4byte	.LASF76
 2822 06c8 01       		.byte	0x1
 2823 06c9 8305     		.2byte	0x583
 2824 06cb 00000000 		.4byte	.LFB39
 2825 06cf 1C000000 		.4byte	.LFE39-.LFB39
 2826 06d3 01       		.uleb128 0x1
 2827 06d4 9C       		.byte	0x9c
 2828 06d5 E9060000 		.4byte	0x6e9
 2829 06d9 0B       		.uleb128 0xb
 2830 06da 06040000 		.4byte	.LASF72
 2831 06de 01       		.byte	0x1
 2832 06df 8305     		.2byte	0x583
 2833 06e1 77000000 		.4byte	0x77
 2834 06e5 02       		.uleb128 0x2
 2835 06e6 91       		.byte	0x91
 2836 06e7 74       		.sleb128 -12
 2837 06e8 00       		.byte	0
 2838 06e9 0E       		.uleb128 0xe
 2839 06ea 70000000 		.4byte	.LASF80
 2840 06ee 01       		.byte	0x1
 2841 06ef 15       		.byte	0x15
 2842 06f0 6B000000 		.4byte	0x6b
 2843 06f4 05       		.uleb128 0x5
 2844 06f5 03       		.byte	0x3
 2845 06f6 00000000 		.4byte	Timer_initVar
 2846 06fa 00       		.byte	0
 2847              		.section	.debug_abbrev,"",%progbits
 2848              	.Ldebug_abbrev0:
 2849 0000 01       		.uleb128 0x1
 2850 0001 11       		.uleb128 0x11
 2851 0002 01       		.byte	0x1
 2852 0003 25       		.uleb128 0x25
 2853 0004 0E       		.uleb128 0xe
 2854 0005 13       		.uleb128 0x13
 2855 0006 0B       		.uleb128 0xb
 2856 0007 03       		.uleb128 0x3
 2857 0008 0E       		.uleb128 0xe
 2858 0009 1B       		.uleb128 0x1b
 2859 000a 0E       		.uleb128 0xe
 2860 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 76


 2861 000c 17       		.uleb128 0x17
 2862 000d 11       		.uleb128 0x11
 2863 000e 01       		.uleb128 0x1
 2864 000f 10       		.uleb128 0x10
 2865 0010 17       		.uleb128 0x17
 2866 0011 00       		.byte	0
 2867 0012 00       		.byte	0
 2868 0013 02       		.uleb128 0x2
 2869 0014 24       		.uleb128 0x24
 2870 0015 00       		.byte	0
 2871 0016 0B       		.uleb128 0xb
 2872 0017 0B       		.uleb128 0xb
 2873 0018 3E       		.uleb128 0x3e
 2874 0019 0B       		.uleb128 0xb
 2875 001a 03       		.uleb128 0x3
 2876 001b 0E       		.uleb128 0xe
 2877 001c 00       		.byte	0
 2878 001d 00       		.byte	0
 2879 001e 03       		.uleb128 0x3
 2880 001f 24       		.uleb128 0x24
 2881 0020 00       		.byte	0
 2882 0021 0B       		.uleb128 0xb
 2883 0022 0B       		.uleb128 0xb
 2884 0023 3E       		.uleb128 0x3e
 2885 0024 0B       		.uleb128 0xb
 2886 0025 03       		.uleb128 0x3
 2887 0026 08       		.uleb128 0x8
 2888 0027 00       		.byte	0
 2889 0028 00       		.byte	0
 2890 0029 04       		.uleb128 0x4
 2891 002a 16       		.uleb128 0x16
 2892 002b 00       		.byte	0
 2893 002c 03       		.uleb128 0x3
 2894 002d 0E       		.uleb128 0xe
 2895 002e 3A       		.uleb128 0x3a
 2896 002f 0B       		.uleb128 0xb
 2897 0030 3B       		.uleb128 0x3b
 2898 0031 05       		.uleb128 0x5
 2899 0032 49       		.uleb128 0x49
 2900 0033 13       		.uleb128 0x13
 2901 0034 00       		.byte	0
 2902 0035 00       		.byte	0
 2903 0036 05       		.uleb128 0x5
 2904 0037 35       		.uleb128 0x35
 2905 0038 00       		.byte	0
 2906 0039 49       		.uleb128 0x49
 2907 003a 13       		.uleb128 0x13
 2908 003b 00       		.byte	0
 2909 003c 00       		.byte	0
 2910 003d 06       		.uleb128 0x6
 2911 003e 2E       		.uleb128 0x2e
 2912 003f 00       		.byte	0
 2913 0040 3F       		.uleb128 0x3f
 2914 0041 19       		.uleb128 0x19
 2915 0042 03       		.uleb128 0x3
 2916 0043 0E       		.uleb128 0xe
 2917 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 77


 2918 0045 0B       		.uleb128 0xb
 2919 0046 3B       		.uleb128 0x3b
 2920 0047 0B       		.uleb128 0xb
 2921 0048 27       		.uleb128 0x27
 2922 0049 19       		.uleb128 0x19
 2923 004a 11       		.uleb128 0x11
 2924 004b 01       		.uleb128 0x1
 2925 004c 12       		.uleb128 0x12
 2926 004d 06       		.uleb128 0x6
 2927 004e 40       		.uleb128 0x40
 2928 004f 18       		.uleb128 0x18
 2929 0050 9642     		.uleb128 0x2116
 2930 0052 19       		.uleb128 0x19
 2931 0053 00       		.byte	0
 2932 0054 00       		.byte	0
 2933 0055 07       		.uleb128 0x7
 2934 0056 2E       		.uleb128 0x2e
 2935 0057 01       		.byte	0x1
 2936 0058 3F       		.uleb128 0x3f
 2937 0059 19       		.uleb128 0x19
 2938 005a 03       		.uleb128 0x3
 2939 005b 0E       		.uleb128 0xe
 2940 005c 3A       		.uleb128 0x3a
 2941 005d 0B       		.uleb128 0xb
 2942 005e 3B       		.uleb128 0x3b
 2943 005f 0B       		.uleb128 0xb
 2944 0060 27       		.uleb128 0x27
 2945 0061 19       		.uleb128 0x19
 2946 0062 11       		.uleb128 0x11
 2947 0063 01       		.uleb128 0x1
 2948 0064 12       		.uleb128 0x12
 2949 0065 06       		.uleb128 0x6
 2950 0066 40       		.uleb128 0x40
 2951 0067 18       		.uleb128 0x18
 2952 0068 9642     		.uleb128 0x2116
 2953 006a 19       		.uleb128 0x19
 2954 006b 01       		.uleb128 0x1
 2955 006c 13       		.uleb128 0x13
 2956 006d 00       		.byte	0
 2957 006e 00       		.byte	0
 2958 006f 08       		.uleb128 0x8
 2959 0070 34       		.uleb128 0x34
 2960 0071 00       		.byte	0
 2961 0072 03       		.uleb128 0x3
 2962 0073 0E       		.uleb128 0xe
 2963 0074 3A       		.uleb128 0x3a
 2964 0075 0B       		.uleb128 0xb
 2965 0076 3B       		.uleb128 0x3b
 2966 0077 0B       		.uleb128 0xb
 2967 0078 49       		.uleb128 0x49
 2968 0079 13       		.uleb128 0x13
 2969 007a 02       		.uleb128 0x2
 2970 007b 18       		.uleb128 0x18
 2971 007c 00       		.byte	0
 2972 007d 00       		.byte	0
 2973 007e 09       		.uleb128 0x9
 2974 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 78


 2975 0080 01       		.byte	0x1
 2976 0081 3F       		.uleb128 0x3f
 2977 0082 19       		.uleb128 0x19
 2978 0083 03       		.uleb128 0x3
 2979 0084 0E       		.uleb128 0xe
 2980 0085 3A       		.uleb128 0x3a
 2981 0086 0B       		.uleb128 0xb
 2982 0087 3B       		.uleb128 0x3b
 2983 0088 05       		.uleb128 0x5
 2984 0089 27       		.uleb128 0x27
 2985 008a 19       		.uleb128 0x19
 2986 008b 11       		.uleb128 0x11
 2987 008c 01       		.uleb128 0x1
 2988 008d 12       		.uleb128 0x12
 2989 008e 06       		.uleb128 0x6
 2990 008f 40       		.uleb128 0x40
 2991 0090 18       		.uleb128 0x18
 2992 0091 9642     		.uleb128 0x2116
 2993 0093 19       		.uleb128 0x19
 2994 0094 01       		.uleb128 0x1
 2995 0095 13       		.uleb128 0x13
 2996 0096 00       		.byte	0
 2997 0097 00       		.byte	0
 2998 0098 0A       		.uleb128 0xa
 2999 0099 34       		.uleb128 0x34
 3000 009a 00       		.byte	0
 3001 009b 03       		.uleb128 0x3
 3002 009c 0E       		.uleb128 0xe
 3003 009d 3A       		.uleb128 0x3a
 3004 009e 0B       		.uleb128 0xb
 3005 009f 3B       		.uleb128 0x3b
 3006 00a0 05       		.uleb128 0x5
 3007 00a1 49       		.uleb128 0x49
 3008 00a2 13       		.uleb128 0x13
 3009 00a3 02       		.uleb128 0x2
 3010 00a4 18       		.uleb128 0x18
 3011 00a5 00       		.byte	0
 3012 00a6 00       		.byte	0
 3013 00a7 0B       		.uleb128 0xb
 3014 00a8 05       		.uleb128 0x5
 3015 00a9 00       		.byte	0
 3016 00aa 03       		.uleb128 0x3
 3017 00ab 0E       		.uleb128 0xe
 3018 00ac 3A       		.uleb128 0x3a
 3019 00ad 0B       		.uleb128 0xb
 3020 00ae 3B       		.uleb128 0x3b
 3021 00af 05       		.uleb128 0x5
 3022 00b0 49       		.uleb128 0x49
 3023 00b1 13       		.uleb128 0x13
 3024 00b2 02       		.uleb128 0x2
 3025 00b3 18       		.uleb128 0x18
 3026 00b4 00       		.byte	0
 3027 00b5 00       		.byte	0
 3028 00b6 0C       		.uleb128 0xc
 3029 00b7 2E       		.uleb128 0x2e
 3030 00b8 01       		.byte	0x1
 3031 00b9 3F       		.uleb128 0x3f
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 79


 3032 00ba 19       		.uleb128 0x19
 3033 00bb 03       		.uleb128 0x3
 3034 00bc 0E       		.uleb128 0xe
 3035 00bd 3A       		.uleb128 0x3a
 3036 00be 0B       		.uleb128 0xb
 3037 00bf 3B       		.uleb128 0x3b
 3038 00c0 05       		.uleb128 0x5
 3039 00c1 27       		.uleb128 0x27
 3040 00c2 19       		.uleb128 0x19
 3041 00c3 11       		.uleb128 0x11
 3042 00c4 01       		.uleb128 0x1
 3043 00c5 12       		.uleb128 0x12
 3044 00c6 06       		.uleb128 0x6
 3045 00c7 40       		.uleb128 0x40
 3046 00c8 18       		.uleb128 0x18
 3047 00c9 9742     		.uleb128 0x2117
 3048 00cb 19       		.uleb128 0x19
 3049 00cc 01       		.uleb128 0x1
 3050 00cd 13       		.uleb128 0x13
 3051 00ce 00       		.byte	0
 3052 00cf 00       		.byte	0
 3053 00d0 0D       		.uleb128 0xd
 3054 00d1 2E       		.uleb128 0x2e
 3055 00d2 00       		.byte	0
 3056 00d3 3F       		.uleb128 0x3f
 3057 00d4 19       		.uleb128 0x19
 3058 00d5 03       		.uleb128 0x3
 3059 00d6 0E       		.uleb128 0xe
 3060 00d7 3A       		.uleb128 0x3a
 3061 00d8 0B       		.uleb128 0xb
 3062 00d9 3B       		.uleb128 0x3b
 3063 00da 05       		.uleb128 0x5
 3064 00db 27       		.uleb128 0x27
 3065 00dc 19       		.uleb128 0x19
 3066 00dd 49       		.uleb128 0x49
 3067 00de 13       		.uleb128 0x13
 3068 00df 11       		.uleb128 0x11
 3069 00e0 01       		.uleb128 0x1
 3070 00e1 12       		.uleb128 0x12
 3071 00e2 06       		.uleb128 0x6
 3072 00e3 40       		.uleb128 0x40
 3073 00e4 18       		.uleb128 0x18
 3074 00e5 9742     		.uleb128 0x2117
 3075 00e7 19       		.uleb128 0x19
 3076 00e8 00       		.byte	0
 3077 00e9 00       		.byte	0
 3078 00ea 0E       		.uleb128 0xe
 3079 00eb 34       		.uleb128 0x34
 3080 00ec 00       		.byte	0
 3081 00ed 03       		.uleb128 0x3
 3082 00ee 0E       		.uleb128 0xe
 3083 00ef 3A       		.uleb128 0x3a
 3084 00f0 0B       		.uleb128 0xb
 3085 00f1 3B       		.uleb128 0x3b
 3086 00f2 0B       		.uleb128 0xb
 3087 00f3 49       		.uleb128 0x49
 3088 00f4 13       		.uleb128 0x13
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 80


 3089 00f5 3F       		.uleb128 0x3f
 3090 00f6 19       		.uleb128 0x19
 3091 00f7 02       		.uleb128 0x2
 3092 00f8 18       		.uleb128 0x18
 3093 00f9 00       		.byte	0
 3094 00fa 00       		.byte	0
 3095 00fb 00       		.byte	0
 3096              		.section	.debug_aranges,"",%progbits
 3097 0000 54010000 		.4byte	0x154
 3098 0004 0200     		.2byte	0x2
 3099 0006 00000000 		.4byte	.Ldebug_info0
 3100 000a 04       		.byte	0x4
 3101 000b 00       		.byte	0
 3102 000c 0000     		.2byte	0
 3103 000e 0000     		.2byte	0
 3104 0010 00000000 		.4byte	.LFB0
 3105 0014 38000000 		.4byte	.LFE0-.LFB0
 3106 0018 00000000 		.4byte	.LFB1
 3107 001c 34000000 		.4byte	.LFE1-.LFB1
 3108 0020 00000000 		.4byte	.LFB2
 3109 0024 24000000 		.4byte	.LFE2-.LFB2
 3110 0028 00000000 		.4byte	.LFB3
 3111 002c 34000000 		.4byte	.LFE3-.LFB3
 3112 0030 00000000 		.4byte	.LFB4
 3113 0034 48000000 		.4byte	.LFE4-.LFB4
 3114 0038 00000000 		.4byte	.LFB5
 3115 003c 48000000 		.4byte	.LFE5-.LFB5
 3116 0040 00000000 		.4byte	.LFB6
 3117 0044 48000000 		.4byte	.LFE6-.LFB6
 3118 0048 00000000 		.4byte	.LFB7
 3119 004c 50000000 		.4byte	.LFE7-.LFB7
 3120 0050 00000000 		.4byte	.LFB8
 3121 0054 20000000 		.4byte	.LFE8-.LFB8
 3122 0058 00000000 		.4byte	.LFB9
 3123 005c 4C000000 		.4byte	.LFE9-.LFB9
 3124 0060 00000000 		.4byte	.LFB10
 3125 0064 4C000000 		.4byte	.LFE10-.LFB10
 3126 0068 00000000 		.4byte	.LFB11
 3127 006c 50000000 		.4byte	.LFE11-.LFB11
 3128 0070 00000000 		.4byte	.LFB12
 3129 0074 48000000 		.4byte	.LFE12-.LFB12
 3130 0078 00000000 		.4byte	.LFB13
 3131 007c 20000000 		.4byte	.LFE13-.LFB13
 3132 0080 00000000 		.4byte	.LFB14
 3133 0084 18000000 		.4byte	.LFE14-.LFB14
 3134 0088 00000000 		.4byte	.LFB15
 3135 008c 48000000 		.4byte	.LFE15-.LFB15
 3136 0090 00000000 		.4byte	.LFB16
 3137 0094 20000000 		.4byte	.LFE16-.LFB16
 3138 0098 00000000 		.4byte	.LFB17
 3139 009c 18000000 		.4byte	.LFE17-.LFB17
 3140 00a0 00000000 		.4byte	.LFB18
 3141 00a4 48000000 		.4byte	.LFE18-.LFB18
 3142 00a8 00000000 		.4byte	.LFB19
 3143 00ac 20000000 		.4byte	.LFE19-.LFB19
 3144 00b0 00000000 		.4byte	.LFB20
 3145 00b4 18000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 81


 3146 00b8 00000000 		.4byte	.LFB21
 3147 00bc 4C000000 		.4byte	.LFE21-.LFB21
 3148 00c0 00000000 		.4byte	.LFB22
 3149 00c4 20000000 		.4byte	.LFE22-.LFB22
 3150 00c8 00000000 		.4byte	.LFB23
 3151 00cc 18000000 		.4byte	.LFE23-.LFB23
 3152 00d0 00000000 		.4byte	.LFB24
 3153 00d4 20000000 		.4byte	.LFE24-.LFB24
 3154 00d8 00000000 		.4byte	.LFB25
 3155 00dc 18000000 		.4byte	.LFE25-.LFB25
 3156 00e0 00000000 		.4byte	.LFB26
 3157 00e4 18000000 		.4byte	.LFE26-.LFB26
 3158 00e8 00000000 		.4byte	.LFB27
 3159 00ec 18000000 		.4byte	.LFE27-.LFB27
 3160 00f0 00000000 		.4byte	.LFB28
 3161 00f4 44000000 		.4byte	.LFE28-.LFB28
 3162 00f8 00000000 		.4byte	.LFB29
 3163 00fc 48000000 		.4byte	.LFE29-.LFB29
 3164 0100 00000000 		.4byte	.LFB30
 3165 0104 4C000000 		.4byte	.LFE30-.LFB30
 3166 0108 00000000 		.4byte	.LFB31
 3167 010c 48000000 		.4byte	.LFE31-.LFB31
 3168 0110 00000000 		.4byte	.LFB32
 3169 0114 48000000 		.4byte	.LFE32-.LFB32
 3170 0118 00000000 		.4byte	.LFB33
 3171 011c 3C000000 		.4byte	.LFE33-.LFB33
 3172 0120 00000000 		.4byte	.LFB34
 3173 0124 20000000 		.4byte	.LFE34-.LFB34
 3174 0128 00000000 		.4byte	.LFB35
 3175 012c 1C000000 		.4byte	.LFE35-.LFB35
 3176 0130 00000000 		.4byte	.LFB36
 3177 0134 14000000 		.4byte	.LFE36-.LFB36
 3178 0138 00000000 		.4byte	.LFB37
 3179 013c 14000000 		.4byte	.LFE37-.LFB37
 3180 0140 00000000 		.4byte	.LFB38
 3181 0144 1C000000 		.4byte	.LFE38-.LFB38
 3182 0148 00000000 		.4byte	.LFB39
 3183 014c 1C000000 		.4byte	.LFE39-.LFB39
 3184 0150 00000000 		.4byte	0
 3185 0154 00000000 		.4byte	0
 3186              		.section	.debug_ranges,"",%progbits
 3187              	.Ldebug_ranges0:
 3188 0000 00000000 		.4byte	.LFB0
 3189 0004 38000000 		.4byte	.LFE0
 3190 0008 00000000 		.4byte	.LFB1
 3191 000c 34000000 		.4byte	.LFE1
 3192 0010 00000000 		.4byte	.LFB2
 3193 0014 24000000 		.4byte	.LFE2
 3194 0018 00000000 		.4byte	.LFB3
 3195 001c 34000000 		.4byte	.LFE3
 3196 0020 00000000 		.4byte	.LFB4
 3197 0024 48000000 		.4byte	.LFE4
 3198 0028 00000000 		.4byte	.LFB5
 3199 002c 48000000 		.4byte	.LFE5
 3200 0030 00000000 		.4byte	.LFB6
 3201 0034 48000000 		.4byte	.LFE6
 3202 0038 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 82


 3203 003c 50000000 		.4byte	.LFE7
 3204 0040 00000000 		.4byte	.LFB8
 3205 0044 20000000 		.4byte	.LFE8
 3206 0048 00000000 		.4byte	.LFB9
 3207 004c 4C000000 		.4byte	.LFE9
 3208 0050 00000000 		.4byte	.LFB10
 3209 0054 4C000000 		.4byte	.LFE10
 3210 0058 00000000 		.4byte	.LFB11
 3211 005c 50000000 		.4byte	.LFE11
 3212 0060 00000000 		.4byte	.LFB12
 3213 0064 48000000 		.4byte	.LFE12
 3214 0068 00000000 		.4byte	.LFB13
 3215 006c 20000000 		.4byte	.LFE13
 3216 0070 00000000 		.4byte	.LFB14
 3217 0074 18000000 		.4byte	.LFE14
 3218 0078 00000000 		.4byte	.LFB15
 3219 007c 48000000 		.4byte	.LFE15
 3220 0080 00000000 		.4byte	.LFB16
 3221 0084 20000000 		.4byte	.LFE16
 3222 0088 00000000 		.4byte	.LFB17
 3223 008c 18000000 		.4byte	.LFE17
 3224 0090 00000000 		.4byte	.LFB18
 3225 0094 48000000 		.4byte	.LFE18
 3226 0098 00000000 		.4byte	.LFB19
 3227 009c 20000000 		.4byte	.LFE19
 3228 00a0 00000000 		.4byte	.LFB20
 3229 00a4 18000000 		.4byte	.LFE20
 3230 00a8 00000000 		.4byte	.LFB21
 3231 00ac 4C000000 		.4byte	.LFE21
 3232 00b0 00000000 		.4byte	.LFB22
 3233 00b4 20000000 		.4byte	.LFE22
 3234 00b8 00000000 		.4byte	.LFB23
 3235 00bc 18000000 		.4byte	.LFE23
 3236 00c0 00000000 		.4byte	.LFB24
 3237 00c4 20000000 		.4byte	.LFE24
 3238 00c8 00000000 		.4byte	.LFB25
 3239 00cc 18000000 		.4byte	.LFE25
 3240 00d0 00000000 		.4byte	.LFB26
 3241 00d4 18000000 		.4byte	.LFE26
 3242 00d8 00000000 		.4byte	.LFB27
 3243 00dc 18000000 		.4byte	.LFE27
 3244 00e0 00000000 		.4byte	.LFB28
 3245 00e4 44000000 		.4byte	.LFE28
 3246 00e8 00000000 		.4byte	.LFB29
 3247 00ec 48000000 		.4byte	.LFE29
 3248 00f0 00000000 		.4byte	.LFB30
 3249 00f4 4C000000 		.4byte	.LFE30
 3250 00f8 00000000 		.4byte	.LFB31
 3251 00fc 48000000 		.4byte	.LFE31
 3252 0100 00000000 		.4byte	.LFB32
 3253 0104 48000000 		.4byte	.LFE32
 3254 0108 00000000 		.4byte	.LFB33
 3255 010c 3C000000 		.4byte	.LFE33
 3256 0110 00000000 		.4byte	.LFB34
 3257 0114 20000000 		.4byte	.LFE34
 3258 0118 00000000 		.4byte	.LFB35
 3259 011c 1C000000 		.4byte	.LFE35
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 83


 3260 0120 00000000 		.4byte	.LFB36
 3261 0124 14000000 		.4byte	.LFE36
 3262 0128 00000000 		.4byte	.LFB37
 3263 012c 14000000 		.4byte	.LFE37
 3264 0130 00000000 		.4byte	.LFB38
 3265 0134 1C000000 		.4byte	.LFE38
 3266 0138 00000000 		.4byte	.LFB39
 3267 013c 1C000000 		.4byte	.LFE39
 3268 0140 00000000 		.4byte	0
 3269 0144 00000000 		.4byte	0
 3270              		.section	.debug_line,"",%progbits
 3271              	.Ldebug_line0:
 3272 0000 67030000 		.section	.debug_str,"MS",%progbits,1
 3272      02004200 
 3272      00000201 
 3272      FB0E0D00 
 3272      01010101 
 3273              	.LASF34:
 3274 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 3274      725F5365 
 3274      7450574D 
 3274      53746F70 
 3274      4F6E4B69 
 3275              	.LASF41:
 3276 0017 636F756E 		.ascii	"count\000"
 3276      7400
 3277              	.LASF74:
 3278 001d 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 3278      725F4765 
 3278      74496E74 
 3278      65727275 
 3278      7074536F 
 3279              	.LASF44:
 3280 0036 54696D65 		.ascii	"Timer_WritePeriod\000"
 3280      725F5772 
 3280      69746550 
 3280      6572696F 
 3280      6400
 3281              	.LASF76:
 3282 0048 54696D65 		.ascii	"Timer_SetInterrupt\000"
 3282      725F5365 
 3282      74496E74 
 3282      65727275 
 3282      707400
 3283              	.LASF45:
 3284 005b 70657269 		.ascii	"period\000"
 3284      6F6400
 3285              	.LASF22:
 3286 0062 54696D65 		.ascii	"Timer_SetMode\000"
 3286      725F5365 
 3286      744D6F64 
 3286      6500
 3287              	.LASF80:
 3288 0070 54696D65 		.ascii	"Timer_initVar\000"
 3288      725F696E 
 3288      69745661 
 3288      7200
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 84


 3289              	.LASF7:
 3290 007e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3290      206C6F6E 
 3290      6720756E 
 3290      7369676E 
 3290      65642069 
 3291              	.LASF36:
 3292 0095 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 3292      725F5365 
 3292      7450574D 
 3292      44656164 
 3292      54696D65 
 3293              	.LASF32:
 3294 00aa 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 3294      725F5365 
 3294      7450574D 
 3294      53796E63 
 3294      4B696C6C 
 3295              	.LASF25:
 3296 00bf 71644D6F 		.ascii	"qdMode\000"
 3296      646500
 3297              	.LASF6:
 3298 00c6 6C6F6E67 		.ascii	"long long int\000"
 3298      206C6F6E 
 3298      6720696E 
 3298      7400
 3299              	.LASF0:
 3300 00d4 7369676E 		.ascii	"signed char\000"
 3300      65642063 
 3300      68617200 
 3301              	.LASF23:
 3302 00e0 54696D65 		.ascii	"Timer_SetQDMode\000"
 3302      725F5365 
 3302      7451444D 
 3302      6F646500 
 3303              	.LASF67:
 3304 00f0 54696D65 		.ascii	"Timer_SetCountMode\000"
 3304      725F5365 
 3304      74436F75 
 3304      6E744D6F 
 3304      646500
 3305              	.LASF55:
 3306 0103 636F6D70 		.ascii	"compare\000"
 3306      61726500 
 3307              	.LASF4:
 3308 010b 6C6F6E67 		.ascii	"long int\000"
 3308      20696E74 
 3308      00
 3309              	.LASF60:
 3310 0114 54696D65 		.ascii	"Timer_ReadCapture\000"
 3310      725F5265 
 3310      61644361 
 3310      70747572 
 3310      6500
 3311              	.LASF68:
 3312 0126 54696D65 		.ascii	"Timer_TriggerCommand\000"
 3312      725F5472 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 85


 3312      69676765 
 3312      72436F6D 
 3312      6D616E64 
 3313              	.LASF9:
 3314 013b 75696E74 		.ascii	"uint8\000"
 3314      3800
 3315              	.LASF12:
 3316 0141 646F7562 		.ascii	"double\000"
 3316      6C6500
 3317              	.LASF71:
 3318 0148 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 3318      725F5365 
 3318      74496E74 
 3318      65727275 
 3318      70744D6F 
 3319              	.LASF10:
 3320 015f 75696E74 		.ascii	"uint32\000"
 3320      333200
 3321              	.LASF54:
 3322 0166 54696D65 		.ascii	"Timer_WriteCompare\000"
 3322      725F5772 
 3322      69746543 
 3322      6F6D7061 
 3322      726500
 3323              	.LASF63:
 3324 0179 74726967 		.ascii	"triggerMode\000"
 3324      6765724D 
 3324      6F646500 
 3325              	.LASF39:
 3326 0185 6D61736B 		.ascii	"mask\000"
 3326      00
 3327              	.LASF56:
 3328 018a 54696D65 		.ascii	"Timer_ReadCompare\000"
 3328      725F5265 
 3328      6164436F 
 3328      6D706172 
 3328      6500
 3329              	.LASF37:
 3330 019c 64656164 		.ascii	"deadTime\000"
 3330      54696D65 
 3330      00
 3331              	.LASF57:
 3332 01a5 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 3332      725F5772 
 3332      69746543 
 3332      6F6D7061 
 3332      72654275 
 3333              	.LASF8:
 3334 01bb 756E7369 		.ascii	"unsigned int\000"
 3334      676E6564 
 3334      20696E74 
 3334      00
 3335              	.LASF18:
 3336 01c8 54696D65 		.ascii	"Timer_Start\000"
 3336      725F5374 
 3336      61727400 
 3337              	.LASF69:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 86


 3338 01d4 636F6D6D 		.ascii	"command\000"
 3338      616E6400 
 3339              	.LASF5:
 3340 01dc 6C6F6E67 		.ascii	"long unsigned int\000"
 3340      20756E73 
 3340      69676E65 
 3340      6420696E 
 3340      7400
 3341              	.LASF31:
 3342 01ee 6D6F6465 		.ascii	"modeMask\000"
 3342      4D61736B 
 3342      00
 3343              	.LASF19:
 3344 01f7 54696D65 		.ascii	"Timer_Enable\000"
 3344      725F456E 
 3344      61626C65 
 3344      00
 3345              	.LASF3:
 3346 0204 73686F72 		.ascii	"short unsigned int\000"
 3346      7420756E 
 3346      7369676E 
 3346      65642069 
 3346      6E7400
 3347              	.LASF40:
 3348 0217 54696D65 		.ascii	"Timer_WriteCounter\000"
 3348      725F5772 
 3348      69746543 
 3348      6F756E74 
 3348      657200
 3349              	.LASF46:
 3350 022a 54696D65 		.ascii	"Timer_ReadCounter\000"
 3350      725F5265 
 3350      6164436F 
 3350      756E7465 
 3350      7200
 3351              	.LASF20:
 3352 023c 54696D65 		.ascii	"Timer_Stop\000"
 3352      725F5374 
 3352      6F7000
 3353              	.LASF29:
 3354 0247 6F6E6553 		.ascii	"oneShotEnable\000"
 3354      686F7445 
 3354      6E61626C 
 3354      6500
 3355              	.LASF73:
 3356 0255 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 3356      725F4765 
 3356      74496E74 
 3356      65727275 
 3356      7074536F 
 3357              	.LASF77:
 3358 0274 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3358      43313120 
 3358      352E342E 
 3358      31203230 
 3358      31363036 
 3359 02a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 87


 3359      20726576 
 3359      6973696F 
 3359      6E203233 
 3359      37373135 
 3360 02da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3360      66756E63 
 3360      74696F6E 
 3360      2D736563 
 3360      74696F6E 
 3361              	.LASF14:
 3362 0302 72656733 		.ascii	"reg32\000"
 3362      3200
 3363              	.LASF48:
 3364 0308 54696D65 		.ascii	"Timer_SetCompareSwap\000"
 3364      725F5365 
 3364      74436F6D 
 3364      70617265 
 3364      53776170 
 3365              	.LASF16:
 3366 031d 73697A65 		.ascii	"sizetype\000"
 3366      74797065 
 3366      00
 3367              	.LASF50:
 3368 0326 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 3368      725F5772 
 3368      69746550 
 3368      6572696F 
 3368      64427566 
 3369              	.LASF15:
 3370 033b 6C6F6E67 		.ascii	"long double\000"
 3370      20646F75 
 3370      626C6500 
 3371              	.LASF38:
 3372 0347 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 3372      725F5365 
 3372      7450574D 
 3372      496E7665 
 3372      727400
 3373              	.LASF52:
 3374 035a 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 3374      725F5265 
 3374      61645065 
 3374      72696F64 
 3374      42756600 
 3375              	.LASF65:
 3376 036e 54696D65 		.ascii	"Timer_SetStartMode\000"
 3376      725F5365 
 3376      74537461 
 3376      72744D6F 
 3376      646500
 3377              	.LASF11:
 3378 0381 666C6F61 		.ascii	"float\000"
 3378      7400
 3379              	.LASF27:
 3380 0387 70726573 		.ascii	"prescaler\000"
 3380      63616C65 
 3380      7200
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 88


 3381              	.LASF66:
 3382 0391 54696D65 		.ascii	"Timer_SetStopMode\000"
 3382      725F5365 
 3382      7453746F 
 3382      704D6F64 
 3382      6500
 3383              	.LASF53:
 3384 03a3 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 3384      725F5365 
 3384      74506572 
 3384      696F6453 
 3384      77617000 
 3385              	.LASF61:
 3386 03b7 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 3386      725F5265 
 3386      61644361 
 3386      70747572 
 3386      65427566 
 3387              	.LASF70:
 3388 03cc 54696D65 		.ascii	"Timer_ReadStatus\000"
 3388      725F5265 
 3388      61645374 
 3388      61747573 
 3388      00
 3389              	.LASF1:
 3390 03dd 756E7369 		.ascii	"unsigned char\000"
 3390      676E6564 
 3390      20636861 
 3390      7200
 3391              	.LASF35:
 3392 03eb 73746F70 		.ascii	"stopOnKillEnable\000"
 3392      4F6E4B69 
 3392      6C6C456E 
 3392      61626C65 
 3392      00
 3393              	.LASF2:
 3394 03fc 73686F72 		.ascii	"short int\000"
 3394      7420696E 
 3394      7400
 3395              	.LASF72:
 3396 0406 696E7465 		.ascii	"interruptMask\000"
 3396      72727570 
 3396      744D6173 
 3396      6B00
 3397              	.LASF26:
 3398 0414 54696D65 		.ascii	"Timer_SetPrescaler\000"
 3398      725F5365 
 3398      74507265 
 3398      7363616C 
 3398      657200
 3399              	.LASF17:
 3400 0427 54696D65 		.ascii	"Timer_Init\000"
 3400      725F496E 
 3400      697400
 3401              	.LASF42:
 3402 0432 54696D65 		.ascii	"Timer_SetCounterMode\000"
 3402      725F5365 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 89


 3402      74436F75 
 3402      6E746572 
 3402      4D6F6465 
 3403              	.LASF13:
 3404 0447 63686172 		.ascii	"char\000"
 3404      00
 3405              	.LASF24:
 3406 044c 6D6F6465 		.ascii	"mode\000"
 3406      00
 3407              	.LASF64:
 3408 0451 54696D65 		.ascii	"Timer_SetReloadMode\000"
 3408      725F5365 
 3408      7452656C 
 3408      6F61644D 
 3408      6F646500 
 3409              	.LASF43:
 3410 0465 636F756E 		.ascii	"counterMode\000"
 3410      7465724D 
 3410      6F646500 
 3411              	.LASF47:
 3412 0471 54696D65 		.ascii	"Timer_ReadPeriod\000"
 3412      725F5265 
 3412      61645065 
 3412      72696F64 
 3412      00
 3413              	.LASF58:
 3414 0482 636F6D70 		.ascii	"compareBuf\000"
 3414      61726542 
 3414      756600
 3415              	.LASF79:
 3416 048d 433A5C55 		.ascii	"C:\\Users\\quint\\Downloads\\Ultrasonic Ranger.cyds"
 3416      73657273 
 3416      5C717569 
 3416      6E745C44 
 3416      6F776E6C 
 3417 04bc 6E5C556C 		.ascii	"n\\Ultrasonic Ranger.cydsn\000"
 3417      74726173 
 3417      6F6E6963 
 3417      2052616E 
 3417      6765722E 
 3418              	.LASF78:
 3419 04d6 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer.c\000"
 3419      72617465 
 3419      645F536F 
 3419      75726365 
 3419      5C50536F 
 3420              	.LASF21:
 3421 04f5 656E6162 		.ascii	"enableInterrupts\000"
 3421      6C65496E 
 3421      74657272 
 3421      75707473 
 3421      00
 3422              	.LASF62:
 3423 0506 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 3423      725F5365 
 3423      74436170 
 3423      74757265 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccpuLqNy.s 			page 90


 3423      4D6F6465 
 3424              	.LASF28:
 3425 051b 54696D65 		.ascii	"Timer_SetOneShot\000"
 3425      725F5365 
 3425      744F6E65 
 3425      53686F74 
 3425      00
 3426              	.LASF33:
 3427 052c 73796E63 		.ascii	"syncKillEnable\000"
 3427      4B696C6C 
 3427      456E6162 
 3427      6C6500
 3428              	.LASF75:
 3429 053b 54696D65 		.ascii	"Timer_ClearInterrupt\000"
 3429      725F436C 
 3429      65617249 
 3429      6E746572 
 3429      72757074 
 3430              	.LASF49:
 3431 0550 73776170 		.ascii	"swapEnable\000"
 3431      456E6162 
 3431      6C6500
 3432              	.LASF51:
 3433 055b 70657269 		.ascii	"periodBuf\000"
 3433      6F644275 
 3433      6600
 3434              	.LASF30:
 3435 0565 54696D65 		.ascii	"Timer_SetPWMMode\000"
 3435      725F5365 
 3435      7450574D 
 3435      4D6F6465 
 3435      00
 3436              	.LASF59:
 3437 0576 54696D65 		.ascii	"Timer_ReadCompareBuf\000"
 3437      725F5265 
 3437      6164436F 
 3437      6D706172 
 3437      65427566 
 3438              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
