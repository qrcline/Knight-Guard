ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** 
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 6


 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  38              		.loc 1 250 0
  39 0004 1A4B     		ldr	r3, .L2
  40 0006 1B4A     		ldr	r2, .L2+4
  41 0008 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  42              		.loc 1 253 0
  43 000a 1B4B     		ldr	r3, .L2+8
  44 000c 0022     		movs	r2, #0
  45 000e 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  46              		.loc 1 256 0
  47 0010 1A4B     		ldr	r3, .L2+12
  48 0012 1B4A     		ldr	r2, .L2+16
  49 0014 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  50              		.loc 1 257 0
  51 0016 1B4B     		ldr	r3, .L2+20
  52 0018 1B4A     		ldr	r2, .L2+24
  53 001a 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  54              		.loc 1 258 0
  55 001c 1B4B     		ldr	r3, .L2+28
  56 001e 0722     		movs	r2, #7
  57 0020 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  58              		.loc 1 259 0
  59 0022 1B4B     		ldr	r3, .L2+32
  60 0024 0022     		movs	r2, #0
  61 0026 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  62              		.loc 1 262 0
  63 0028 1A4B     		ldr	r3, .L2+36
  64 002a 0122     		movs	r2, #1
  65 002c 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  66              		.loc 1 263 0
  67 002e 1A4B     		ldr	r3, .L2+40
  68 0030 154A     		ldr	r2, .L2+24
  69 0032 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  70              		.loc 1 264 0
  71 0034 194B     		ldr	r3, .L2+44
  72 0036 0022     		movs	r2, #0
  73 0038 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 7


 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  74              		.loc 1 285 0
  75 003a 194B     		ldr	r3, .L2+48
  76 003c 0022     		movs	r2, #0
  77 003e 1A60     		str	r2, [r3]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  78              		.loc 1 286 0
  79 0040 184B     		ldr	r3, .L2+52
  80 0042 0022     		movs	r2, #0
  81 0044 1A60     		str	r2, [r3]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  82              		.loc 1 287 0
  83 0046 184B     		ldr	r3, .L2+56
  84 0048 0022     		movs	r2, #0
  85 004a 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  86              		.loc 1 288 0
  87 004c 174B     		ldr	r3, .L2+60
  88 004e 0022     		movs	r2, #0
  89 0050 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 289 0
  91 0052 174B     		ldr	r3, .L2+64
  92 0054 0022     		movs	r2, #0
  93 0056 1A60     		str	r2, [r3]
 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  94              		.loc 1 290 0
  95 0058 164B     		ldr	r3, .L2+68
  96 005a 0022     		movs	r2, #0
  97 005c 1A60     		str	r2, [r3]
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  98              		.loc 1 293 0
  99 005e 154B     		ldr	r3, .L2+68
 100 0060 1B68     		ldr	r3, [r3]
 101 0062 9AB2     		uxth	r2, r3
 102 0064 144B     		ldr	r3, .L2+72
 103 0066 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_UART.c **** 
 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 8


 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
 104              		.loc 1 305 0
 105 0068 C046     		nop
 106 006a BD46     		mov	sp, r7
 107              		@ sp needed
 108 006c 80BD     		pop	{r7, pc}
 109              	.L3:
 110 006e C046     		.align	2
 111              	.L2:
 112 0070 00000640 		.word	1074135040
 113 0074 0B000002 		.word	33554443
 114 0078 40000640 		.word	1074135104
 115 007c 48000640 		.word	1074135112
 116 0080 01000A00 		.word	655361
 117 0084 00030640 		.word	1074135808
 118 0088 07000080 		.word	-2147483641
 119 008c 04030640 		.word	1074135812
 120 0090 10030640 		.word	1074135824
 121 0094 44000640 		.word	1074135108
 122 0098 00020640 		.word	1074135552
 123 009c 04020640 		.word	1074135556
 124 00a0 880E0640 		.word	1074138760
 125 00a4 C80E0640 		.word	1074138824
 126 00a8 480F0640 		.word	1074138952
 127 00ac 080F0640 		.word	1074138888
 128 00b0 C80F0640 		.word	1074139080
 129 00b4 880F0640 		.word	1074139016
 130 00b8 00000000 		.word	UART_IntrTxMask
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	UART_UartInit, .-UART_UartInit
 134              		.section	.text.UART_UartPostEnable,"ax",%progbits
 135              		.align	2
 136              		.global	UART_UartPostEnable
 137              		.code	16
 138              		.thumb_func
 139              		.type	UART_UartPostEnable, %function
 140              	UART_UartPostEnable:
 141              	.LFB1:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 9


 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 142              		.loc 1 318 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_UART);
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 152              		.loc 1 343 0
 153 0004 074B     		ldr	r3, .L5
 154 0006 074A     		ldr	r2, .L5
 155 0008 1268     		ldr	r2, [r2]
 156 000a F021     		movs	r1, #240
 157 000c 8A43     		bics	r2, r1
 158 000e 9021     		movs	r1, #144
 159 0010 0A43     		orrs	r2, r1
 160 0012 1A60     		str	r2, [r3]
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 10


 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 161              		.loc 1 355 0
 162 0014 044B     		ldr	r3, .L5+4
 163 0016 054A     		ldr	r2, .L5+8
 164 0018 1288     		ldrh	r2, [r2]
 165 001a 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_UART.c **** }
 166              		.loc 1 356 0
 167 001c C046     		nop
 168 001e BD46     		mov	sp, r7
 169              		@ sp needed
 170 0020 80BD     		pop	{r7, pc}
 171              	.L6:
 172 0022 C046     		.align	2
 173              	.L5:
 174 0024 10000140 		.word	1073807376
 175 0028 880F0640 		.word	1074139016
 176 002c 00000000 		.word	UART_IntrTxMask
 177              		.cfi_endproc
 178              	.LFE1:
 179              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 180              		.section	.text.UART_UartStop,"ax",%progbits
 181              		.align	2
 182              		.global	UART_UartStop
 183              		.code	16
 184              		.thumb_func
 185              		.type	UART_UartStop, %function
 186              	UART_UartStop:
 187              	.LFB2:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 188              		.loc 1 370 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 11


 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_GPIO);
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 198              		.loc 1 398 0
 199 0004 084B     		ldr	r3, .L8
 200 0006 084A     		ldr	r2, .L8
 201 0008 1268     		ldr	r2, [r2]
 202 000a F021     		movs	r1, #240
 203 000c 8A43     		bics	r2, r1
 204 000e 1A60     		str	r2, [r3]
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 205              		.loc 1 419 0
 206 0010 064B     		ldr	r3, .L8+4
 207 0012 1B68     		ldr	r3, [r3]
 208 0014 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 12


 209 0016 E423     		movs	r3, #228
 210 0018 DB00     		lsls	r3, r3, #3
 211 001a 1340     		ands	r3, r2
 212 001c 9AB2     		uxth	r2, r3
 213 001e 044B     		ldr	r3, .L8+8
 214 0020 1A80     		strh	r2, [r3]
 420:Generated_Source\PSoC4/UART_UART.c **** }
 215              		.loc 1 420 0
 216 0022 C046     		nop
 217 0024 BD46     		mov	sp, r7
 218              		@ sp needed
 219 0026 80BD     		pop	{r7, pc}
 220              	.L9:
 221              		.align	2
 222              	.L8:
 223 0028 10000140 		.word	1073807376
 224 002c 880F0640 		.word	1074139016
 225 0030 00000000 		.word	UART_IntrTxMask
 226              		.cfi_endproc
 227              	.LFE2:
 228              		.size	UART_UartStop, .-UART_UartStop
 229              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 230              		.align	2
 231              		.global	UART_UartSetRxAddress
 232              		.code	16
 233              		.thumb_func
 234              		.type	UART_UartSetRxAddress, %function
 235              	UART_UartSetRxAddress:
 236              	.LFB3:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 237              		.loc 1 434 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 16
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 84B0     		sub	sp, sp, #16
 246              		.cfi_def_cfa_offset 24
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 13


 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 250              		.loc 1 437 0
 251 0008 094B     		ldr	r3, .L11
 252 000a 1B68     		ldr	r3, [r3]
 253 000c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/UART_UART.c **** 
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 254              		.loc 1 439 0
 255 000e FB68     		ldr	r3, [r7, #12]
 256 0010 FF22     		movs	r2, #255
 257 0012 9343     		bics	r3, r2
 258 0014 FB60     		str	r3, [r7, #12]
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 259              		.loc 1 440 0
 260 0016 7B68     		ldr	r3, [r7, #4]
 261 0018 FF22     		movs	r2, #255
 262 001a 1340     		ands	r3, r2
 263 001c FA68     		ldr	r2, [r7, #12]
 264 001e 1343     		orrs	r3, r2
 265 0020 FB60     		str	r3, [r7, #12]
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 266              		.loc 1 442 0
 267 0022 034B     		ldr	r3, .L11
 268 0024 FA68     		ldr	r2, [r7, #12]
 269 0026 1A60     		str	r2, [r3]
 443:Generated_Source\PSoC4/UART_UART.c **** }
 270              		.loc 1 443 0
 271 0028 C046     		nop
 272 002a BD46     		mov	sp, r7
 273 002c 04B0     		add	sp, sp, #16
 274              		@ sp needed
 275 002e 80BD     		pop	{r7, pc}
 276              	.L12:
 277              		.align	2
 278              	.L11:
 279 0030 10030640 		.word	1074135824
 280              		.cfi_endproc
 281              	.LFE3:
 282              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 283              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 284              		.align	2
 285              		.global	UART_UartSetRxAddressMask
 286              		.code	16
 287              		.thumb_func
 288              		.type	UART_UartSetRxAddressMask, %function
 289              	UART_UartSetRxAddressMask:
 290              	.LFB4:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 14


 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 291              		.loc 1 459 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 16
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              		.cfi_def_cfa_offset 24
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 304              		.loc 1 462 0
 305 0008 094B     		ldr	r3, .L14
 306 000a 1B68     		ldr	r3, [r3]
 307 000c FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 308              		.loc 1 464 0
 309 000e FB68     		ldr	r3, [r7, #12]
 310 0010 084A     		ldr	r2, .L14+4
 311 0012 1340     		ands	r3, r2
 312 0014 FB60     		str	r3, [r7, #12]
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 313              		.loc 1 465 0
 314 0016 7B68     		ldr	r3, [r7, #4]
 315 0018 1B04     		lsls	r3, r3, #16
 316 001a FA68     		ldr	r2, [r7, #12]
 317 001c 1343     		orrs	r3, r2
 318 001e FB60     		str	r3, [r7, #12]
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 319              		.loc 1 467 0
 320 0020 034B     		ldr	r3, .L14
 321 0022 FA68     		ldr	r2, [r7, #12]
 322 0024 1A60     		str	r2, [r3]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 323              		.loc 1 468 0
 324 0026 C046     		nop
 325 0028 BD46     		mov	sp, r7
 326 002a 04B0     		add	sp, sp, #16
 327              		@ sp needed
 328 002c 80BD     		pop	{r7, pc}
 329              	.L15:
 330 002e C046     		.align	2
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 15


 331              	.L14:
 332 0030 10030640 		.word	1074135824
 333 0034 FFFF00FF 		.word	-16711681
 334              		.cfi_endproc
 335              	.LFE4:
 336              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 337              		.section	.text.UART_UartGetChar,"ax",%progbits
 338              		.align	2
 339              		.global	UART_UartGetChar
 340              		.code	16
 341              		.thumb_func
 342              		.type	UART_UartGetChar, %function
 343              	UART_UartGetChar:
 344              	.LFB5:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
 345              		.loc 1 499 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 16


 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 357              		.loc 1 500 0
 358 0006 0023     		movs	r3, #0
 359 0008 7B60     		str	r3, [r7, #4]
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 360              		.loc 1 503 0
 361 000a FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 362 000e 031E     		subs	r3, r0, #0
 363 0010 03D0     		beq	.L17
 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 364              		.loc 1 505 0
 365 0012 FFF7FEFF 		bl	UART_SpiUartReadRxData
 366 0016 0300     		movs	r3, r0
 367 0018 7B60     		str	r3, [r7, #4]
 368              	.L17:
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 369              		.loc 1 508 0
 370 001a 084B     		ldr	r3, .L20
 371 001c 1A68     		ldr	r2, [r3]
 372 001e D823     		movs	r3, #216
 373 0020 9B00     		lsls	r3, r3, #2
 374 0022 1340     		ands	r3, r2
 375 0024 05D0     		beq	.L18
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 376              		.loc 1 510 0
 377 0026 0023     		movs	r3, #0
 378 0028 7B60     		str	r3, [r7, #4]
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 379              		.loc 1 511 0
 380 002a 044B     		ldr	r3, .L20
 381 002c D822     		movs	r2, #216
 382 002e 9200     		lsls	r2, r2, #2
 383 0030 1A60     		str	r2, [r3]
 384              	.L18:
 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 385              		.loc 1 514 0
 386 0032 7B68     		ldr	r3, [r7, #4]
 515:Generated_Source\PSoC4/UART_UART.c ****     }
 387              		.loc 1 515 0
 388 0034 1800     		movs	r0, r3
 389 0036 BD46     		mov	sp, r7
 390 0038 02B0     		add	sp, sp, #8
 391              		@ sp needed
 392 003a 80BD     		pop	{r7, pc}
 393              	.L21:
 394              		.align	2
 395              	.L20:
 396 003c C00F0640 		.word	1074139072
 397              		.cfi_endproc
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 17


 398              	.LFE5:
 399              		.size	UART_UartGetChar, .-UART_UartGetChar
 400              		.section	.text.UART_UartGetByte,"ax",%progbits
 401              		.align	2
 402              		.global	UART_UartGetByte
 403              		.code	16
 404              		.thumb_func
 405              		.type	UART_UartGetByte, %function
 406              	UART_UartGetByte:
 407              	.LFB6:
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 408              		.loc 1 549 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 80B5     		push	{r7, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 82B0     		sub	sp, sp, #8
 417              		.cfi_def_cfa_offset 16
 418 0004 00AF     		add	r7, sp, #0
 419              		.cfi_def_cfa_register 7
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 18


 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 420              		.loc 1 559 0
 421 0006 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 422 000a 031E     		subs	r3, r0, #0
 423 000c 04D0     		beq	.L23
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 424              		.loc 1 571 0
 425 000e FFF7FEFF 		bl	UART_SpiUartReadRxData
 426 0012 0300     		movs	r3, r0
 427 0014 7B60     		str	r3, [r7, #4]
 428 0016 02E0     		b	.L24
 429              	.L23:
 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 430              		.loc 1 578 0
 431 0018 0B4B     		ldr	r3, .L26
 432 001a 1B68     		ldr	r3, [r3]
 433 001c 7B60     		str	r3, [r7, #4]
 434              	.L24:
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 19


 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 435              		.loc 1 596 0
 436 001e 0B4B     		ldr	r3, .L26+4
 437 0020 1A68     		ldr	r2, [r3]
 438 0022 D823     		movs	r3, #216
 439 0024 9B00     		lsls	r3, r3, #2
 440 0026 1340     		ands	r3, r2
 441 0028 3B60     		str	r3, [r7]
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 442              		.loc 1 597 0
 443 002a 084B     		ldr	r3, .L26+4
 444 002c D822     		movs	r2, #216
 445 002e 9200     		lsls	r2, r2, #2
 446 0030 1A60     		str	r2, [r3]
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 447              		.loc 1 602 0
 448 0032 3B68     		ldr	r3, [r7]
 449 0034 1B02     		lsls	r3, r3, #8
 450 0036 7A68     		ldr	r2, [r7, #4]
 451 0038 1343     		orrs	r3, r2
 452 003a 7B60     		str	r3, [r7, #4]
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 453              		.loc 1 604 0
 454 003c 7B68     		ldr	r3, [r7, #4]
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 455              		.loc 1 605 0
 456 003e 1800     		movs	r0, r3
 457 0040 BD46     		mov	sp, r7
 458 0042 02B0     		add	sp, sp, #8
 459              		@ sp needed
 460 0044 80BD     		pop	{r7, pc}
 461              	.L27:
 462 0046 C046     		.align	2
 463              	.L26:
 464 0048 40030640 		.word	1074135872
 465 004c C00F0640 		.word	1074139072
 466              		.cfi_endproc
 467              	.LFE6:
 468              		.size	UART_UartGetByte, .-UART_UartGetByte
 469              		.section	.text.UART_UartPutString,"ax",%progbits
 470              		.align	2
 471              		.global	UART_UartPutString
 472              		.code	16
 473              		.thumb_func
 474              		.type	UART_UartPutString, %function
 475              	UART_UartPutString:
 476              	.LFB7:
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 20


 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_UART.c ****             {
 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
 632:Generated_Source\PSoC4/UART_UART.c ****         }
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 21


 665:Generated_Source\PSoC4/UART_UART.c **** 
 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 477              		.loc 1 681 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 16
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 84B0     		sub	sp, sp, #16
 486              		.cfi_def_cfa_offset 24
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 489 0006 7860     		str	r0, [r7, #4]
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 490              		.loc 1 684 0
 491 0008 0023     		movs	r3, #0
 492 000a FB60     		str	r3, [r7, #12]
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 493              		.loc 1 687 0
 494 000c 09E0     		b	.L29
 495              	.L30:
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 496              		.loc 1 689 0
 497 000e 7A68     		ldr	r2, [r7, #4]
 498 0010 FB68     		ldr	r3, [r7, #12]
 499 0012 D318     		adds	r3, r2, r3
 500 0014 1B78     		ldrb	r3, [r3]
 501 0016 1800     		movs	r0, r3
 502 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 503              		.loc 1 690 0
 504 001c FB68     		ldr	r3, [r7, #12]
 505 001e 0133     		adds	r3, r3, #1
 506 0020 FB60     		str	r3, [r7, #12]
 507              	.L29:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 22


 687:Generated_Source\PSoC4/UART_UART.c ****         {
 508              		.loc 1 687 0
 509 0022 7A68     		ldr	r2, [r7, #4]
 510 0024 FB68     		ldr	r3, [r7, #12]
 511 0026 D318     		adds	r3, r2, r3
 512 0028 1B78     		ldrb	r3, [r3]
 513 002a 002B     		cmp	r3, #0
 514 002c EFD1     		bne	.L30
 691:Generated_Source\PSoC4/UART_UART.c ****         }
 692:Generated_Source\PSoC4/UART_UART.c ****     }
 515              		.loc 1 692 0
 516 002e C046     		nop
 517 0030 BD46     		mov	sp, r7
 518 0032 04B0     		add	sp, sp, #16
 519              		@ sp needed
 520 0034 80BD     		pop	{r7, pc}
 521              		.cfi_endproc
 522              	.LFE7:
 523              		.size	UART_UartPutString, .-UART_UartPutString
 524 0036 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 525              		.align	2
 526              		.global	UART_UartPutCRLF
 527              		.code	16
 528              		.thumb_func
 529              		.type	UART_UartPutCRLF, %function
 530              	UART_UartPutCRLF:
 531              	.LFB8:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 532              		.loc 1 708 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 82B0     		sub	sp, sp, #8
 541              		.cfi_def_cfa_offset 16
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 23


 545              		.loc 1 709 0
 546 0008 7B68     		ldr	r3, [r7, #4]
 547 000a 1800     		movs	r0, r3
 548 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 549              		.loc 1 710 0
 550 0010 0D20     		movs	r0, #13
 551 0012 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 552              		.loc 1 711 0
 553 0016 0A20     		movs	r0, #10
 554 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 712:Generated_Source\PSoC4/UART_UART.c ****     }
 555              		.loc 1 712 0
 556 001c C046     		nop
 557 001e BD46     		mov	sp, r7
 558 0020 02B0     		add	sp, sp, #8
 559              		@ sp needed
 560 0022 80BD     		pop	{r7, pc}
 561              		.cfi_endproc
 562              	.LFE8:
 563              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 564              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 565              		.align	2
 566              		.global	UART_UartSendBreakBlocking
 567              		.code	16
 568              		.thumb_func
 569              		.type	UART_UartSendBreakBlocking, %function
 570              	UART_UartSendBreakBlocking:
 571              	.LFB9:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 728:Generated_Source\PSoC4/UART_UART.c ****         }
 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 24


 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 763:Generated_Source\PSoC4/UART_UART.c ****             {
 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 572              		.loc 1 795 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 25


 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 16
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576 0000 80B5     		push	{r7, lr}
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 84B0     		sub	sp, sp, #16
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 584 0006 7860     		str	r0, [r7, #4]
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
 585              		.loc 1 800 0
 586 0008 174B     		ldr	r3, .L34
 587 000a 1B68     		ldr	r3, [r3]
 588 000c FB60     		str	r3, [r7, #12]
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 589              		.loc 1 801 0
 590 000e 164B     		ldr	r3, .L34
 591 0010 0022     		movs	r2, #0
 592 0012 1A60     		str	r2, [r3]
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 593              		.loc 1 802 0
 594 0014 154B     		ldr	r3, .L34+4
 595 0016 8022     		movs	r2, #128
 596 0018 9200     		lsls	r2, r2, #2
 597 001a 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 598              		.loc 1 805 0
 599 001c 144B     		ldr	r3, .L34+8
 600 001e 1B68     		ldr	r3, [r3]
 601 0020 BB60     		str	r3, [r7, #8]
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 602              		.loc 1 808 0
 603 0022 134B     		ldr	r3, .L34+8
 604 0024 124A     		ldr	r2, .L34+8
 605 0026 1268     		ldr	r2, [r2]
 606 0028 0F21     		movs	r1, #15
 607 002a 8A43     		bics	r2, r1
 608 002c 1100     		movs	r1, r2
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 609              		.loc 1 809 0
 610 002e 7A68     		ldr	r2, [r7, #4]
 611 0030 013A     		subs	r2, r2, #1
 612 0032 0F20     		movs	r0, #15
 613 0034 0240     		ands	r2, r0
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 614              		.loc 1 808 0
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 26


 615 0036 0A43     		orrs	r2, r1
 616 0038 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 617              		.loc 1 812 0
 618 003a 0E4B     		ldr	r3, .L34+12
 619 003c 0022     		movs	r2, #0
 620 003e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 621              		.loc 1 815 0
 622 0040 C046     		nop
 623              	.L33:
 624              		.loc 1 815 0 is_stmt 0 discriminator 1
 625 0042 0A4B     		ldr	r3, .L34+4
 626 0044 1A68     		ldr	r2, [r3]
 627 0046 8023     		movs	r3, #128
 628 0048 9B00     		lsls	r3, r3, #2
 629 004a 1340     		ands	r3, r2
 630 004c F9D0     		beq	.L33
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 631              		.loc 1 820 0 is_stmt 1
 632 004e 074B     		ldr	r3, .L34+4
 633 0050 094A     		ldr	r2, .L34+16
 634 0052 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 635              		.loc 1 823 0
 636 0054 064B     		ldr	r3, .L34+8
 637 0056 BA68     		ldr	r2, [r7, #8]
 638 0058 1A60     		str	r2, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 639              		.loc 1 824 0
 640 005a 034B     		ldr	r3, .L34
 641 005c FA68     		ldr	r2, [r7, #12]
 642 005e 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 643              		.loc 1 825 0
 644 0060 C046     		nop
 645 0062 BD46     		mov	sp, r7
 646 0064 04B0     		add	sp, sp, #16
 647              		@ sp needed
 648 0066 80BD     		pop	{r7, pc}
 649              	.L35:
 650              		.align	2
 651              	.L34:
 652 0068 880F0640 		.word	1074139016
 653 006c 800F0640 		.word	1074139008
 654 0070 00020640 		.word	1074135552
 655 0074 40020640 		.word	1074135616
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 27


 656 0078 F3070000 		.word	2035
 657              		.cfi_endproc
 658              	.LFE9:
 659              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
 660              		.text
 661              	.Letext0:
 662              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 663              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 664              		.section	.debug_info,"",%progbits
 665              	.Ldebug_info0:
 666 0000 77020000 		.4byte	0x277
 667 0004 0400     		.2byte	0x4
 668 0006 00000000 		.4byte	.Ldebug_abbrev0
 669 000a 04       		.byte	0x4
 670 000b 01       		.uleb128 0x1
 671 000c 0B010000 		.4byte	.LASF39
 672 0010 0C       		.byte	0xc
 673 0011 76020000 		.4byte	.LASF40
 674 0015 A5020000 		.4byte	.LASF41
 675 0019 00000000 		.4byte	.Ldebug_ranges0+0
 676 001d 00000000 		.4byte	0
 677 0021 00000000 		.4byte	.Ldebug_line0
 678 0025 02       		.uleb128 0x2
 679 0026 01       		.byte	0x1
 680 0027 06       		.byte	0x6
 681 0028 99020000 		.4byte	.LASF0
 682 002c 02       		.uleb128 0x2
 683 002d 01       		.byte	0x1
 684 002e 08       		.byte	0x8
 685 002f 8E000000 		.4byte	.LASF1
 686 0033 02       		.uleb128 0x2
 687 0034 02       		.byte	0x2
 688 0035 05       		.byte	0x5
 689 0036 44020000 		.4byte	.LASF2
 690 003a 02       		.uleb128 0x2
 691 003b 02       		.byte	0x2
 692 003c 07       		.byte	0x7
 693 003d D6000000 		.4byte	.LASF3
 694 0041 02       		.uleb128 0x2
 695 0042 04       		.byte	0x4
 696 0043 05       		.byte	0x5
 697 0044 4E020000 		.4byte	.LASF4
 698 0048 02       		.uleb128 0x2
 699 0049 04       		.byte	0x4
 700 004a 07       		.byte	0x7
 701 004b B6000000 		.4byte	.LASF5
 702 004f 02       		.uleb128 0x2
 703 0050 08       		.byte	0x8
 704 0051 05       		.byte	0x5
 705 0052 00000000 		.4byte	.LASF6
 706 0056 02       		.uleb128 0x2
 707 0057 08       		.byte	0x8
 708 0058 07       		.byte	0x7
 709 0059 FA010000 		.4byte	.LASF7
 710 005d 03       		.uleb128 0x3
 711 005e 04       		.byte	0x4
 712 005f 05       		.byte	0x5
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 28


 713 0060 696E7400 		.ascii	"int\000"
 714 0064 02       		.uleb128 0x2
 715 0065 04       		.byte	0x4
 716 0066 07       		.byte	0x7
 717 0067 D7010000 		.4byte	.LASF8
 718 006b 04       		.uleb128 0x4
 719 006c C9010000 		.4byte	.LASF9
 720 0070 02       		.byte	0x2
 721 0071 E501     		.2byte	0x1e5
 722 0073 3A000000 		.4byte	0x3a
 723 0077 04       		.uleb128 0x4
 724 0078 D0010000 		.4byte	.LASF10
 725 007c 02       		.byte	0x2
 726 007d E601     		.2byte	0x1e6
 727 007f 48000000 		.4byte	0x48
 728 0083 02       		.uleb128 0x2
 729 0084 04       		.byte	0x4
 730 0085 04       		.byte	0x4
 731 0086 3E000000 		.4byte	.LASF11
 732 008a 02       		.uleb128 0x2
 733 008b 08       		.byte	0x8
 734 008c 04       		.byte	0x4
 735 008d AC010000 		.4byte	.LASF12
 736 0091 04       		.uleb128 0x4
 737 0092 9C000000 		.4byte	.LASF13
 738 0096 02       		.byte	0x2
 739 0097 F501     		.2byte	0x1f5
 740 0099 9D000000 		.4byte	0x9d
 741 009d 02       		.uleb128 0x2
 742 009e 01       		.byte	0x1
 743 009f 08       		.byte	0x8
 744 00a0 3F020000 		.4byte	.LASF14
 745 00a4 04       		.uleb128 0x4
 746 00a5 0E000000 		.4byte	.LASF15
 747 00a9 02       		.byte	0x2
 748 00aa 9002     		.2byte	0x290
 749 00ac B0000000 		.4byte	0xb0
 750 00b0 05       		.uleb128 0x5
 751 00b1 77000000 		.4byte	0x77
 752 00b5 02       		.uleb128 0x2
 753 00b6 08       		.byte	0x8
 754 00b7 04       		.byte	0x4
 755 00b8 6A020000 		.4byte	.LASF16
 756 00bc 02       		.uleb128 0x2
 757 00bd 04       		.byte	0x4
 758 00be 07       		.byte	0x7
 759 00bf 2B020000 		.4byte	.LASF17
 760 00c3 06       		.uleb128 0x6
 761 00c4 E4010000 		.4byte	.LASF18
 762 00c8 01       		.byte	0x1
 763 00c9 F7       		.byte	0xf7
 764 00ca 00000000 		.4byte	.LFB0
 765 00ce BC000000 		.4byte	.LFE0-.LFB0
 766 00d2 01       		.uleb128 0x1
 767 00d3 9C       		.byte	0x9c
 768 00d4 07       		.uleb128 0x7
 769 00d5 A2000000 		.4byte	.LASF19
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 29


 770 00d9 01       		.byte	0x1
 771 00da 3D01     		.2byte	0x13d
 772 00dc 00000000 		.4byte	.LFB1
 773 00e0 30000000 		.4byte	.LFE1-.LFB1
 774 00e4 01       		.uleb128 0x1
 775 00e5 9C       		.byte	0x9c
 776 00e6 07       		.uleb128 0x7
 777 00e7 C8000000 		.4byte	.LASF20
 778 00eb 01       		.byte	0x1
 779 00ec 7101     		.2byte	0x171
 780 00ee 00000000 		.4byte	.LFB2
 781 00f2 34000000 		.4byte	.LFE2-.LFB2
 782 00f6 01       		.uleb128 0x1
 783 00f7 9C       		.byte	0x9c
 784 00f8 08       		.uleb128 0x8
 785 00f9 B3010000 		.4byte	.LASF21
 786 00fd 01       		.byte	0x1
 787 00fe B101     		.2byte	0x1b1
 788 0100 00000000 		.4byte	.LFB3
 789 0104 34000000 		.4byte	.LFE3-.LFB3
 790 0108 01       		.uleb128 0x1
 791 0109 9C       		.byte	0x9c
 792 010a 2D010000 		.4byte	0x12d
 793 010e 09       		.uleb128 0x9
 794 010f F2010000 		.4byte	.LASF23
 795 0113 01       		.byte	0x1
 796 0114 B101     		.2byte	0x1b1
 797 0116 77000000 		.4byte	0x77
 798 011a 02       		.uleb128 0x2
 799 011b 91       		.byte	0x91
 800 011c 6C       		.sleb128 -20
 801 011d 0A       		.uleb128 0xa
 802 011e 61020000 		.4byte	.LASF25
 803 0122 01       		.byte	0x1
 804 0123 B301     		.2byte	0x1b3
 805 0125 77000000 		.4byte	0x77
 806 0129 02       		.uleb128 0x2
 807 012a 91       		.byte	0x91
 808 012b 74       		.sleb128 -12
 809 012c 00       		.byte	0
 810 012d 08       		.uleb128 0x8
 811 012e 24000000 		.4byte	.LASF22
 812 0132 01       		.byte	0x1
 813 0133 CA01     		.2byte	0x1ca
 814 0135 00000000 		.4byte	.LFB4
 815 0139 38000000 		.4byte	.LFE4-.LFB4
 816 013d 01       		.uleb128 0x1
 817 013e 9C       		.byte	0x9c
 818 013f 62010000 		.4byte	0x162
 819 0143 09       		.uleb128 0x9
 820 0144 A0010000 		.4byte	.LASF24
 821 0148 01       		.byte	0x1
 822 0149 CA01     		.2byte	0x1ca
 823 014b 77000000 		.4byte	0x77
 824 014f 02       		.uleb128 0x2
 825 0150 91       		.byte	0x91
 826 0151 6C       		.sleb128 -20
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 30


 827 0152 0A       		.uleb128 0xa
 828 0153 61020000 		.4byte	.LASF25
 829 0157 01       		.byte	0x1
 830 0158 CC01     		.2byte	0x1cc
 831 015a 77000000 		.4byte	0x77
 832 015e 02       		.uleb128 0x2
 833 015f 91       		.byte	0x91
 834 0160 74       		.sleb128 -12
 835 0161 00       		.byte	0
 836 0162 0B       		.uleb128 0xb
 837 0163 1A020000 		.4byte	.LASF27
 838 0167 01       		.byte	0x1
 839 0168 F201     		.2byte	0x1f2
 840 016a 77000000 		.4byte	0x77
 841 016e 00000000 		.4byte	.LFB5
 842 0172 40000000 		.4byte	.LFE5-.LFB5
 843 0176 01       		.uleb128 0x1
 844 0177 9C       		.byte	0x9c
 845 0178 8C010000 		.4byte	0x18c
 846 017c 0A       		.uleb128 0xa
 847 017d 99010000 		.4byte	.LASF26
 848 0181 01       		.byte	0x1
 849 0182 F401     		.2byte	0x1f4
 850 0184 77000000 		.4byte	0x77
 851 0188 02       		.uleb128 0x2
 852 0189 91       		.byte	0x91
 853 018a 74       		.sleb128 -12
 854 018b 00       		.byte	0
 855 018c 0B       		.uleb128 0xb
 856 018d FA000000 		.4byte	.LASF28
 857 0191 01       		.byte	0x1
 858 0192 2402     		.2byte	0x224
 859 0194 77000000 		.4byte	0x77
 860 0198 00000000 		.4byte	.LFB6
 861 019c 50000000 		.4byte	.LFE6-.LFB6
 862 01a0 01       		.uleb128 0x1
 863 01a1 9C       		.byte	0x9c
 864 01a2 C5010000 		.4byte	0x1c5
 865 01a6 0A       		.uleb128 0xa
 866 01a7 99010000 		.4byte	.LASF26
 867 01ab 01       		.byte	0x1
 868 01ac 2602     		.2byte	0x226
 869 01ae 77000000 		.4byte	0x77
 870 01b2 02       		.uleb128 0x2
 871 01b3 91       		.byte	0x91
 872 01b4 74       		.sleb128 -12
 873 01b5 0A       		.uleb128 0xa
 874 01b6 57020000 		.4byte	.LASF29
 875 01ba 01       		.byte	0x1
 876 01bb 2702     		.2byte	0x227
 877 01bd 77000000 		.4byte	0x77
 878 01c1 02       		.uleb128 0x2
 879 01c2 91       		.byte	0x91
 880 01c3 70       		.sleb128 -16
 881 01c4 00       		.byte	0
 882 01c5 0C       		.uleb128 0xc
 883 01c6 4B000000 		.4byte	.LASF30
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 31


 884 01ca 01       		.byte	0x1
 885 01cb A802     		.2byte	0x2a8
 886 01cd 00000000 		.4byte	.LFB7
 887 01d1 36000000 		.4byte	.LFE7-.LFB7
 888 01d5 01       		.uleb128 0x1
 889 01d6 9C       		.byte	0x9c
 890 01d7 FA010000 		.4byte	0x1fa
 891 01db 09       		.uleb128 0x9
 892 01dc 44000000 		.4byte	.LASF31
 893 01e0 01       		.byte	0x1
 894 01e1 A802     		.2byte	0x2a8
 895 01e3 FA010000 		.4byte	0x1fa
 896 01e7 02       		.uleb128 0x2
 897 01e8 91       		.byte	0x91
 898 01e9 6C       		.sleb128 -20
 899 01ea 0A       		.uleb128 0xa
 900 01eb 11020000 		.4byte	.LASF32
 901 01ef 01       		.byte	0x1
 902 01f0 AA02     		.2byte	0x2aa
 903 01f2 77000000 		.4byte	0x77
 904 01f6 02       		.uleb128 0x2
 905 01f7 91       		.byte	0x91
 906 01f8 74       		.sleb128 -12
 907 01f9 00       		.byte	0
 908 01fa 0D       		.uleb128 0xd
 909 01fb 04       		.byte	0x4
 910 01fc 00020000 		.4byte	0x200
 911 0200 0E       		.uleb128 0xe
 912 0201 91000000 		.4byte	0x91
 913 0205 0C       		.uleb128 0xc
 914 0206 E9000000 		.4byte	.LASF33
 915 020a 01       		.byte	0x1
 916 020b C302     		.2byte	0x2c3
 917 020d 00000000 		.4byte	.LFB8
 918 0211 24000000 		.4byte	.LFE8-.LFB8
 919 0215 01       		.uleb128 0x1
 920 0216 9C       		.byte	0x9c
 921 0217 2B020000 		.4byte	0x22b
 922 021b 09       		.uleb128 0x9
 923 021c 34020000 		.4byte	.LASF34
 924 0220 01       		.byte	0x1
 925 0221 C302     		.2byte	0x2c3
 926 0223 77000000 		.4byte	0x77
 927 0227 02       		.uleb128 0x2
 928 0228 91       		.byte	0x91
 929 0229 74       		.sleb128 -12
 930 022a 00       		.byte	0
 931 022b 08       		.uleb128 0x8
 932 022c 69000000 		.4byte	.LASF35
 933 0230 01       		.byte	0x1
 934 0231 1A03     		.2byte	0x31a
 935 0233 00000000 		.4byte	.LFB9
 936 0237 7C000000 		.4byte	.LFE9-.LFB9
 937 023b 01       		.uleb128 0x1
 938 023c 9C       		.byte	0x9c
 939 023d 6F020000 		.4byte	0x26f
 940 0241 09       		.uleb128 0x9
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 32


 941 0242 5E000000 		.4byte	.LASF36
 942 0246 01       		.byte	0x1
 943 0247 1A03     		.2byte	0x31a
 944 0249 77000000 		.4byte	0x77
 945 024d 02       		.uleb128 0x2
 946 024e 91       		.byte	0x91
 947 024f 6C       		.sleb128 -20
 948 0250 0A       		.uleb128 0xa
 949 0251 EE020000 		.4byte	.LASF37
 950 0255 01       		.byte	0x1
 951 0256 1C03     		.2byte	0x31c
 952 0258 77000000 		.4byte	0x77
 953 025c 02       		.uleb128 0x2
 954 025d 91       		.byte	0x91
 955 025e 70       		.sleb128 -16
 956 025f 0A       		.uleb128 0xa
 957 0260 84000000 		.4byte	.LASF38
 958 0264 01       		.byte	0x1
 959 0265 1D03     		.2byte	0x31d
 960 0267 77000000 		.4byte	0x77
 961 026b 02       		.uleb128 0x2
 962 026c 91       		.byte	0x91
 963 026d 74       		.sleb128 -12
 964 026e 00       		.byte	0
 965 026f 0F       		.uleb128 0xf
 966 0270 14000000 		.4byte	.LASF42
 967 0274 03       		.byte	0x3
 968 0275 5B       		.byte	0x5b
 969 0276 6B000000 		.4byte	0x6b
 970 027a 00       		.byte	0
 971              		.section	.debug_abbrev,"",%progbits
 972              	.Ldebug_abbrev0:
 973 0000 01       		.uleb128 0x1
 974 0001 11       		.uleb128 0x11
 975 0002 01       		.byte	0x1
 976 0003 25       		.uleb128 0x25
 977 0004 0E       		.uleb128 0xe
 978 0005 13       		.uleb128 0x13
 979 0006 0B       		.uleb128 0xb
 980 0007 03       		.uleb128 0x3
 981 0008 0E       		.uleb128 0xe
 982 0009 1B       		.uleb128 0x1b
 983 000a 0E       		.uleb128 0xe
 984 000b 55       		.uleb128 0x55
 985 000c 17       		.uleb128 0x17
 986 000d 11       		.uleb128 0x11
 987 000e 01       		.uleb128 0x1
 988 000f 10       		.uleb128 0x10
 989 0010 17       		.uleb128 0x17
 990 0011 00       		.byte	0
 991 0012 00       		.byte	0
 992 0013 02       		.uleb128 0x2
 993 0014 24       		.uleb128 0x24
 994 0015 00       		.byte	0
 995 0016 0B       		.uleb128 0xb
 996 0017 0B       		.uleb128 0xb
 997 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 33


 998 0019 0B       		.uleb128 0xb
 999 001a 03       		.uleb128 0x3
 1000 001b 0E       		.uleb128 0xe
 1001 001c 00       		.byte	0
 1002 001d 00       		.byte	0
 1003 001e 03       		.uleb128 0x3
 1004 001f 24       		.uleb128 0x24
 1005 0020 00       		.byte	0
 1006 0021 0B       		.uleb128 0xb
 1007 0022 0B       		.uleb128 0xb
 1008 0023 3E       		.uleb128 0x3e
 1009 0024 0B       		.uleb128 0xb
 1010 0025 03       		.uleb128 0x3
 1011 0026 08       		.uleb128 0x8
 1012 0027 00       		.byte	0
 1013 0028 00       		.byte	0
 1014 0029 04       		.uleb128 0x4
 1015 002a 16       		.uleb128 0x16
 1016 002b 00       		.byte	0
 1017 002c 03       		.uleb128 0x3
 1018 002d 0E       		.uleb128 0xe
 1019 002e 3A       		.uleb128 0x3a
 1020 002f 0B       		.uleb128 0xb
 1021 0030 3B       		.uleb128 0x3b
 1022 0031 05       		.uleb128 0x5
 1023 0032 49       		.uleb128 0x49
 1024 0033 13       		.uleb128 0x13
 1025 0034 00       		.byte	0
 1026 0035 00       		.byte	0
 1027 0036 05       		.uleb128 0x5
 1028 0037 35       		.uleb128 0x35
 1029 0038 00       		.byte	0
 1030 0039 49       		.uleb128 0x49
 1031 003a 13       		.uleb128 0x13
 1032 003b 00       		.byte	0
 1033 003c 00       		.byte	0
 1034 003d 06       		.uleb128 0x6
 1035 003e 2E       		.uleb128 0x2e
 1036 003f 00       		.byte	0
 1037 0040 3F       		.uleb128 0x3f
 1038 0041 19       		.uleb128 0x19
 1039 0042 03       		.uleb128 0x3
 1040 0043 0E       		.uleb128 0xe
 1041 0044 3A       		.uleb128 0x3a
 1042 0045 0B       		.uleb128 0xb
 1043 0046 3B       		.uleb128 0x3b
 1044 0047 0B       		.uleb128 0xb
 1045 0048 27       		.uleb128 0x27
 1046 0049 19       		.uleb128 0x19
 1047 004a 11       		.uleb128 0x11
 1048 004b 01       		.uleb128 0x1
 1049 004c 12       		.uleb128 0x12
 1050 004d 06       		.uleb128 0x6
 1051 004e 40       		.uleb128 0x40
 1052 004f 18       		.uleb128 0x18
 1053 0050 9742     		.uleb128 0x2117
 1054 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 34


 1055 0053 00       		.byte	0
 1056 0054 00       		.byte	0
 1057 0055 07       		.uleb128 0x7
 1058 0056 2E       		.uleb128 0x2e
 1059 0057 00       		.byte	0
 1060 0058 3F       		.uleb128 0x3f
 1061 0059 19       		.uleb128 0x19
 1062 005a 03       		.uleb128 0x3
 1063 005b 0E       		.uleb128 0xe
 1064 005c 3A       		.uleb128 0x3a
 1065 005d 0B       		.uleb128 0xb
 1066 005e 3B       		.uleb128 0x3b
 1067 005f 05       		.uleb128 0x5
 1068 0060 27       		.uleb128 0x27
 1069 0061 19       		.uleb128 0x19
 1070 0062 11       		.uleb128 0x11
 1071 0063 01       		.uleb128 0x1
 1072 0064 12       		.uleb128 0x12
 1073 0065 06       		.uleb128 0x6
 1074 0066 40       		.uleb128 0x40
 1075 0067 18       		.uleb128 0x18
 1076 0068 9742     		.uleb128 0x2117
 1077 006a 19       		.uleb128 0x19
 1078 006b 00       		.byte	0
 1079 006c 00       		.byte	0
 1080 006d 08       		.uleb128 0x8
 1081 006e 2E       		.uleb128 0x2e
 1082 006f 01       		.byte	0x1
 1083 0070 3F       		.uleb128 0x3f
 1084 0071 19       		.uleb128 0x19
 1085 0072 03       		.uleb128 0x3
 1086 0073 0E       		.uleb128 0xe
 1087 0074 3A       		.uleb128 0x3a
 1088 0075 0B       		.uleb128 0xb
 1089 0076 3B       		.uleb128 0x3b
 1090 0077 05       		.uleb128 0x5
 1091 0078 27       		.uleb128 0x27
 1092 0079 19       		.uleb128 0x19
 1093 007a 11       		.uleb128 0x11
 1094 007b 01       		.uleb128 0x1
 1095 007c 12       		.uleb128 0x12
 1096 007d 06       		.uleb128 0x6
 1097 007e 40       		.uleb128 0x40
 1098 007f 18       		.uleb128 0x18
 1099 0080 9742     		.uleb128 0x2117
 1100 0082 19       		.uleb128 0x19
 1101 0083 01       		.uleb128 0x1
 1102 0084 13       		.uleb128 0x13
 1103 0085 00       		.byte	0
 1104 0086 00       		.byte	0
 1105 0087 09       		.uleb128 0x9
 1106 0088 05       		.uleb128 0x5
 1107 0089 00       		.byte	0
 1108 008a 03       		.uleb128 0x3
 1109 008b 0E       		.uleb128 0xe
 1110 008c 3A       		.uleb128 0x3a
 1111 008d 0B       		.uleb128 0xb
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 35


 1112 008e 3B       		.uleb128 0x3b
 1113 008f 05       		.uleb128 0x5
 1114 0090 49       		.uleb128 0x49
 1115 0091 13       		.uleb128 0x13
 1116 0092 02       		.uleb128 0x2
 1117 0093 18       		.uleb128 0x18
 1118 0094 00       		.byte	0
 1119 0095 00       		.byte	0
 1120 0096 0A       		.uleb128 0xa
 1121 0097 34       		.uleb128 0x34
 1122 0098 00       		.byte	0
 1123 0099 03       		.uleb128 0x3
 1124 009a 0E       		.uleb128 0xe
 1125 009b 3A       		.uleb128 0x3a
 1126 009c 0B       		.uleb128 0xb
 1127 009d 3B       		.uleb128 0x3b
 1128 009e 05       		.uleb128 0x5
 1129 009f 49       		.uleb128 0x49
 1130 00a0 13       		.uleb128 0x13
 1131 00a1 02       		.uleb128 0x2
 1132 00a2 18       		.uleb128 0x18
 1133 00a3 00       		.byte	0
 1134 00a4 00       		.byte	0
 1135 00a5 0B       		.uleb128 0xb
 1136 00a6 2E       		.uleb128 0x2e
 1137 00a7 01       		.byte	0x1
 1138 00a8 3F       		.uleb128 0x3f
 1139 00a9 19       		.uleb128 0x19
 1140 00aa 03       		.uleb128 0x3
 1141 00ab 0E       		.uleb128 0xe
 1142 00ac 3A       		.uleb128 0x3a
 1143 00ad 0B       		.uleb128 0xb
 1144 00ae 3B       		.uleb128 0x3b
 1145 00af 05       		.uleb128 0x5
 1146 00b0 27       		.uleb128 0x27
 1147 00b1 19       		.uleb128 0x19
 1148 00b2 49       		.uleb128 0x49
 1149 00b3 13       		.uleb128 0x13
 1150 00b4 11       		.uleb128 0x11
 1151 00b5 01       		.uleb128 0x1
 1152 00b6 12       		.uleb128 0x12
 1153 00b7 06       		.uleb128 0x6
 1154 00b8 40       		.uleb128 0x40
 1155 00b9 18       		.uleb128 0x18
 1156 00ba 9642     		.uleb128 0x2116
 1157 00bc 19       		.uleb128 0x19
 1158 00bd 01       		.uleb128 0x1
 1159 00be 13       		.uleb128 0x13
 1160 00bf 00       		.byte	0
 1161 00c0 00       		.byte	0
 1162 00c1 0C       		.uleb128 0xc
 1163 00c2 2E       		.uleb128 0x2e
 1164 00c3 01       		.byte	0x1
 1165 00c4 3F       		.uleb128 0x3f
 1166 00c5 19       		.uleb128 0x19
 1167 00c6 03       		.uleb128 0x3
 1168 00c7 0E       		.uleb128 0xe
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 36


 1169 00c8 3A       		.uleb128 0x3a
 1170 00c9 0B       		.uleb128 0xb
 1171 00ca 3B       		.uleb128 0x3b
 1172 00cb 05       		.uleb128 0x5
 1173 00cc 27       		.uleb128 0x27
 1174 00cd 19       		.uleb128 0x19
 1175 00ce 11       		.uleb128 0x11
 1176 00cf 01       		.uleb128 0x1
 1177 00d0 12       		.uleb128 0x12
 1178 00d1 06       		.uleb128 0x6
 1179 00d2 40       		.uleb128 0x40
 1180 00d3 18       		.uleb128 0x18
 1181 00d4 9642     		.uleb128 0x2116
 1182 00d6 19       		.uleb128 0x19
 1183 00d7 01       		.uleb128 0x1
 1184 00d8 13       		.uleb128 0x13
 1185 00d9 00       		.byte	0
 1186 00da 00       		.byte	0
 1187 00db 0D       		.uleb128 0xd
 1188 00dc 0F       		.uleb128 0xf
 1189 00dd 00       		.byte	0
 1190 00de 0B       		.uleb128 0xb
 1191 00df 0B       		.uleb128 0xb
 1192 00e0 49       		.uleb128 0x49
 1193 00e1 13       		.uleb128 0x13
 1194 00e2 00       		.byte	0
 1195 00e3 00       		.byte	0
 1196 00e4 0E       		.uleb128 0xe
 1197 00e5 26       		.uleb128 0x26
 1198 00e6 00       		.byte	0
 1199 00e7 49       		.uleb128 0x49
 1200 00e8 13       		.uleb128 0x13
 1201 00e9 00       		.byte	0
 1202 00ea 00       		.byte	0
 1203 00eb 0F       		.uleb128 0xf
 1204 00ec 34       		.uleb128 0x34
 1205 00ed 00       		.byte	0
 1206 00ee 03       		.uleb128 0x3
 1207 00ef 0E       		.uleb128 0xe
 1208 00f0 3A       		.uleb128 0x3a
 1209 00f1 0B       		.uleb128 0xb
 1210 00f2 3B       		.uleb128 0x3b
 1211 00f3 0B       		.uleb128 0xb
 1212 00f4 49       		.uleb128 0x49
 1213 00f5 13       		.uleb128 0x13
 1214 00f6 3F       		.uleb128 0x3f
 1215 00f7 19       		.uleb128 0x19
 1216 00f8 3C       		.uleb128 0x3c
 1217 00f9 19       		.uleb128 0x19
 1218 00fa 00       		.byte	0
 1219 00fb 00       		.byte	0
 1220 00fc 00       		.byte	0
 1221              		.section	.debug_aranges,"",%progbits
 1222 0000 64000000 		.4byte	0x64
 1223 0004 0200     		.2byte	0x2
 1224 0006 00000000 		.4byte	.Ldebug_info0
 1225 000a 04       		.byte	0x4
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 37


 1226 000b 00       		.byte	0
 1227 000c 0000     		.2byte	0
 1228 000e 0000     		.2byte	0
 1229 0010 00000000 		.4byte	.LFB0
 1230 0014 BC000000 		.4byte	.LFE0-.LFB0
 1231 0018 00000000 		.4byte	.LFB1
 1232 001c 30000000 		.4byte	.LFE1-.LFB1
 1233 0020 00000000 		.4byte	.LFB2
 1234 0024 34000000 		.4byte	.LFE2-.LFB2
 1235 0028 00000000 		.4byte	.LFB3
 1236 002c 34000000 		.4byte	.LFE3-.LFB3
 1237 0030 00000000 		.4byte	.LFB4
 1238 0034 38000000 		.4byte	.LFE4-.LFB4
 1239 0038 00000000 		.4byte	.LFB5
 1240 003c 40000000 		.4byte	.LFE5-.LFB5
 1241 0040 00000000 		.4byte	.LFB6
 1242 0044 50000000 		.4byte	.LFE6-.LFB6
 1243 0048 00000000 		.4byte	.LFB7
 1244 004c 36000000 		.4byte	.LFE7-.LFB7
 1245 0050 00000000 		.4byte	.LFB8
 1246 0054 24000000 		.4byte	.LFE8-.LFB8
 1247 0058 00000000 		.4byte	.LFB9
 1248 005c 7C000000 		.4byte	.LFE9-.LFB9
 1249 0060 00000000 		.4byte	0
 1250 0064 00000000 		.4byte	0
 1251              		.section	.debug_ranges,"",%progbits
 1252              	.Ldebug_ranges0:
 1253 0000 00000000 		.4byte	.LFB0
 1254 0004 BC000000 		.4byte	.LFE0
 1255 0008 00000000 		.4byte	.LFB1
 1256 000c 30000000 		.4byte	.LFE1
 1257 0010 00000000 		.4byte	.LFB2
 1258 0014 34000000 		.4byte	.LFE2
 1259 0018 00000000 		.4byte	.LFB3
 1260 001c 34000000 		.4byte	.LFE3
 1261 0020 00000000 		.4byte	.LFB4
 1262 0024 38000000 		.4byte	.LFE4
 1263 0028 00000000 		.4byte	.LFB5
 1264 002c 40000000 		.4byte	.LFE5
 1265 0030 00000000 		.4byte	.LFB6
 1266 0034 50000000 		.4byte	.LFE6
 1267 0038 00000000 		.4byte	.LFB7
 1268 003c 36000000 		.4byte	.LFE7
 1269 0040 00000000 		.4byte	.LFB8
 1270 0044 24000000 		.4byte	.LFE8
 1271 0048 00000000 		.4byte	.LFB9
 1272 004c 7C000000 		.4byte	.LFE9
 1273 0050 00000000 		.4byte	0
 1274 0054 00000000 		.4byte	0
 1275              		.section	.debug_line,"",%progbits
 1276              	.Ldebug_line0:
 1277 0000 5B010000 		.section	.debug_str,"MS",%progbits,1
 1277      02005400 
 1277      00000201 
 1277      FB0E0D00 
 1277      01010101 
 1278              	.LASF6:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 38


 1279 0000 6C6F6E67 		.ascii	"long long int\000"
 1279      206C6F6E 
 1279      6720696E 
 1279      7400
 1280              	.LASF15:
 1281 000e 72656733 		.ascii	"reg32\000"
 1281      3200
 1282              	.LASF42:
 1283 0014 55415254 		.ascii	"UART_IntrTxMask\000"
 1283      5F496E74 
 1283      7254784D 
 1283      61736B00 
 1284              	.LASF22:
 1285 0024 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1285      5F556172 
 1285      74536574 
 1285      52784164 
 1285      64726573 
 1286              	.LASF11:
 1287 003e 666C6F61 		.ascii	"float\000"
 1287      7400
 1288              	.LASF31:
 1289 0044 73747269 		.ascii	"string\000"
 1289      6E6700
 1290              	.LASF30:
 1291 004b 55415254 		.ascii	"UART_UartPutString\000"
 1291      5F556172 
 1291      74507574 
 1291      53747269 
 1291      6E6700
 1292              	.LASF36:
 1293 005e 62726561 		.ascii	"breakWidth\000"
 1293      6B576964 
 1293      746800
 1294              	.LASF35:
 1295 0069 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1295      5F556172 
 1295      7453656E 
 1295      64427265 
 1295      616B426C 
 1296              	.LASF38:
 1297 0084 7478496E 		.ascii	"txIntrReg\000"
 1297      74725265 
 1297      6700
 1298              	.LASF1:
 1299 008e 756E7369 		.ascii	"unsigned char\000"
 1299      676E6564 
 1299      20636861 
 1299      7200
 1300              	.LASF13:
 1301 009c 63686172 		.ascii	"char8\000"
 1301      3800
 1302              	.LASF19:
 1303 00a2 55415254 		.ascii	"UART_UartPostEnable\000"
 1303      5F556172 
 1303      74506F73 
 1303      74456E61 
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 39


 1303      626C6500 
 1304              	.LASF5:
 1305 00b6 6C6F6E67 		.ascii	"long unsigned int\000"
 1305      20756E73 
 1305      69676E65 
 1305      6420696E 
 1305      7400
 1306              	.LASF20:
 1307 00c8 55415254 		.ascii	"UART_UartStop\000"
 1307      5F556172 
 1307      7453746F 
 1307      7000
 1308              	.LASF3:
 1309 00d6 73686F72 		.ascii	"short unsigned int\000"
 1309      7420756E 
 1309      7369676E 
 1309      65642069 
 1309      6E7400
 1310              	.LASF33:
 1311 00e9 55415254 		.ascii	"UART_UartPutCRLF\000"
 1311      5F556172 
 1311      74507574 
 1311      43524C46 
 1311      00
 1312              	.LASF28:
 1313 00fa 55415254 		.ascii	"UART_UartGetByte\000"
 1313      5F556172 
 1313      74476574 
 1313      42797465 
 1313      00
 1314              	.LASF39:
 1315 010b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1315      43313120 
 1315      352E342E 
 1315      31203230 
 1315      31363036 
 1316 013e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1316      20726576 
 1316      6973696F 
 1316      6E203233 
 1316      37373135 
 1317 0171 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1317      66756E63 
 1317      74696F6E 
 1317      2D736563 
 1317      74696F6E 
 1318              	.LASF26:
 1319 0199 72784461 		.ascii	"rxData\000"
 1319      746100
 1320              	.LASF24:
 1321 01a0 61646472 		.ascii	"addressMask\000"
 1321      6573734D 
 1321      61736B00 
 1322              	.LASF12:
 1323 01ac 646F7562 		.ascii	"double\000"
 1323      6C6500
 1324              	.LASF21:
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 40


 1325 01b3 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1325      5F556172 
 1325      74536574 
 1325      52784164 
 1325      64726573 
 1326              	.LASF9:
 1327 01c9 75696E74 		.ascii	"uint16\000"
 1327      313600
 1328              	.LASF10:
 1329 01d0 75696E74 		.ascii	"uint32\000"
 1329      333200
 1330              	.LASF8:
 1331 01d7 756E7369 		.ascii	"unsigned int\000"
 1331      676E6564 
 1331      20696E74 
 1331      00
 1332              	.LASF18:
 1333 01e4 55415254 		.ascii	"UART_UartInit\000"
 1333      5F556172 
 1333      74496E69 
 1333      7400
 1334              	.LASF23:
 1335 01f2 61646472 		.ascii	"address\000"
 1335      65737300 
 1336              	.LASF7:
 1337 01fa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1337      206C6F6E 
 1337      6720756E 
 1337      7369676E 
 1337      65642069 
 1338              	.LASF32:
 1339 0211 62756649 		.ascii	"bufIndex\000"
 1339      6E646578 
 1339      00
 1340              	.LASF27:
 1341 021a 55415254 		.ascii	"UART_UartGetChar\000"
 1341      5F556172 
 1341      74476574 
 1341      43686172 
 1341      00
 1342              	.LASF17:
 1343 022b 73697A65 		.ascii	"sizetype\000"
 1343      74797065 
 1343      00
 1344              	.LASF34:
 1345 0234 74784461 		.ascii	"txDataByte\000"
 1345      74614279 
 1345      746500
 1346              	.LASF14:
 1347 023f 63686172 		.ascii	"char\000"
 1347      00
 1348              	.LASF2:
 1349 0244 73686F72 		.ascii	"short int\000"
 1349      7420696E 
 1349      7400
 1350              	.LASF4:
 1351 024e 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\quint\AppData\Local\Temp\ccR9G78L.s 			page 41


 1351      20696E74 
 1351      00
 1352              	.LASF29:
 1353 0257 746D7053 		.ascii	"tmpStatus\000"
 1353      74617475 
 1353      7300
 1354              	.LASF25:
 1355 0261 6D617463 		.ascii	"matchReg\000"
 1355      68526567 
 1355      00
 1356              	.LASF16:
 1357 026a 6C6F6E67 		.ascii	"long double\000"
 1357      20646F75 
 1357      626C6500 
 1358              	.LASF40:
 1359 0276 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1359      72617465 
 1359      645F536F 
 1359      75726365 
 1359      5C50536F 
 1360              	.LASF0:
 1361 0299 7369676E 		.ascii	"signed char\000"
 1361      65642063 
 1361      68617200 
 1362              	.LASF41:
 1363 02a5 433A5C55 		.ascii	"C:\\Users\\quint\\Downloads\\Ultrasonic Ranger.cyds"
 1363      73657273 
 1363      5C717569 
 1363      6E745C44 
 1363      6F776E6C 
 1364 02d4 6E5C556C 		.ascii	"n\\Ultrasonic Ranger.cydsn\000"
 1364      74726173 
 1364      6F6E6963 
 1364      2052616E 
 1364      6765722E 
 1365              	.LASF37:
 1366 02ee 74784374 		.ascii	"txCtrlReg\000"
 1366      726C5265 
 1366      6700
 1367              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
